name: Mirror SVN to Git

on:
  workflow_dispatch: # Allows to run manually also

jobs:
  mirrorSVN:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v4
      with:
        path: git-repo

    - name: Install SVN
      run: sudo apt-get install -y subversion

    - name: Install Git LFS
      run: |
        sudo apt-get install -y git-lfs
        git lfs install
        
    - name: Configure Checked-Out Git repository
      run: |
        cd git-repo
        git config --global user.name "${{ secrets.GIT_USERNAME }}"
        git config --global user.email "${{ secrets.GIT_EMAIL }}"
 
    - name: Set Branch Name
      run: |
        echo "BRANCH_NAME=automation-branch-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
        echo "Done Setting Name As: ${{ env.BRANCH_NAME }} or $BRANCH_NAME"

    - name: Confirm Name
      run: |
        echo "Done Setting Name As: ${{ env.BRANCH_NAME }}"

    - name: Clone SVN repository
      run: |
        svn checkout --username ${{ secrets.SVN_USERNAME }} --password ${{ secrets.SVN_PASSWORD }} https://svn.code.sf.net/p/cbecc-com/code/branches/CBECC-Com_MFamRestructure/ svn-repo
  
    - name: Generate SVN log
      run: |
        cd svn-repo
        svn log -r {2024-08-01}:HEAD --xml > svn_log.xml

    - name: Upload SVN log artifact
      uses: actions/upload-artifact@v4
      with:
        name: svn-log
        path: svn-repo/svn_log.xml
        
    - name: Check to see if there are new commits
      run: |
        cd git-repo
        if [ -z "$(git status --porcelain)" ]; then
          echo "HAS_UPDATES=yes" >> $GITHUB_ENV
        else
          echo "HAS_UPDATES=no" >> $GITHUB_ENV
        fi
        echo "Does repo have updates: ${{ env.HAS_UPDATES }} or $HAS_UPDATES"

    - name: Commit SVN Commits to Git
      if: ${{ env.HAS_UPDATES }} == 'yes'
      run: |
        cd svn-repo
        svn log -r {2024-08-01}:HEAD --xml > svn_log.xml
        while read -r line; do
          if [[ $line == "<msg>"* ]]; then
            COMMIT_MSG=$(echo $line | sed -e 's/<[^>]*>//g')
          elif [[ $line == "<author>"* ]]; then
            AUTHOR=$(echo $line | sed -e 's/<[^>]*>//g')
          elif [[ $line == "<revision>"* ]]; then
            REV_NUMBER=$(echo $line | sed -e 's/<[^>]*>//g')
          elif [[ $line == "</logentry>"* ]]; then
            svn update -r $REV_NUMBER
            cp -R svn-repo/* git-repo/
            cd ../git-repo
            git add .
            git commit --author="$AUTHOR" -m "$COMMIT_MSG"
            cd ../svn-repo
          fi
        done < ../svn-repo/svn_log.xml
        
    - name: Create Pull Request
      if: ${{ env.HAS_UPDATES }} == 'yes'
      uses: peter-evans/create-pull-request@v7
      with:
        path: git-repo
        branch: ${{ env.BRANCH_NAME }}
        title: "Automated Pull Request"
        body: "This pull request was created automatically by GitHub Actions. It mirrors the SVN repository to Git with no history."