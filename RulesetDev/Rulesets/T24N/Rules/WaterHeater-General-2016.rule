// General Data for Water Heating
// For all Space Types with Hot Water Heating Rates
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//


// -------------- Total Water Heater Capacity Rated --------------------
RULE NEW Bldg:NonResBaseWtrHtrCapRtd
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaseWaterHeaterCapacityRated
  DESCRIPTION
    "The heating capacity of a water heater at the rated conditions specified
     in DOE 10 CFR Part 430 or ANSI Z21.10."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  MAXIMUM
    100000000
  UNITS
    Btu/hr
  SIZING_PROPOSED
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
    then 
      UNDEFINED // PROPOSED
    else if( Proj:SHWBothBaseline )
    then 
      Int(SumChildrenIf(Spc:HotWtrHtgCapRtd, Spc:IsNonRes = 1))  //BASELINE  //Spc:HotWtrHtgRt > 0
    else if( Proj:SHWNone )
    then 
      UNDEFINED                                         // no DHW modeled
    else 
      UNDEFINED
    endif endif endif
  SIZING_BASELINE
    if( IfValidAnd(u:Proj:ResWtrHtrNonCentralSys = 1) )
    then
	    if( Proj:SHWUserAndBaseline ) 
	    then 
	      SumAll(u:FluidSys:TotFirstHrCap) - ( 8.25 * ( 135 - 55 ) * Bldg:LivingUnitCntRpt  )   //PROPOSED TANK BURNER -> BASELINE SYSTEM
	    else if( Proj:SHWBothBaseline )
	    then
	      Int(SumChildrenIf(Spc:HotWtrHtgCapRtd, Spc:HotWtrHtgRt > 0))  //BASELINE  //Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                   //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif endif
   else
	    if( Proj:SHWUserAndBaseline )
	    then 
	      SumAll(u:FluidSys:TotFirstHrCap) * 0.60        // * (8.25 * (135 - 55)) )  //PROPOSED TANK BURNER -> BASELINE SYSTEM
	    else if( Proj:SHWBothBaseline )
	    then
	      Int(SumChildrenIf(Spc:HotWtrHtgCapRtd, Spc:IsNonRes = 1))  //BASELINE  //Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                   //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif endif
   endif    
  ANNUAL_PROPOSED
    zp:NonResBaseWtrHtrCapRtd
  ANNUAL_BASELINE
    zb:NonResBaseWtrHtrCapRtd
ENDRULE

// -------------- Total Water Heater Capacity Rated --------------------
RULE NEW Bldg:ResComboWtrHtrCapRtd
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaseWaterHeaterCapacityRated
  DESCRIPTION
    "The heating capacity of a water heater at the rated conditions specified
     in DOE 10 CFR Part 430 or ANSI Z21.10."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  MAXIMUM
    100000000
  UNITS
    Btu/hr
  SIZING_PROPOSED
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
    then 
      UNDEFINED                                       // User model
    else if( Proj:SHWBothBaseline )
    then 
      Int(SumChildrenIf(Spc:HotWtrHtgCapRtd, Spc:IsResAndCombo = 1))  //BASELINE  //Spc:HotWtrHtgRt > 0
    else if( Proj:SHWNone )
    then 
      UNDEFINED                                       // no DHW modeled
    else 
      UNDEFINED
    endif endif endif
  SIZING_BASELINE
    if( IfValidAnd(u:Proj:ResWtrHtrNonCentralSys = 1) )
    then
	    if( Proj:SHWUserAndBaseline )
	    then 
//	      ( (SumAll(u:FluidSys:TotFirstHrCap) - 1) * (8.25 * (135 - 55)) )  //PROPOSED TANK BURNER -> BASELINE SYSTEM
//	      SumAll(u:FluidSys:TotFirstHrCap) - (8.25 * ( 135 - 55 ) * Bldg:LivingUnitCntRpt  )   //PROPOSED TANK BURNER -> BASELINE SYSTEM
          200000 * Bldg:LivingUnitCntRpt
	    else if ( Proj:SHWBothBaseline )
	    then
	      Int(SumChildrenIf(Spc:HotWtrHtgCapRtd, Spc:HotWtrHtgRt > 0))  //BASELINE  //Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                   // PROPOSED - User model
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif endif
    else
      if( Proj:SHWUserAndBaseline )
	    then 
	      SumAll(u:FluidSys:TotFirstHrCap) * 0.60    //  * (8.25 * (135 - 55)) )  //PROPOSED TANK BURNER -> BASELINE SYSTEM
	    else if( Proj:SHWBothBaseline )
	    then
	      Int(SumChildrenIf(Spc:HotWtrHtgCapRtd, Spc:IsResAndCombo = 1))  //BASELINE  //Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                   // User model
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif endif
	  endif
  ANNUAL_PROPOSED
    zp:ResComboWtrHtrCapRtd
  ANNUAL_BASELINE
    zb:ResComboWtrHtrCapRtd
ENDRULE


// -------------- Fluid Segment Water Heater Capacity Rated --------------------
RULE NEW FluidSeg:TotFluidSegCapRtd
  DATATYPE
    Float
  LONGFORM
    TotalFluidSegmentCapacityRated
  DESCRIPTION
    "The heating capacity of a water heater at the rated conditions specified
     in DOE 10 CFR Part 430 or ANSI Z21.10."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  MINIMUM
    0
  MAXIMUM
    100000000
  UNITS
    Btu/hr
  DEFAULT
    if( Parent(Type) = "ServiceHotWater" )
    then SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHtgCapRtd)
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Parent(Type) = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
	      SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHtgCapRtd)  // PROPOSED
	    else if( Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                           // BASELINE
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Parent(Type) = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                   // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
	      SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHtgCapRtd)  //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else UNDEFINED
   endif
  ANNUAL_PROPOSED
    zp:TotFluidSegCapRtd
  ANNUAL_BASELINE
    zb:TotFluidSegCapRtd
ENDRULE

// -------------- SHW Baseline Capacity Rated --------------
RULE NEW FluidSys:TotCapRtdBase
  DATATYPE
    Float
  LONGFORM
    TotalCapacityRatedBaseline
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    Btu/hr
  DEFAULT
    if( Type = "ServiceHotWater" )
    then Int(SumChildren(FluidSeg:TotFluidSegCapRtd))
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
	      Int(SumChildren(FluidSeg:TotFluidSegCapRtd))  //PROPOSED
	    else if( Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                           // BASELINE
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                   // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
	      Int(SumChildren(FluidSeg:TotFluidSegCapRtd))  //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else UNDEFINED
   endif    
  ANNUAL_PROPOSED
    zp:TotCapRtdBase
  ANNUAL_BASELINE
    zb:TotCapRtdBase
ENDRULE



// -------------- Water Heater Capacity Rated With Count --------------
// RULE NEW WtrHtr:CapRtdWithCnt
//   DESCRIPTION
//     "The Rated Capacity including water heater count."
//   HELP
//     ""
//   REFERENCE 
//     ACM-5.9.1 Water Heating
//   INPUTCLASS
//     NotInput
//   MINIMUM
//     0
//   UNITS
//     btu per h
//   DEFAULT
//     if( Proj:AutoHardSize = 1 )
//     then 
//       if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( FluidSys:TotCapRtdBase > 0 ) .AND. IfValidAnd(CapRtd > 0) .AND. 
//           IfValidAnd(FluidSysCnt > 0) )
//       then 
//         if( Type = "Conventional" )
//         then (CapRtd * FluidSysCnt)     //PROPOSED
//         else if( Type <> "Conventional" )   //Heat Pump
//         then InpPwr * EF * 3412    
//         else UNDEFINED                   
//         endif endif        
// //        Int( CapRtd * FluidSysCnt )  // This was the original condition that looks to be wrong in some cases Int(FluidSys:TotCapRtdBase)
//       else UNDEFINED
//       endif
//     else
//       if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( FluidSys:TotCapRtdBase > 0 ) .AND. IfValidAnd(CapRtd > 0) .AND. 
//           IfValidAnd(FluidSysCnt > 0) )
//       then
//         if( Type = "Conventional" )
//         then (CapRtd * FluidSysCnt)     //PROPOSED
//         else if( Type <> "Conventional" )   //Heat Pump
//         then InpPwr * EF * 3412    
//         else UNDEFINED                   
//         endif endif        
//       else UNDEFINED
//       endif
//     endif
//   SIZING_PROPOSED
//     if( Parent(Type) = "ServiceHotWater" )
//     then
// 	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
// 	    then 
//         if( Type = "Conventional" )
//         then (u:CapRtd * u:FluidSysCnt)     //PROPOSED
//         else if( Type <> "Conventional" )   //Heat Pump
//         then InpPwr * EF * 3412    
//         else UNDEFINED                   
//         endif endif
// 	    else if( Proj:SHWBothBaseline )
// 	    then 
//           if( Name = "ResBaseWaterHeater" )
//           then Bldg:ResComboWtrHtrCapRtd
//           else Bldg:NonResBaseWtrHtrCapRtd                   //if( Name = "NonResBaseWaterHeater" )
//           endif
// 	    else if( Proj:SHWNone )
// 	    then 
// 	      UNDEFINED                                         // no DHW modeled
// 	    else 
// 	      UNDEFINED
// 	    endif endif endif
//     else UNDEFINED
//     endif
//   SIZING_BASELINE
//     if( Parent(Type) = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
//     then
// 	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
// 	    then 
//           if( Name = "ResBaseWaterHeater" )
//           then Bldg:ResComboWtrHtrCapRtd
//           else Bldg:NonResBaseWtrHtrCapRtd          //if( Name = "NonResBaseWaterHeater" )
//           endif
// 	    else if( Proj:SHWPropOnly )
// 	    then 
//           if( Type = "Conventional" )
//           then (u:CapRtd * u:FluidSysCnt)     //PROPOSED
//           else if( Type <> "Conventional" )   //Heat Pump
//           then InpPwr * EF * 3412.14
//           else UNDEFINED                   
//           endif endif
// 	    else if( Proj:SHWNone )
// 	    then 
// 	      UNDEFINED                                   // no DHW modeled
// 	    else 
// 	      UNDEFINED
// 	    endif endif endif
//    else UNDEFINED
//    endif    
//   ANNUAL_PROPOSED
//     zp:CapRtdWithCnt
//   ANNUAL_BASELINE
//     zb:CapRtdWithCnt
// ENDRULE


// -------------- SHW Proposed System Capacity Rated --------------
RULE NEW FluidSys:TotCapRtdProp
  DATATYPE
    Float
  LONGFORM
    TotalCapacityRatedProposed
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    Btu/hr
  DEFAULT
    if( Type = "ServiceHotWater" )
//    then Int(SumChildren(WtrHtr:CapRtdWithCnt))
    then Int(SumChildren(WtrHtr:CapRtdSim))
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
//	      Int(SumChildren(WtrHtr:CapRtdWithCnt))      // PROPOSED
	      Int(SumChildren(WtrHtr:CapRtdSim))      // PROPOSED	      
	    else if( Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                           // BASELINE
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                   // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
//	      Int(SumChildren(WtrHtr:CapRtdWithCnt))      // PROPOSED
	      Int(SumChildren(WtrHtr:CapRtdSim))      // PROPOSED	      
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else UNDEFINED
   endif    
  ANNUAL_PROPOSED
    zp:TotCapRtdProp
  ANNUAL_BASELINE
    zb:TotCapRtdProp
ENDRULE


// -------------- Fluid Segment Water Heater Storage Capacity --------------------
RULE NEW FluidSeg:TotFluidSegStorCap
  DATATYPE
    Float
  LONGFORM
    TotalFluidSegmentStorageCapacity
  DESCRIPTION
    "The storage capacity of a water heater at the rated conditions specified
     in DOE 10 CFR Part 430 or ANSI Z21.10."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  MINIMUM
    0
  MAXIMUM
    100000000
  UNITS
    gal
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then( (SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHtgRtSizing) * 0.40) * 1.30 )  // The * 0.40 is splitting the required sizing between rated capacity and tank capacity. 30% of a tank volume is not used so oversized by 30% to reach Storage Capacity
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
	      ( (SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHtgRtSizing) * 0.40) * 1.30 )  // PROPOSED
	    else if( Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                           // BASELINE
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                   // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
	      if( FluidSeg:WtrHtrInstantChk > 0 )
	      then 1
	      else( (SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHtgRtSizing) * 0.40) * 1.30 )  // The * 0.40 is splitting the required sizing between rated capacity and tank capacity. 30% of a tank volume is not used so oversized by 30% to reach Storage Capacity
	      endif
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else UNDEFINED
   endif    
  ANNUAL
    z:TotFluidSegStorCap
ENDRULE

// -------------- SHW Baseline Storage Capacity --------------
RULE NEW FluidSys:TotStorCapBase
  DATATYPE
    Float
  LONGFORM
    TotalStorageCapacityBaseline
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal
  DEFAULT
    if( Type = "ServiceHotWater")
    then SumChildren(FluidSeg:TotFluidSegStorCap)  // remove Int
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
	      Int(SumChildren(FluidSeg:TotFluidSegStorCap))  //PROPOSED
	    else if( Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                           // BASELINE
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
    else UNDEFINED
    endif  
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                   // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
				Int(SumChildren(FluidSeg:TotFluidSegStorCap))  //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else UNDEFINED
   endif    
  ANNUAL
    z:TotStorCapBase
ENDRULE

// -------------- SHW Proposed System Storage Capacity --------------
RULE NEW FluidSys:TotStorCapProp
  DATATYPE
    Float
  LONGFORM
    TotalStorageCapacityProposed
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal
  DEFAULT
    if( Type = "ServiceHotWater" )
//    then Int(SumChildren(WtrHtr:StorCapWithCnt))
    then Int(SumChildren(WtrHtr:StorCapSim))
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
//	      Int(SumChildren(WtrHtr:StorCapWithCnt))  //PROPOSED
	      Int(SumChildren(WtrHtr:StorCapSim))  //PROPOSED	      
	    else if( Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                           // BASELINE
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )  //( Type = "ServiceHotWater" )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      UNDEFINED                                   // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
//	      Int(SumChildren(WtrHtr:StorCapWithCnt))  //PROPOSED
	      Int(SumChildren(WtrHtr:StorCapSim))  //PROPOSED	      
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else UNDEFINED
   endif    
  ANNUAL
    z:TotStorCapProp
ENDRULE


// -------- Baseline Water Heater Storage and Rated Capacity Check -----------
RULE NEW FluidSys:TotCapRtdStorCapBase
  DATATYPE
    Float
  LONGFORM
    TotalCapacityRatedStorageCapacityBaseline
  DESCRIPTION
    "This sums the total storage capacity (max gal/h) and the total rated
     capacity (converted from Btu/h to max gal/h) at the basline fluid
     system."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
    gal per h
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then( u:TotStorCapBase + (u:TotCapRtdBase / (8.25 * (135 - 55))) )
    else UNDEFINED
    endif
ENDRULE


// -------- Proposed Water Heater Storage and Rated Capacity Check -----------
RULE NEW FluidSys:TotFirstHrCap
  DATATYPE
    Float
  LONGFORM
    TotalFirstHourCapacity
  DESCRIPTION
    "This sums the total storage capacity (max gal/h) and the total rated
     capacity (converted from Btu/h to max gal/h) at the proposed fluid
     system."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd(HotWtrSupTemp > 0) )
    then 
      u:TotStorCapProp * 8.25 * (HotWtrSupTemp - 55) + u:TotCapRtdProp  
    else 
      UNDEFINED
    endif
  CHECKSIM
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( ChildCount(WtrHtr) > 1 .AND. ChildCount(FluidSeg) > 2 )
      then
      PostError("The service hot water fluid system '%s' has more than 2 fluid segments,
                 and 1 may be serving a heating coil. Only 1 water heater object is allowed
                 in this case, however, multipliers are allowed for the single water heater.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
ENDRULE


// -------------- Baseline Water Heater Storage Capacity --------------------
RULE NEW Bldg:NonResBaseStorCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaseStorageCapacity
  DESCRIPTION
    "The tank volume of the baseline water heater."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  MINIMUM
    0
  MAXIMUM
    1000000000
  UNITS
    gal
  SIZING_PROPOSED
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
	      UNDEFINED  // PROPOSED
	    else if( Proj:SHWBothBaseline )
	    then 
	      Int( (SumChildrenIf(Spc:HotWtrHtgRtSizing, Spc:IsNonRes = 1) * 0.40) * 1.30)  //BASELINE  // Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
  SIZING_BASELINE
 	    if( Proj:SHWUserAndBaseline )
	    then 
	      ( SumAll(u:FluidSys:TotFirstHrCap) * 0.40 / 8.25 / 80 )     // BASELINE
	    else if ( Proj:SHWBothBaseline )
	    then
	      Int( (SumChildrenIf(Spc:HotWtrHtgRtSizing, Spc:IsNonRes = 1) * 0.40) * 1.30)  //BASELINE  // Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                          //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif endif
  ANNUAL
    z:NonResBaseStorCap
ENDRULE

// -------------- Baseline Water Heater Storage Capacity --------------------
RULE NEW Proj:Bldg:ResBaseStorCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaseStorageCapacity
  DESCRIPTION
    "The tank volumen of the baseline water heater."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  MINIMUM
    0
  MAXIMUM
    1000000000
  UNITS
    gal
  SIZING_PROPOSED
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                  // PROPOSED
	    else if( Proj:SHWBothBaseline )
	    then 
	      Int( (SumChildrenIf(Spc:HotWtrHtgRtSizing, Spc:IsResAndCombo = 1) * 0.40) * 1.30)  //BASELINE  // Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                         // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
  SIZING_BASELINE
    if( IfValidAnd(u:Proj:ResWtrHtrNonCentralSys = 1) )
    then
	    if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
	    then 
	      1                                  // BASELINE
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                   //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif
   else
	    if( Proj:SHWUserAndBaseline )
	    then 
	      ( SumAll(u:FluidSys:TotFirstHrCap) * 0.40 / 8.25 / 80 )  //PROPOSED TANK BURNER -> BASELINE SYSTEM
	    else if( Proj:SHWBothBaseline )
	    then
	      Int( (SumChildrenIf(Spc:HotWtrHtgRtSizing, Spc:IsResAndCombo = 1) * 0.40) * 1.30)  //BASELINE  // Spc:HotWtrHtgRt > 0
	    else if( Proj:SHWPropOnly )
	    then 
	      UNDEFINED                                   //PROPOSED
	    else if( Proj:SHWNone )
	    then 
	      UNDEFINED                                   // no DHW modeled
	    else 
	      UNDEFINED
	    endif endif endif endif
   endif    
  ANNUAL_PROPOSED
    zp:ResBaseStorCap
  ANNUAL_BASELINE
    zb:ResBaseStorCap
ENDRULE


// -------------- High Rise Res ResDHW Check --------------------
RULE NEW Proj:Bldg:HighRiseResDHWCheck
  RULESETS
    T24N
  DATATYPE
    Float
  LONGFORM
    HighRiseResidentialDomesticHotWaterCheck
  DESCRIPTION
    "Checking the total building height for High Rise Residential 
     Residential Hot Water Heaters."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  CHECKCODE
    if(  (SumAll(Spc:HasResDHWSysRef) > 0) 
          .AND. (Bldg:AboveGrdStoryCnt < 4) 
          .AND. (HighRiseResFlrArea >= (TotCondFlrArea * 0.20)) )
    then
      PostError("Residential DHW systems are only permitted in buildings 
                 with 4 or more stories above grade, hotels and motels of any 
                 height, or buildings with 3 or fewer stories when the 
                 residential floor area is less than 20% of the total floor 
                 area.")
    else UNCHANGED
    endif
ENDRULE


// -------------- New Water Heaters in Building Count --------------------
RULE Proj:WtrHtrCnt
  DESCRIPTION
    "The total number of residential and nonresidential water heaters in
     the entire building, including multipliers."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  COMMONMINIMUM
    0
  COMMONMAXIMUM
    100
  MAXIMUM
    10000
  REPORTPRECISION
    0
  DEFAULT
    ( (SumAll(WtrHtr:NewComDHWHtr)) + (SumAll(ResWtrHtr:NewResDHWHtr)) )
  SIZING
    ( (SumAll(WtrHtr:NewComDHWHtr)) + (SumAll(ResWtrHtr:NewResDHWHtr)) )
  ANNUAL
    ( (SumAll(WtrHtr:NewComDHWHtr)) + (SumAll(ResWtrHtr:NewResDHWHtr)) )
ENDRULE


// -------------- NonRes Baseline Story WtrHtr First Hour Capacity  --------------------
RULE NEW Story:NonResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildrenIf(Spc:HotWtrHtgRtSizing, Spc:IsNonRes = 1) //removed Int
    else 
      UNDEFINED
    endif
ENDRULE

// -------------- NonRes Baseline Building WtrHtr First Hour Capacity  --------------------
RULE NEW Bldg:NonResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildren(Story:NonResBaseFirstHrCap) // removed Int
    else UNDEFINED
    endif
ENDRULE

// -------------- Res Baseline Story WtrHtr First Hour Capacity  --------------------
RULE NEW Story:ResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildrenIf(Spc:HotWtrHtgRtSizing, Spc:IsResAndCombo = 1) //removed Int
    else 
      UNDEFINED
    endif
ENDRULE

// -------------- Res Baseline Building WtrHtr First Hour Capacity --------------------
RULE NEW Bldg:ResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildren(Story:ResBaseFirstHrCap)
    else 
      UNDEFINED
    endif
ENDRULE

// -------------- Proposed Fluid System WtrHtr First Hour Capacity --------------------
RULE NEW FluidSys:PropFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ProposedFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "ServiceHotWater" .AND. Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
//    then( (SumChildren(WtrHtr:CapRtdWithCnt) / (8.25 * (HotWtrSupTemp - 55))) + SumChildren(WtrHtr:StorCapWithCnt) )
//      then( SumChildren(WtrHtr:CapRtdWithCnt) + SumChildren(WtrHtr:StorCapWithCnt) * 8.25 * (HotWtrSupTemp - 55) )
      then( SumChildren(WtrHtr:CapRtdSim) + SumChildren(WtrHtr:StorCapSim) * 8.25 * (HotWtrSupTemp - 55) )      
    else UNDEFINED
    endif
//  SIZING
//    if( Type = "ServiceHotWater" .AND. Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
//    then( (SumChildren(u:WtrHtr:CapRtd) / (8.25 * (u:HotWtrSupTemp - 55))) + SumChildren(u:WtrHtr:StorCap) )
//    else UNDEFINED
//    endif
//  ANNUAL
//    if( Type = "ServiceHotWater" .AND. Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
//    then( (SumChildren(u:WtrHtr:CapRtd) / (8.25 * (u:HotWtrSupTemp - 55))) + SumChildren(u:WtrHtr:StorCap) )
//    else UNDEFINED
//    endif
ENDRULE

// -------------- Proposed Building First Hour Capacity --------------------
RULE NEW Proj:PropFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ProposedFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then( SumChildren(FluidSys:PropFirstHrCap) )
    else UNDEFINED
    endif
  SIZING
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then( SumChildren(u:FluidSys:PropFirstHrCap) )
    else UNDEFINED
    endif
  ANNUAL
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then( SumChildren(u:FluidSys:PropFirstHrCap) )
    else UNDEFINED
    endif
ENDRULE


// -------------- Res Baseline WtrHtr First Hour Capacity --------------------
RULE NEW WtrHtr:ResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:ResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)  
    else UNDEFINED
    endif
  SIZING
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND.
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:ResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)
    else UNDEFINED
    endif
  ANNUAL
    z:ResBaseFirstHrCap
ENDRULE


// -------------- NonRes Baseline WtrHtr First Hour Capacity --------------------
RULE NEW WtrHtr:NonResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND.
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:NonResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)
    else UNDEFINED
    endif
  SIZING
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND.
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:NonResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)
    else UNDEFINED
    endif
  ANNUAL
    z:NonResBaseFirstHrCap
ENDRULE


// --------- Residential Area Served by a Single Fluid Segment --------------
RULE NEW FluidSeg:ResWtrHtrArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterArea
  DESCRIPTION
    "Sum of the residential floor area served by a single fluid segment."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Parent(Type) = "ServiceHotWater" )
    then SumRevRef(Spc:SHWFluidSegRef, Spc:ResArea)
    else UNDEFINED
    endif
ENDRULE


// --------- Central System Water Heating --------------
RULE FluidSys:CentralSys
  DESCRIPTION
    "A checkbox to determine if the water heater sytem is a Central System
     or Individual Unit System."
  DEFAULT
    if( Type = "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif
ENDRULE


// ------ Residential Floor Area Served by Central System Fluid System ---------
RULE NEW FluidSys:ResWtrHtrCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterCentralSystemArea
  DESCRIPTION
    "Sum of the central system residential floor area served by a single fluid system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( CentralSys = 1 )
      then SumChildren(FluidSeg:ResWtrHtrArea)
      else 0
      endif
    else UNDEFINED
    endif
ENDRULE

// ------ Residential Floor Area Served by NonCentral System Fluid System ---------
RULE NEW FluidSys:ResWtrHtrNonCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystemArea
  DESCRIPTION
    "Sum of the non-central system residential floor area served by a single fluid system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( CentralSys = 0 )
      then SumChildren(FluidSeg:ResWtrHtrArea)
      else 0
      endif
    else UNDEFINED
    endif
ENDRULE

// ------ Residential Floor Area Served by Central System in Building ---------
RULE NEW Proj:ResWtrHtrCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterCentralSystemArea
  DESCRIPTION
    "Sum of the central system residential floor area in building."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" )
    then SumChildren(FluidSys:ResWtrHtrCentralSysArea)
    else UNDEFINED
    endif
ENDRULE


// ------ Residential Floor Area Served by NonCentral System in Building ---------
RULE NEW Proj:ResWtrHtrNonCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystemArea
  DESCRIPTION
    "Sum of the non-central system residential floor area in building."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" )
    then SumChildren(FluidSys:ResWtrHtrNonCentralSysArea)
    else UNDEFINED
    endif
ENDRULE


// ------ SHW FluidSystem serves residential area and is a central system
RULE NEW FluidSys:ResWtrHtrCentralSys
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterCentralSystem
  DESCRIPTION
    "A flag to indicate that an SHW fluid system is a central residential 
     system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( ResWtrHtrCentralSysArea > 0 )
      then 1
      else 0
      endif
    else UNDEFINED
    endif
  CHECKCODE
    if( ResWtrHtrCentralSys .AND. Type = "ServiceHotWater" )
    then
       PostError("The service hot water fluid system '%s' serves residential 
                 areas and is marked as a central system serving multiple 
                 dwelling units.  This is not allowed for fluid systems.  
                 Use the Residential DHW system instead.",Name)
    else UNCHANGED
    endif
ENDRULE


// ------ SHW FluidSystem serves individual residential dwelling units - used for combo systems -------
RULE NEW FluidSys:ResWtrHtrNonCentralSys
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystem
  DESCRIPTION
    "A flag to indicate that an SHW fluid system is a non-central residential 
     system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( ResWtrHtrNonCentralSysArea > 0 )
      then 1
      else 0
      endif
    else UNDEFINED
    endif
ENDRULE


// ------ SHW FluidSystem serves individual residential dwelling units - used for combo systems
RULE NEW Proj:ResWtrHtrNonCentralSys
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystem
  DESCRIPTION
    "A flag to indicate that an SHW fluid system is a non-central residential system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( IfValidAnd(ResWtrHtrNonCentralSysArea > 0) )
    then 1
    else 0
    endif
ENDRULE


