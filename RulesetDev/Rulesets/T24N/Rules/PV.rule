// PV - General Information
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2018, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------

//Relevant ACM Section: ...

;RULE Proj:Action
;  DEFAULT
;    PostMessageToLog( "START PV rules..." )
;ENDRULE
;;    StoreBEMProc( "begin PV defaulting", 0 )

//////////////////////////////////////////////////////////////////////////////// SAC 10/25/23
// flags to force PV/Battery simulation on/off

RULE Proj:AllowPropPVBatt
  DESCRIPTION
    "-1 to ignore flag, 0 to remove PV & Battery in Proposed model and 1 retain (even for EAA)"
  INPUTCLASS
    Prescribed
  DEFAULT 
    if (LocalStatus( AllowPropPVBatt ) < 1)
    then  -1
    else  UNCHANGED  endif
ENDRULE

RULE Proj:AllowStdPV
  DESCRIPTION
    "-1 to ignore flag, 0 to remove PV in Standard model(s) and 1 retain (even for EAA)"
  INPUTCLASS
    Prescribed
  DEFAULT 
    if (LocalStatus( AllowStdPV ) < 1)
    then  -1
    else  UNCHANGED  endif
ENDRULE

RULE Proj:AllowStdBatt
  DESCRIPTION
    "-1 to ignore flag, 0 to remove Battery in Standard model(s) and 1 retain (even for EAA)"
  INPUTCLASS
    Prescribed
  DEFAULT 
    if (LocalStatus( AllowStdBatt ) < 1)
    then  -1
    else  UNCHANGED  endif
ENDRULE


////////////////////////////////////////////////////////////////////////////////
// Project-level SARA (Solar Access Roof Area) data - SAC 04/21/22

RULE Proj:SolAccessRfArea
  DESCRIPTION
    "SARA includes the area of the building's roof space capable of structurally 
    supporting a PV system, and the area of all roof space on covered parking 
    areas, carports, and all other newly constructed structures on the site that 
    are compatible with supporting a PV system per Title 24, Part 2, Section 1511.2.
    (program default to all roof area)

    Excludes:

    A) Any area that has less than 70 percent annual solar access.

    B) Occupied roofs as specified by CBC Section 503.1.4.

    C) Roof space that is otherwise not available due to compliance with other 
    building code requirements if confirmed by the Executive Director."
  INPUTCLASS
    Optional
  DEFAULT 
    SumAll( Roof:Area ) + SumAll( ResCathedralCeiling:Area ) +
    SumAll( ResAttic:DeckArea )
ENDRULE

RULE Proj:T24StdPVPwrDens
  DESCRIPTION
    "min/default PV power density from Std sec 140.10"
  INPUTCLASS
    NotInput
  DEFAULT 
    14
ENDRULE

RULE Proj:SolAccessRfAreaPVPwr
  DESCRIPTION
    "min PV system capacity based on SARA (Std sec 140.10)"
  INPUTCLASS
    NotInput
  DEFAULT 
    SolAccessRfArea * T24StdPVPwrDens / 1000
ENDRULE

RULE Proj:SolAccessRfAreaPVMsg
  DEFAULT 
    if (SolAccessRfAreaPVPwr < 4) then  UNDEFINED
    else if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  Format( "(implies PV capacity of %s kW @ %.0f W/ft2 | SARA %.1f% of building cond area)",
               FltToStr( SolAccessRfAreaPVPwr, 1 ), T24StdPVPwrDens, (SolAccessRfArea * 100 / SumAll( Bldg:TotCondFlrArea )) )
    else  Format( "(implies PV capacity of %s kW @ %.0f W/ft2)", FltToStr( SolAccessRfAreaPVPwr, 1 ), T24StdPVPwrDens )
    endif endif
ENDRULE


//////////////////////////////////////////////////////////////////////////////// SAC 04/21/22
// 2022+ Prescribed PV Requirements (for std design) - BldgType & Area rules
   // altered logic top prevent PV/Batt for MFam Addition Alone - SAC 06/01/23   // account for Allow* flags - SAC 10/25/23
RULE NEW Proj:DisableAllPVBattRequirements
  LONGFORM
    DisableAllPVBatteryRequirements
  DATATYPE
    Integer
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "index of reason for PV/Batt requirements to be relaxed (0 = normal requirements enforced, >0 ID of reason for bypass of requirements)"
  INPUTCLASS
    NotInput
  DEFAULT
    if (     IfValidAnd( AllowStdPV      > 0 ) ) then  0
    else if (IfValidAnd( AllowPropPVBatt = 0 ) .AND.
             IfValidAnd( AllowStdPV      = 0 ) .AND.
             IfValidAnd( AllowStdBatt    = 0 ) ) then  4
    else if (IfValidAnd( HlthCareFacility > 0 )) then  1
    else if (IfValidAnd( ResDwellUnits > 0 ) .AND.
             IfValidAnd( ResCompOpt = "Newly Constructed" )==0) then  2
    else if (IfValidAnd( ResDwellUnits > 0 )==0 .AND.
             IfValidAnd( IsNewEnv  > 0 )==0 .AND.
             IfValidAnd( IsNewMech > 0 )==0 .AND.
             IfValidAnd( IsAddOrAlt > 0)==1 ) then  3
    else  0
    endif endif endif endif endif
ENDRULE

RULE NEW Spc:ShowPVBattSizeBldgType
  LONGFORM
    ShowPhotovoltaicBatterySizeArea
  DATATYPE
    Integer
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "whether or not this Spc contributes to prescribed PV & battery sizes"
  DESCRIPTION
    "whether or not this Spc contributes to prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (enumvalue(SpcFunc) < 1 .OR. CondgType == "Plenum" .OR.
        Proj:DisableAllPVBattRequirements .OR.
        (LocalStatus( IsHlthCare ) > 5 .AND. IfValidAnd( IsHlthCare > 0 )))
    then  0
    else if ( SpaceFunctionData:HlthCareEligible( "FuncType", Spc:SpcFunc ) .AND.
              LocalStatus( IsHlthCare ) < 6 .AND.
              ( IfValidAnd( Proj:HlthCareFacility > 0 ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Exam/Treatment Room)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Imaging Room)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Medical Supply Room)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Nursery)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Nurse's Station)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Operating Room)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Patient Room)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Physical Therapy Room)" ) .OR.
                IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Recovery Room)" ) ) )
    then  0
    else  1
    endif endif
ENDRULE
;    else if ( IfValidAnd( Proj:PrscrpPVBattClass = "LowRiseRes" ) .OR.
;              IfValidAnd( Proj:PrscrpPVBattClass = "HiRiseRes_NoPVBatt" ) .OR.
;              IfValidAnd( Proj:PrscrpPVBattClass = "NonRes_NoPVBatt" ) )
;    then  0
;    else if (SpaceFunctionData:PVBatteryBldgType("FuncType", SpcFunc) == "none")
;    then  0

RULE Spc:PVBattSizeBldgType
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Building type used to determine prescribed PV & battery sizes"
  INPUTCLASS
    Optional
  RESETS
    ResetThisWhenTheFollowingIsModified
      Spc:SpcFunc
  DEFAULT : T24N_2019
    "none"
  DEFAULT
    if (ShowPVBattSizeBldgType > 0)
    then  SpaceFunctionData:PVBatteryBldgType("FuncType", SpcFunc) 
    else  "none"
    endif
ENDRULE
;  CHECKCODE
;    if ( ShowPVBattSizeBldgType < 1 .OR.
;         ( EnumValue( PVBattSizeBldgType ) > 0 .AND. EnumValue( PVBattSizeBldgType ) < 99 ) )
;    then  UNCHANGED
;    else  PostError( "PV/Battery requirement building type (other than 'unspecified') must be specified for Space '%s'.", Name )
;    endif

RULE NEW ResOtherZn:ShowPVBattSizeBldgType
  LONGFORM
    ShowPhotovoltaicBatterySizeArea
  DATATYPE
    Integer
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "whether or not this ResOtherZn contributes to prescribed PV & battery sizes"
  DESCRIPTION
    "whether or not this ResOtherZn contributes to prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (enumvalue(SpcFunc) < 1 .OR. Proj:DisableAllPVBattRequirements)
    then  0
    else  1
    endif
ENDRULE
;    else if ( IfValidAnd( Proj:PrscrpPVBattClass = "LowRiseRes" ) .OR.
;              IfValidAnd( Proj:PrscrpPVBattClass = "HiRiseRes_NoPVBatt" ) .OR.
;              IfValidAnd( Proj:PrscrpPVBattClass = "NonRes_NoPVBatt" ) )
;    then  0
;    else if (SpaceFunctionData:PVBatteryBldgType("FuncType", SpcFunc) == "none")
;    then  0

RULE ResOtherZn:PVBattSizeBldgType
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Building type used to determine prescribed PV & battery sizes"
  INPUTCLASS
    Optional
  RESETS
    ResetThisWhenTheFollowingIsModified
      ResOtherZn:SpcFunc
  DEFAULT : T24N_2019
    "none"
  DEFAULT
    if (ShowPVBattSizeBldgType > 0)
    then  SpaceFunctionData:PVBatteryBldgType("FuncType", SpcFunc) 
    else  "none"
    endif
ENDRULE
;  CHECKCODE
;    if ( ShowPVBattSizeBldgType < 1 .OR.
;         ( EnumValue( PVBattSizeBldgType ) > 0 .AND. EnumValue( PVBattSizeBldgType ) < 99 ) )
;    then  UNCHANGED
;    else  PostError( "PV/Battery requirement building type (other than 'unspecified') must be specified for ResOtherZn '%s'.", Name )
;    endif


; can't rely on Spc:IsHlthCare since it is not yet defaulted - SAC 01/19/23
RULE NEW Spc:HlthcarePVBattArea
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if ((LocalStatus( IsHlthCare ) > 4 .AND. IfValidAnd( IsHlthCare > 0 )) .OR.
        (LocalStatus( IsHlthCare ) < 4 .AND. IfValidAnd( Proj:HlthCareFacility > 0 )))
    then  CondFlrAreaWithMult
    else  0  endif
ENDRULE

RULE NEW Story:PredomHlthcareArea
  LONGFORM
    PredominantHealthcareArea
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "tracking of Spc areas w/ Healthcare checkbox checked"
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren( Spc:HlthcarePVBattArea )
ENDRULE
;    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:IsHlthCare > 0 )

; added rules to calculate Predominant Story/ResZnGrp PVBattSizeBldgType
RULE Story:PredomPVBattSizeBldgTypeArea[1]
  DEFAULT
    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Grocery" )
ENDRULE
RULE Story:PredomPVBattSizeBldgTypeArea[2]
  DEFAULT
    if (IfValidAnd( Bldg:AboveGrdStoryCnt > 3 ))
    then  SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Highrise Multifamily" ) +
          SumChildren(   ResZn:CondFlrAreaWithMult )
    else  SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Highrise Multifamily" )
    endif
ENDRULE
RULE Story:PredomPVBattSizeBldgTypeArea[3]
  DEFAULT
    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Office, Financial, Unleased Tenant" )
ENDRULE
RULE Story:PredomPVBattSizeBldgTypeArea[4]
  DEFAULT
    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Retail" )
ENDRULE
RULE Story:PredomPVBattSizeBldgTypeArea[5]
  DEFAULT
    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "School" )
ENDRULE
RULE Story:PredomPVBattSizeBldgTypeArea[6]
  DEFAULT
    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Warehouse" )
ENDRULE
RULE Story:PredomPVBattSizeBldgTypeArea[7]
  DEFAULT
    SumChildrenIf( Spc:CondFlrAreaWithMult, Spc:PVBattSizeBldgType = "Other" )
ENDRULE
RULE Story:PredomPVBattSizeBldgType
  DEFAULT
    if      ( PredomHlthcareArea > 0 .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[7] .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[6] .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[5] .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomHlthcareArea > PredomPVBattSizeBldgTypeArea[1] )  then  100
    else if ( PredomPVBattSizeBldgTypeArea[7] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[6] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[5] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[1] )  then  7
    else if ( PredomPVBattSizeBldgTypeArea[6] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[5] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[1] )  then  6
    else if ( PredomPVBattSizeBldgTypeArea[5] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[1] )  then  5
    else if ( PredomPVBattSizeBldgTypeArea[2] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[2] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[2] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[2] > PredomPVBattSizeBldgTypeArea[1] )  then  2
    else if ( PredomPVBattSizeBldgTypeArea[4] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[4] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[4] > PredomPVBattSizeBldgTypeArea[1] )  then  4
    else if ( PredomPVBattSizeBldgTypeArea[1] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[1] > PredomPVBattSizeBldgTypeArea[3] )  then  1
    else if ( PredomPVBattSizeBldgTypeArea[3] > 0  )                               then  3
    else  7  endif endif endif endif endif endif endif endif
ENDRULE

RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[1]
  DEFAULT
    SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Grocery" )
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[2]
  DEFAULT
    if (IfValidAnd( Bldg:AboveGrdStoryCnt > 3 ))
    then  SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Highrise Multifamily" ) +
          SumChildren(   ResZn:CondFlrAreaWithMult )
    else  SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Highrise Multifamily" )
    endif
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[3]
  DEFAULT
    SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Office, Financial, Unleased Tenant" )
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[4]
  DEFAULT
    SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Retail" )
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[5]
  DEFAULT
    SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "School" )
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[6]
  DEFAULT
    SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Warehouse" )
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgTypeArea[7]
  DEFAULT
    SumChildrenIf( ResOtherZn:CondFlrAreaWithMult, ResOtherZn:PVBattSizeBldgType = "Other" )
ENDRULE
RULE ResZnGrp:PredomPVBattSizeBldgType
  DEFAULT
    if      ( PredomPVBattSizeBldgTypeArea[7] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[6] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[5] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomPVBattSizeBldgTypeArea[7] > PredomPVBattSizeBldgTypeArea[1] )  then  7
    else if ( PredomPVBattSizeBldgTypeArea[6] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[5] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomPVBattSizeBldgTypeArea[6] > PredomPVBattSizeBldgTypeArea[1] )  then  6
    else if ( PredomPVBattSizeBldgTypeArea[5] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[2] .AND.
              PredomPVBattSizeBldgTypeArea[5] > PredomPVBattSizeBldgTypeArea[1] )  then  5
    else if ( PredomPVBattSizeBldgTypeArea[2] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[2] > PredomPVBattSizeBldgTypeArea[4] .AND.
              PredomPVBattSizeBldgTypeArea[2] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[2] > PredomPVBattSizeBldgTypeArea[1] )  then  2
    else if ( PredomPVBattSizeBldgTypeArea[4] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[4] > PredomPVBattSizeBldgTypeArea[3] .AND.
              PredomPVBattSizeBldgTypeArea[4] > PredomPVBattSizeBldgTypeArea[1] )  then  4
    else if ( PredomPVBattSizeBldgTypeArea[1] > 0 .AND.
              PredomPVBattSizeBldgTypeArea[1] > PredomPVBattSizeBldgTypeArea[3] )  then  1
    else if ( PredomPVBattSizeBldgTypeArea[3] > 0  )                               then  3
    else  7  endif endif endif endif endif endif endif
ENDRULE

; round 2 PVBattSizeBldgType defaulting - SAC 01/14/23
RULE NEW Spc:ShowPVBattSizeBldgType
  DEFAULT : T24N_2019
    UNCHANGED
  DEFAULT
    if (EnumValue( PVBattSizeBldgType ) == 99 .AND.
        Parent( PredomPVBattSizeBldgType ) == 100)
    then  0
    else  UNCHANGED  endif
ENDRULE
; logic mods to toggle PVBattSizeBldgType for 'default ... predominance' to 'none' for Hlthcare stories - SAC 01/18/23
RULE Spc:PVBattSizeBldgType
  DEFAULT : T24N_2019
    UNCHANGED
  DEFAULT
    if (EnumValue( PVBattSizeBldgType ) == 99)
    then  if (Parent( PredomPVBattSizeBldgType ) == 100)
          then  "none"
          else  Parent( PredomPVBattSizeBldgType )
          endif
    else  UNCHANGED
    endif
ENDRULE
;    if (Proj:DisableAllPVBattRequirements < 1 .AND. EnumValue( PVBattSizeBldgType ) == 99)
RULE ResOtherZn:PVBattSizeBldgType
  DEFAULT : T24N_2019
    UNCHANGED
  DEFAULT
    if (EnumValue( PVBattSizeBldgType ) == 99)
    then  Parent( PredomPVBattSizeBldgType )
    else  UNCHANGED
    endif
ENDRULE
;    if (Proj:DisableAllPVBattRequirements < 1 .AND. EnumValue( PVBattSizeBldgType ) == 99)

   ; exclude Plenum spaces from PVBattSizeArea (regardless of PVBattSizeBldgType) - SAC 01/19/23
   ; fixed error in logic reversing effect of Plenum spaces - SAC 01/20/23
RULE NEW Spc:PVBattSizeArea
  LONGFORM
    PhotovoltaicBatterySizeArea
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Space area used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "Space area used to determine prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (IfValidAnd( PVBattSizeBldgType != "none" ) .AND.
        CondgType != "Plenum")
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  0  endif
ENDRULE
;    if (Proj:DisableAllPVBattRequirements < 1 .AND. IfValidAnd( PVBattSizeBldgType != "none" ))

RULE NEW ResOtherZn:PVBattSizeArea
  LONGFORM
    PhotovoltaicBatterySizeArea
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Zone area used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "Zone area used to determine prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (IfValidAnd( PVBattSizeBldgType != "none" ))
    then  ValidOr( ResCondFlrAreaWithMult, 0 ) + ValidOr( NonResCondFlrAreaWithMult, 0 )
    else  0  endif
ENDRULE
;    if (Proj:DisableAllPVBattRequirements < 1 .AND. IfValidAnd( PVBattSizeBldgType != "none" ))

RULE NEW ResZn:PVBattSizeResArea
  LONGFORM
    PhotovoltaicBatterySizeResidentialArea
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Highrise Res Zone area used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "Highrise Res Zone area used to determine prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    ValidOr( CondFlrAreaWithMult, 0 )
ENDRULE


; SAC 01/20/23
RULE Spc:CondPVBattBldgTypeArea[1]
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Cond area by PVBatt BldgType (1:Grocery, 2:HiRiseRes, 3:Office, 4:Retail, 5:School, 6:Warehouse, 7:Other / 9:Hlthcare, 10:none"
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Grocery" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[2]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Highrise Multifamily" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[3]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Office, Financial, Unleased Tenant" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[4]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Retail" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[5]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "School" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[6]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Warehouse" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[7]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Other" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[9]
  DEFAULT
    if ( IfValidAnd( IsHlthCare > 0 ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:CondPVBattBldgTypeArea[10]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "none" ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE

RULE Spc:UncondPVBattBldgTypeArea[1]
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Cond area by PVBatt BldgType (1:Grocery, 2:HiRiseRes, 3:Office, 4:Retail, 5:School, 6:Warehouse, 7:Other / 9:Hlthcare, 10:none"
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Grocery" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[2]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Highrise Multifamily" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[3]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Office, Financial, Unleased Tenant" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[4]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Retail" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[5]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "School" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[6]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Warehouse" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[7]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Other" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[9]
  DEFAULT
    if ( IfValidAnd( IsHlthCare > 0 ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE Spc:UncondPVBattBldgTypeArea[10]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "none" ) .AND.
         ( CondgType == "Unconditioned") )
    then  ValidOr( FlrArea, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE

RULE ResOtherZn:CondPVBattBldgTypeArea[1]
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Cond area by PVBatt BldgType (1:Grocery, 2:HiRiseRes, 3:Office, 4:Retail, 5:School, 6:Warehouse, 7:Other / 9:Hlthcare, 10:none"
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Grocery" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[2]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Highrise Multifamily" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[3]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Office, Financial, Unleased Tenant" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[4]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Retail" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[5]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "School" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[6]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Warehouse" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[7]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Other" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[9]
  DEFAULT
    UNDEFINED
ENDRULE
RULE ResOtherZn:CondPVBattBldgTypeArea[10]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "none" ) .AND.
         ( Type == "Conditioned") )
    then  ValidOr( CondFlrAreaWithMult, 0 )
    else  UNDEFINED  endif
ENDRULE

RULE ResOtherZn:UncondPVBattBldgTypeArea[1]
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Cond area by PVBatt BldgType (1:Grocery, 2:HiRiseRes, 3:Office, 4:Retail, 5:School, 6:Warehouse, 7:Other / 9:Hlthcare, 10:none"
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Grocery" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[2]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Highrise Multifamily" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[3]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Office, Financial, Unleased Tenant" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[4]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Retail" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[5]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "School" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[6]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Warehouse" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[7]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "Other" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[9]
  DEFAULT
    UNDEFINED
ENDRULE
RULE ResOtherZn:UncondPVBattBldgTypeArea[10]
  DEFAULT
    if ( IfValidAnd( PVBattSizeBldgType = "none" ) .AND.
         ( Type == "Unconditioned") )
    then  ValidOr( Area, 0 ) * ValidOr( Mult, 1 )
    else  UNDEFINED  endif
ENDRULE

RULE Proj:CondPVBattBldgTypeArea[1]
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Project-wide cond area by PVBatt BldgType (1:Grocery, 2:HiRiseRes, 3:Office, 4:Retail, 5:School, 6:Warehouse, 7:Other / 9:Hlthcare, 10:none"
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[1] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[1] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[2]
  DEFAULT
    if (IfValidAnd( Bldg:AboveGrdStoryCnt >= 4 ))
    then  SumAll( Spc:CondPVBattBldgTypeArea[2] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[2] ) + SumAll( ResZn:CondFlrAreaWithMult )
    else  SumAll( Spc:CondPVBattBldgTypeArea[2] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[2] )
    endif
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[3]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[3] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[3] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[4]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[4] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[4] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[5]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[5] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[5] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[6]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[6] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[6] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[7]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[7] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[7] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[9]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[9] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[9] )
ENDRULE
RULE Proj:CondPVBattBldgTypeArea[10]
  DEFAULT
    SumAll( Spc:CondPVBattBldgTypeArea[10] ) + SumAll( ResOtherZn:CondPVBattBldgTypeArea[10] )
ENDRULE

RULE Proj:UncondPVBattBldgTypeArea[1]
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  DESCRIPTION
    "Project-wide UNcond area by PVBatt BldgType (1:Grocery, 2:HiRiseRes, 3:Office, 4:Retail, 5:School, 6:Warehouse, 7:Other / 9:Hlthcare, 10:none"
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[1] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[1] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[2]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[2] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[2] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[3]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[3] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[3] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[4]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[4] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[4] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[5]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[5] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[5] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[6]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[6] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[6] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[7]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[7] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[7] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[9]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[9] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[9] )
ENDRULE
RULE Proj:UncondPVBattBldgTypeArea[10]
  DEFAULT
    SumAll( Spc:UncondPVBattBldgTypeArea[10] ) + SumAll( ResOtherZn:UncondPVBattBldgTypeArea[10] )
ENDRULE


RULE NEW Proj:NResPVBattAreaSum
  LONGFORM
    NonResidentialPVBatteryAreaSum
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Nonres building area used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "Nonres building area used to determine prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    SumAll( Spc:PVBattSizeArea ) + SumAll( ResOtherZn:PVBattSizeArea )
ENDRULE

RULE NEW Proj:HiRiseResNResPVBattAreaSum
  LONGFORM
    HighRiseResidentialNonResidentialPVBatteryAreaSum
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "HighRise Residential + Nonresidential building area used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "HighRise Residential + Nonresidential building area used to determine prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (IfValidAnd( Bldg:AboveGrdStoryCnt >= 4 ))
    then  SumAll( ResZn:PVBattSizeResArea ) + NResPVBattAreaSum
    else  0  endif
ENDRULE

RULE NEW Proj:NResPVBattAreaPct
  LONGFORM
    NonResidentialPVBatteryAreaPercent
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Percent building area used to determine nonres prescribed PV & battery sizes"
  DESCRIPTION
    "Percent building area used to determine nonres prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (SumAll( Bldg:TotCondFlrArea ) < 1) then  0
    else  NResPVBattAreaSum * 100 / SumAll( Bldg:TotCondFlrArea )
    endif
ENDRULE

RULE NEW Proj:HiRiseResNResPVBattAreaPct
  LONGFORM
    HighRiseResidentialNonResidentialPVBatteryAreaPercent
  DATATYPE
    Float
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Percent building area used to determine highrise res prescribed PV & battery sizes"
  DESCRIPTION
    "Percent building area used to determine highrise res prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (SumAll( Bldg:TotCondFlrArea ) < 1) then  0
    else  HiRiseResNResPVBattAreaSum * 100 / SumAll( Bldg:TotCondFlrArea )
    endif
ENDRULE

RULE NEW Proj:PrscrpPVBattClass
  REFERENCE
    2022+ Standards Tables 140.10-A,B & 170.2(f,g)
  HELP
    "Classification used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "Classification used to determine prescribed PV & battery sizes"
  OPTION
    HiRiseRes/MixedUse
    HiRiseRes_NoPVBatt
    LowRiseRes/MixedUse
    LowRiseRes
    NonRes/MixedUse
    NonRes_NoPVBatt
    n/a   
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (IfValidAnd( ResDwellUnits > 0 ) .AND.
        IfValidAnd( ResProj:NumDwellingUnits > 0 ))
    then  if (IfValidAnd( Bldg:AboveGrdStoryCnt > 3 ))
          then  if (HiRiseResNResPVBattAreaPct >= 80)
                then  "HiRiseRes/MixedUse"
                else  "HiRiseRes_NoPVBatt"  endif
          else  if (NResPVBattAreaPct >= 80)
                then  "LowRiseRes/MixedUse"
                else  "LowRiseRes"  endif
          endif
    else  if (NResPVBattAreaPct >= 80)
          then  "NonRes/MixedUse"
          else  "NonRes_NoPVBatt"  endif
    endif
ENDRULE
;    if (DisableAllPVBattRequirements > 0)
;    then  "NonRes_NoPVBatt"
; prior version -
;    if (IfValidAnd( ResDwellUnits > 0 ) .AND.
;        IfValidAnd( ResProj:NumDwellingUnits > 0 ) .AND.
;        HiRiseResPVBattAreaPct > 20) then  "HiRiseRes"
;    else if (NResPVBattAreaPct >= 80) then  "NonRes/MixedUse"
;    else if (IfValidAnd( ResDwellUnits > 0 ) .AND.
;             IfValidAnd( ResProj:NumDwellingUnits > 0 ) .AND.
;             SumAll( ResZn:CondFlrAreaWithMult ) > 0)
;    then  if (IfValidAnd( Bldg:TotStoryCnt >= 4 ))
;          then  "HiRiseRes"
;          else  "LowRiseRes"
;          endif
;    else  "n/a"
;    endif endif endif

RULE NEW Proj:NResPVBattAreaMsg
  LONGFORM
    NonResidentialPVBatteryAreaMessage
  DATATYPE
    String
  REFERENCE
    2022+ Standards Tables 140.10-A,B
  HELP
    "Message describing nonres building area used to determine prescribed PV & battery sizes"
  DESCRIPTION
    "Message describing nonres building area used to determine prescribed PV & battery sizes"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if (DisableAllPVBattRequirements > 0)
    then
      switch (DisableAllPVBattRequirements)
         case  1 :  "There are no PV/Battery requirements for Hospital facilities (Proj:HlthCareFacility checked)"
         case  2 :  "There are no PV/Battery requirements for Residential Dwelling projects that are not flagged as New"
         case  3 :  "There are no PV/Battery requirements for Nonresidential projects that are not flagged as New Envelope or New Mechanical"
         default :  "Error describing reason for PV/Battery requirement exemption"
      endswitch
    else
      switch (PrscrpPVBattClass)
         case "HiRiseRes/MixedUse"  :  Format( "Prescribed PV/Battery based on '%s' classification w/ %g stories, %.0f dwellings and %.1f% highrise res and mixed use area", PrscrpPVBattClass, Bldg:TotStoryCnt, ResProj:NumDwellingUnits, HiRiseResNResPVBattAreaPct )
         case "LowRiseRes/MixedUse" :  Format( "Prescribed PV/Battery based on '%s' classification w/ %g stories, %.0f dwellings and %.1f% nonres and mixed use area", PrscrpPVBattClass, Bldg:TotStoryCnt, ResProj:NumDwellingUnits, NResPVBattAreaPct )
         case "NonRes/MixedUse"     :  Format( "Prescribed PV/Battery based on '%s' classification w/ %.1f% PV/Battery requirement area", PrscrpPVBattClass, NResPVBattAreaPct )
         case "LowRiseRes"          :  Format( "Prescribed PV/Battery based on '%s' classification w/ %g stories and %.0f dwellings", PrscrpPVBattClass, Bldg:TotStoryCnt, ResProj:NumDwellingUnits )
         case "HiRiseRes_NoPVBatt"  :  Format( "No Prescribed PV/Battery requirement ('%s' classification) due to %.1f% highrise res and mixed use area (below 80%)", PrscrpPVBattClass, HiRiseResNResPVBattAreaPct )
         case "NonRes_NoPVBatt"     :  Format( "No Prescribed PV/Battery requirement ('%s' classification) due to %.1f% nonres and mixed use area (below 80%)", PrscrpPVBattClass, NResPVBattAreaPct )
         default  :  Format( "No prescriptive PV/Battery requirement w/ %.1f% PV requirement area", NResPVBattAreaPct )
      endswitch
    endif
ENDRULE
;       case "HiRiseRes"  :  if (IfValidAnd( ResDwellUnits > 0 ) .AND. HiRiseResPVBattAreaPct > 20)
;                            then  Format( "Prescribed PV/Battery based on '%s' classification w/ %g stories, %.0f dwellings and %.1f% highrise residential area", PrscrpPVBattClass, Bldg:TotStoryCnt, ResProj:NumDwellingUnits, HiRiseResPVBattAreaPct )
;                            else  Format( "Prescribed PV/Battery based on '%s' classification w/ %g stories, %.0f dwellings and %.1f% non-residential area", PrscrpPVBattClass, Bldg:TotStoryCnt, ResProj:NumDwellingUnits, NResPVBattAreaPct )
;                            endif
;       case "LowRiseRes" :  Format( "Prescribed PV/Battery based on '%s' classification w/ %g stories, %.0f dwellings and %.1f% non-residential PV/Battery requirement area", PrscrpPVBattClass, Bldg:TotStoryCnt, ResProj:NumDwellingUnits, NResPVBattAreaPct )
;       case "NonRes/MixedUse" :  Format( "Prescribed PV/Battery based on '%s' classification w/ %.1f% PV/Battery requirement area", PrscrpPVBattClass, NResPVBattAreaPct )
;       default  :  Format( "No prescriptive PV/Battery requirement w/ %.1f% PV requirement area", NResPVBattAreaPct )


////////////////////////////////////////////////////////////////////////////////
// 2022+ Prescribed PV Requirements (for std design) - PV capacity rules

// Spc Prescribed PV Requirements
   ; add logic to prevent Uncond area from contributing to T24PVSize - SAC 01/19/23
RULE NEW Spc:T24PVSize
  LONGFORM
    Title24PhotovoltaicSize
  DATATYPE
    Float
  UNITS
    kWdc
  REFERENCE
    2022+ Standards Equation 140.10-A
  HELP
    "PV direct current size"
  DESCRIPTION
    "PV direct current size"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if ( ( Proj:PrscrpPVBattClass == "HiRiseRes/MixedUse"  .OR.
           Proj:PrscrpPVBattClass == "LowRiseRes/MixedUse" .OR.
           Proj:PrscrpPVBattClass == "NonRes/MixedUse"     ) .AND.
         ( CondgType == "DirectlyConditioned" .OR.
           CondgType == "IndirectlyConditioned" ) .AND.
         IfValidAnd( Proj:CliZnNum > 0 ) )
    then  ( PVBattSizeArea *
            T24NR_PVCapacity:FactorA( "ClimateZone", Proj:CliZnNum,
                                      "BldgType", PVBattSizeBldgType ) ) / 1000
    else  0  endif
ENDRULE

// ResOtherZn Prescribed PV Requirements
RULE NEW ResOtherZn:T24PVSize
  LONGFORM
    Title24PhotovoltaicSize
  DATATYPE
    Float
  UNITS
    kWdc
  REFERENCE
    2022+ Standards Equation 140.10-A
  HELP
    "PV direct current size"
  DESCRIPTION
    "PV direct current size"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if ( Type == "Conditioned"  .AND.
         ( Proj:PrscrpPVBattClass == "HiRiseRes/MixedUse"  .OR.
           Proj:PrscrpPVBattClass == "LowRiseRes/MixedUse" .OR.
           Proj:PrscrpPVBattClass == "NonRes/MixedUse" ) )
    then  ( PVBattSizeArea *
            T24NR_PVCapacity:FactorA( "ClimateZone", ValidOr( Proj:CliZnNum, 12 ),
                                      "BldgType", PVBattSizeBldgType ) ) / 1000
    else  0  endif
ENDRULE

// ResZn Prescribed PV Requirements
RULE NEW ResZn:T24PVSize
  LONGFORM
    Title24PhotovoltaicSize
  DATATYPE
    Float
  UNITS
    kWdc
  REFERENCE
    2022+ Standards Equations 140.10-A & 150.1-C
  HELP
    "PV direct current size"
  DESCRIPTION
    "PV direct current size"
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2019
    UNDEFINED
  DEFAULT
    if ( Proj:PrscrpPVBattClass == "HiRiseRes/MixedUse" )
    then  ( ValidOr( CondFlrAreaWithMult, 0 ) *
            T24NR_PVCapacity:FactorA( "ClimateZone", ValidOr( Proj:CliZnNum, 12 ),
                                      "BldgType", "Highrise Multifamily" ) ) / 1000
    else if ( Proj:PrscrpPVBattClass == "LowRiseRes/MixedUse" .OR.
              Proj:PrscrpPVBattClass == "LowRiseRes" )
    then  (( ValidOr( CondFlrAreaWithMult, 0 ) *
             T24MF_PVCapacity:A_CFA( "ClimateZone", ValidOr( Proj:CliZnNum, 12 ) ) ) / 1000) +
          (  ValidOr( NumDwellingUnitsWithMult, 0 ) *
             T24MF_PVCapacity:B_Dwellings( "ClimateZone", ValidOr( Proj:CliZnNum, 12 ) ) )
    else  0
    endif endif
ENDRULE

RULE NEW Proj:PrscrpPVSize
  LONGFORM
    PrescriptivePhotovoltaicSize
  DATATYPE
    Float
  UNITS
    kWdc
  HELP
    "Prescriptive PV direct current size"
  DESCRIPTION
    "Prescriptive PV direct current size"
  INPUTCLASS
    NotInput
  DEFAULT
    if ( PrscrpPVBattClass == "HiRiseRes/MixedUse"  .OR.
         PrscrpPVBattClass == "LowRiseRes/MixedUse" .OR.
         PrscrpPVBattClass == "LowRiseRes"          .OR.
         PrscrpPVBattClass == "NonRes/MixedUse" )
    then  SumAll( Spc:T24PVSize ) + SumAll( ResZn:T24PVSize ) + SumAll( ResOtherZn:T24PVSize )
    else  0
    endif
ENDRULE
;    if (DisableAllPVBattRequirements)
;    then  0



////////////////////////////////////////////////////////////////////////////////
// Project-level reduced PV requirement exception data - SAC 04/20/22

RULE Proj:ReducedPVReqExcptLowRiseRes
  DESCRIPTION
    "whether or not the reduced PV requirement exception list pertains
    to low-rise residential (sec. 170.2(f))"
  INPUTCLASS
    NotInput
  DEFAULT 
    switch (PrscrpPVBattClass)
       case "LowRiseRes/MixedUse" :  2
       case "LowRiseRes"          :  1
       default                    :  0
    endswitch
ENDRULE

RULE Proj:ReducedPVReqExcpt
  DESCRIPTION
    "Exception describing why standard PV requirements don't apply to this project"
  INPUTCLASS
    CondRequired
  RESETS
    ResetTheFollowingWhenThisIsModified
      Proj:ReducedPVReqVal
  DEFAULT 
    if (DisableAllPVBattRequirements)
    then  "- select applicable reason for PV reduction -"
    else if (IfValidAnd( IsLowRiseMFam > 0 ))
    then if (IfValidAnd( PrscrpPVSize < 1.8 ))
         then  "(R Exc.2) No PV required when prescribed system < 1.8 kWdc"
         else if (IfValidAnd( PrscrpPVSize > SolAccessRfAreaPVPwr ))
         then  "Limited by SARA provided"
         else  "- select applicable reason for PV reduction -"
         endif endif
    else if (IfValidAnd( PrscrpPVSize < 4 ))
         then  "(NR Exc.2) No PV required when prescribed system < 4 kWdc"
         else if (IfValidAnd( SolAccessRfArea < (SumAll( Bldg:TotCondFlrArea ) * 0.03) ))
         then  "(NR Exc.1) No PV required when SARA < 3% cond floor area"
         else if (IfValidAnd( SolAccessRfArea < 80 ))
         then  "(NR Exc.3) No PV required when SARA < 80 contiguous SF"
         else if (IfValidAnd( PrscrpPVSize > SolAccessRfAreaPVPwr ))
         then  "Limited by SARA provided"
         else  "- select applicable reason for PV reduction -"
         endif endif endif endif
    endif endif
ENDRULE
; reset REMOVED from above - SAC 05/26/22
;    ResetThisWhenTheFollowingIsModified
;      Proj:SolAccessRfArea

RULE Proj:ReducedPVReq
  DESCRIPTION
    "whether or not an exception to standard PV requirements applies to
    this project (exception must be entered)"
  INPUTCLASS
    Optional
  DEFAULT 
    if (EnumValue( ReducedPVReqExcpt ) > 0) 
      then 1
    else 0
    endif
ENDRULE
;  RESETS   - removed - SAC 05/26/22
;    ResetThisWhenTheFollowingIsModified
;      Proj:SolAccessRfArea
;    ResetTheFollowingWhenThisIsModified
;      Proj:ReducedPVReqExcpt

RULE Proj:ReducedPVReqExcptDesc
  DESCRIPTION
    "Full text of exception describing why standard PV requirements don't apply to this project"
  INPUTCLASS
    NotInput
  DEFAULT 
    switch (EnumValue( ReducedPVReqExcpt ))
       case 100 :  "RTF\ReducedPVExcept100.rtf"
       case 101 :  "RTF\ReducedPVExcept101.rtf"
       case 102 :  "RTF\ReducedPVExcept102.rtf"
       case 103 :  "RTF\ReducedPVExcept103.rtf"
       case 104 :  "RTF\ReducedPVExcept104.rtf"
       case 201 :  "RTF\ReducedPVExcept201.rtf"
       case 202 :  "RTF\ReducedPVExcept202.rtf"
       case 203 :  "RTF\ReducedPVExcept203.rtf"
       case 204 :  "RTF\ReducedPVExcept204.rtf"
       case 205 :  "RTF\ReducedPVExcept205.rtf"
       default :  ""
    endswitch
ENDRULE

RULE Proj:ReducedPVReqMinVal
  DESCRIPTION
    "Minimum reduced PV requirement capacity (depending on selected exception)"
  INPUTCLASS
    NotInput
  DEFAULT 
    if (IfValidAnd( ReducedPVReq > 0 )==0) then  0
    else if (FindInString( ReducedPVReqExcpt, "Limited by SARA" ) >= 0)
    then  SolAccessRfAreaPVPwr
    else  0
    endif endif
ENDRULE
      ; Bldg area properties:
      ;     "TotFlrArea",          BEMP_Flt,  1,  0,  0,   Opt,  "ft2",  "TotalFloorArea",  ""
      ;     "NonResFlrArea",       BEMP_Flt,  1,  0,  0,   Opt,  "ft2",  "NonresidentialFloorArea",  "" 
      ;     "ResFlrArea",          BEMP_Flt,  1,  0,  0,   Opt,  "ft2",  "ResidentialFloorArea",  "" 
      ;     "TotCondFlrArea",      BEMP_Flt,  1,  0,  0,   Opt,  "ft2",  "TotalConditionedFloorArea",  ""  
      ;     "TotCondVol",          BEMP_Flt,  1,  0,  0,   Opt,  "ft3",  "TotalConditionedVolume",  ""  
      ;     "TotCondFlrAreaNew",   BEMP_Flt,  1,  0,  0,  NInp,  "ft2",  "TotalConditionedFloorAreaNew",  ""  
      ;     "TotFlrAreaNew",       BEMP_Flt,  1,  0,  0,  NInp,  "ft2",  "TotalFloorAreaNew",  ""  

RULE Proj:EnforceReducedPVReqMin
  DESCRIPTION
    "Whether or not to enforce minimum reduced PV requirement capacity"
  INPUTCLASS
    NotInput
  DEFAULT 
    if (ReducedPVReqMinVal > 0)
    then  EnumValue( ReducedPVReqExcpt )
    else  0  endif
ENDRULE

RULE Proj:ReducedPVReqVal
  DESCRIPTION
    "Reduced PV requirement capacity"
  INPUTCLASS
    Optional
  MINIMUM
    ReducedPVReqMinVal
  DEFAULT 
    if (ReducedPVReq > 0 )
    then if (FindInString( ReducedPVReqExcpt, "No PV" ) > 0 .OR.
             FindInString( ReducedPVReqExcpt, "snow load" ) > 0)
        then  0
        else if (FindInString( ReducedPVReqExcpt, "Limited by SARA" ) >= 0)
        then  SolAccessRfAreaPVPwr
        else UNDEFINED
        endif endif
    else if (ReducedPVReqMinVal > 0.01)
    then  ReducedPVReqMinVal
    else  UNDEFINED
    endif endif
ENDRULE
; prior logic - SAC 05-26-22
;        if (EnumValue( ReducedPVReqExcpt = 1 )) ; .OR. EnumValue( ReducedPVReqExcpt >= 6 ))) ; APB 05/18/22 - Res enums were 1-8, new enums are 100+
;        then  0
;        else if (EnumValue( ReducedPVReqExcpt = 100 ) .AND. SumAll( PVArray:DCSysSize ) > SolAccessRfAreaPVPwr) ; "Limited by SARA provided"
;        then SolAccessRfAreaPVPwr

      ; added logic to prevent setting UseReducedPVReqVal to a value above PrscrpPVSize (so that reduced req exception not reported) - SAC 02/02/23
RULE Proj:UseReducedPVReqVal
  DESCRIPTION
    "Reduced PV requirement capacity (only if valid inputs)"
  INPUTCLASS
    NotInput
  DEFAULT 
    if (ReducedPVReq > 0 .AND. EnumValue( ReducedPVReqExcpt ) > 0 .AND.
        IfValidAnd( ReducedPVReqVal >= 0 ) .AND.
        IfValidAnd( ReducedPVReqVal < PrscrpPVSize ))
    then  ReducedPVReqVal
    else  UNDEFINED
    endif
ENDRULE

// Proj-wide PV Requirements
   ; adjust Proj:T24PVSize for lower SARA-based PV for NonRes/MixedUse & HiRiseRes prescrip PV models - SAC 04/21/22
RULE NEW Proj:T24PVSize
  LONGFORM
    Title24PhotovoltaicSize
  DATATYPE
    Float
  UNITS
    kWdc
  HELP
    "PV direct current size"
  DESCRIPTION
    "PV direct current size"
  INPUTCLASS
    NotInput
  DEFAULT
    if (DisableAllPVBattRequirements)
    then  0
    else if (ReducedPVReq > 0 .AND. IfValidAnd( UseReducedPVReqVal >= 0 ))
    then  UseReducedPVReqVal
    else if ( PrscrpPVBattClass == "HiRiseRes/MixedUse"  .OR.
              PrscrpPVBattClass == "LowRiseRes/MixedUse" .OR.
              PrscrpPVBattClass == "LowRiseRes"          .OR.
              PrscrpPVBattClass == "NonRes/MixedUse" )
    then  PrscrpPVSize
    else  0
    endif endif endif
ENDRULE
; logic removed since SARA limits incorporated into ReducedPVReq - SAC 05/26/22
;    then  if ( SolAccessRfAreaPVPwr > 0 .AND.
;               SolAccessRfAreaPVPwr < PrscrpPVSize)
;          then  if ( SolAccessRfAreaPVPwr < SumAll(  PVArray:DCSysSize ) .AND. ReducedPVReq = 0 )  ; APB 05/18/22 - User de-selected reduced PV requirement, even though proposed kW > SARA kW (tic #3352)
;                then  PrscrpPVSize
;                else  SolAccessRfAreaPVPwr
;                endif

// keep track of FRACTION of final Std design PV size / Prescriptive table size
RULE NEW Proj:PrscrpStdPVSizeRat
  LONGFORM
    PrescriptiveStandardPhotovoltaicSizeRatio
  DATATYPE
    Float
  UNITS
    frac
  HELP
    "Ratio of final standard design PV size / size based on prescriptive tables"
  DESCRIPTION
    "Ratio of final standard design PV size / size based on prescriptive tables"
  INPUTCLASS
    NotInput
  DEFAULT
    if (IfValidAnd( PrscrpPVSize > 0 ))
    then  T24PVSize / PrscrpPVSize
    else  0  endif
ENDRULE

RULE NEW Proj:T24PVArrayRef
  LONGFORM
    Title24PhotovoltaicArrayReference
  DATATYPE
    PVArray
  HELP
    "Standard design PV array"
  DESCRIPTION
    "Standard design PV array"
  INPUTCLASS
    NotInput
  ANNUAL_BASELINE : T24N_2019
    UNDEFINED
  ANNUAL_BASELINE
    if (IfValidAnd( T24PVSize > 0.1 ))
    then  RuleLibrary( PVArray, "T24 PVArray" )
    else  UNCHANGED  endif
ENDRULE


////////////////////////////////////////////////////////////////////////////////

RULE Proj:PVBattSim
  DESCRIPTION
    "Whether or not to include analysis of photovoltaics and battery storage.
    If checked the compliance report will be watermarked. if unchecked any PV and battery
    included in the model will not be simulated."
  INPUTCLASS : T24N_2019
    Optional
  INPUTCLASS
    NotInput  IgnoreUserInput  "Always activated for 2022+ analysis"
  CHECKSIM 
    if (IfValidAnd( PVBattSim > 0 ) .AND. SumAll( PVArray:DCSysSize ) > 0 .AND. QuickAnalysis > 0)
    then  POSTERROR("Quick Analysis (on main Project dialog tab) must be de-selected in order to run PV and Battery analysis.")
    else  UNCHANGED  
    endif
  DEFAULT : T24N_2019
    if (IfValidAnd( ZEROCode > 0 ))
    then 1
    else 0 
    endif
  DEFAULT 
    1
  SIZING
    UNDEFINED
  ANNUAL_PROPOSED
    u:PVBattSim
  ANNUAL_BASELINE : T24N_2019
    UNDEFINED
  ANNUAL_BASELINE
    if (IfValidAnd( T24PVSize > 0.1 ))
    then  1  else  UNDEFINED  endif
ENDRULE

RULE Proj:HavePVGeomObj
  INPUTCLASS
    NotInput 
  DEFAULT 
    if (ComponentCount( PVArrayGeom ) < 1) then  0  else  1  endif
  ANNUAL
    if (ComponentCount( PVArrayGeom ) < 1) then  0  else  1  endif
ENDRULE

RULE Proj:HavePVShadeObj
  INPUTCLASS
    NotInput 
  DEFAULT 
    if (ComponentCount( PVArrayShade ) < 1) then  0  else  1  endif
  ANNUAL
    if (ComponentCount( PVArrayShade ) < 1) then  0  else  1  endif
ENDRULE


RULE PVArrayGeom:ChildPolyLpRef
  INPUTCLASS
    NotInput 
  DEFAULT 
    MaxChildComp( PolyLp:Area )
  ANNUAL
    MaxChildComp( PolyLp:Area )
ENDRULE

RULE PVArrayShade:ChildPolyLpRef
  INPUTCLASS
    NotInput 
  DEFAULT 
    MaxChildComp( PolyLp:Area )
  ANNUAL
    MaxChildComp( PolyLp:Area )
ENDRULE


// PVArray properties
RULE PVArray:SpecMthd
  DESCRIPTION
    "Type of data used to describe the PV array"  
  INPUTCLASS
    Default 
  OPTION
    Simplified
    Detailed
  DEFAULT 
    "Simplified"
  ANNUAL
    if (LocalStatus( SpecMthd ) > 3) then  UNCHANGED
    else  "Simplified"
    endif
ENDRULE

RULE PVArray:DCSysSize
  DESCRIPTION
    "DC (direct current) power rating of the photovoltaic array (at standard test conditions)"  
  INPUTCLASS
    Default 
  UNITS
    kW
  DEFAULT 
    0
  ANNUAL_BASELINE : T24N_2019
    UNCHANGED
  ANNUAL_BASELINE
    if (IfValidAnd( T24PVSize > 0.1 ))
    then  T24PVSize
    else  UNCHANGED  endif
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:SolarAccess
  DESCRIPTION
    "Solar access (100 * incident solar energy given shading, divided by the incident solar energy if there were no shading)"  
  INPUTCLASS
    Default 
  MINIMUM
    0
  MAXIMUM
    100
  DEFAULT 
    if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
    else  98
    endif
  ANNUAL
    if (LocalStatus( SolarAccess ) > 3) then  UNCHANGED
    else
          if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
          else  98
          endif
    endif
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:ShdgImpactFac
  DESCRIPTION
    "Shading Impact Factor - ratio of relative power output to fraction shaded: PwrOut = PwrSys*(1-SIF*FracShaded) (related to PVWPwrElec options)"  
  INPUTCLASS
    NotInput 
  MINIMUM
    0
  DEFAULT 
    if (IfValidAnd(PwrElec = "- none -")) then 2.0
    else 1.2
    endif
  ANNUAL
    if (IfValidAnd(PwrElec = "- none -")) then 2.0
    else 1.2
    endif
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:SysLosses
  DESCRIPTION
    "Total system losses"  
  INPUTCLASS
    NotInput 
  MINIMUM
    0
  MAXIMUM
    100
  DEFAULT 
    if (IfValidAnd( ShdgImpactFac > 0 ) .AND. IfValidAnd( SolarAccess > 0 ))
    then  100 * ( 1-((1-0.14) * max( (1 - ShdgImpactFac * (1 - (SolarAccess / 100))), 0 )))
    else  UNDEFINED
    endif
  ANNUAL
    if (IfValidAnd( ShdgImpactFac > 0 ) .AND. IfValidAnd( SolarAccess > 0 ))
    then  100 * ( 1-((1-0.14) * max( (1 - ShdgImpactFac * (1 - (SolarAccess / 100))), 0 )))
    else  UNDEFINED
    endif
ENDRULE

RULE PVArray:ModuleType
  DESCRIPTION
    "Type of photovoltaic modules in the array"  
  INPUTCLASS
    Default 
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:SpecMthd
  DEFAULT 
    "Standard"
  ANNUAL
    if (LocalStatus( ModuleType ) > 3) then  UNCHANGED
    else  "Standard"
    endif
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:CalFlexibleInstall
  DESCRIPTION
    "whether of not this array uses the California Flexible Installation criteria"  
  INPUTCLASS
    Prescribed 
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:CalFlexibleInstallOpt
  DESCRIPTION
    "California Flexible Installation (CFI) option"  
  INPUTCLASS
    Default 
  OPTION
    n/a
    CFI1
    CFI2
  DEFAULT 
    if (Proj:HavePVShadeObj .OR. IfValidAnd(ArrayType != "Fixed (open rack)"))  // APB 05/11/22 - Default to "n/a" for any axis tracking array type (tic #3352)
    then  "n/a"
    else  "CFI1"
    endif
  ANNUAL
    if (LocalStatus( CalFlexibleInstallOpt ) > 3) then  UNCHANGED
    else if (Proj:HavePVShadeObj .OR. IfValidAnd(ArrayType != "Fixed (open rack)"))  // APB 05/11/22 - Default to "n/a" for any axis tracking array type (tic #3352)
    then  "n/a"
    else  "CFI1"
    endif endif
ENDRULE


RULE PVArray:PolyLpRef
  DESCRIPTION
    "PolyLp object that describes PV array geometry"  
  INPUTCLASS
    NotInput
  DEFAULT 
    if (GeomSpecMthd == "reference PVArrayGeom object" .AND.
        LocalCompAssigned( PVArrayGeomRef ))
    then  PVArrayGeomRef:ChildPolyLpRef
    else if (LocalCompAssigned( PolyLpRef ) .AND.
             ChildCount( PolyLp ) > 0)
    then  MaxChildComp( PolyLp:Area )
    else  UNCHANGED
    endif endif
  ANNUAL
    if (GeomSpecMthd == "reference PVArrayGeom object" .AND.
        LocalCompAssigned( PVArrayGeomRef ))
    then  PVArrayGeomRef:ChildPolyLpRef
    else if (LocalCompAssigned( PolyLpRef ) .AND.
             ChildCount( PolyLp ) > 0)
    then  MaxChildComp( PolyLp:Area )
    else  UNCHANGED
    endif endif
ENDRULE


RULE NEW PVArray:ValidFlag
  DATATYPE
    Integer
  DESCRIPTION
    "flag indicating this a valid PV Array (defined w/ size > 0)"
  INPUTCLASS
    NotInput
  DEFAULT
    if (IfValidAnd( DCSysSize > 0 ))
    then  1
    else  0
    endif
  ANNUAL
    if (IfValidAnd( DCSysSize > 0 ))
    then  1
    else  0
    endif
ENDRULE

RULE NEW PVArrayGeom:NumPVArrayRefs
  DATATYPE
    Integer
  DESCRIPTION
    "Number of PV Arrays this object assigned to"  
  INPUTCLASS
    NotInput
  DEFAULT 
    SumRevRef( PVArray:PVArrayGeomRef, PVArray:ValidFlag )
  ANNUAL
    SumRevRef( PVArray:PVArrayGeomRef, PVArray:ValidFlag )
ENDRULE


RULE PVArray:LctnSpecMthd
  DESCRIPTION
    "How PV array location is to be specified"  
  INPUTCLASS
    Default 
  OPTION
    - not specified -
    X,Y,Z and height, width
;    in relation to another PV Array
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:CalFlexibleInstallOpt
    ResetTheFollowingWhenThisIsModified
      PVArray:RefX
      PVArray:RefY
      PVArray:RefZ
      PVArray:Hgt
      PVArray:Wd
  DEFAULT 
    "- not specified -"
  ANNUAL
    if (LocalStatus( LctnSpecMthd ) > 3) then  UNCHANGED
    else  "- not specified -"
    endif
ENDRULE
; more resets for above rule (once implemented)
;      PVArray:RelLctnSpecMthd
;      PVArray:RelLctnDistance
;      PVArray:RelLctnAz
;      PVArray:RelLctnTiltDeg

RULE PVArray:GeomSpecMthd
  DESCRIPTION
    "How PV array geometry (azimuth & tilt) is to be specified"  
  INPUTCLASS
    Default 
  ;OPTION
  ;  azimuth and tilt
  ;  reference PVArrayGeom object
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:CalFlexibleInstallOpt
  DEFAULT 
    "azimuth and tilt"
  CHECKSIM
    if (IfValidAnd( PVBattSim > 0 )==0 .OR. IfValidAnd( DCSysSize > 0 )==0) then  UNCHANGED
    else if (GeomSpecMthd == "azimuth and tilt")
    then  if (LctnSpecMthd == "- not specified -")
          then  UNCHANGED
          else if (LctnSpecified == 0)
          then  PostError( "PV Array '%s' Location fields missing or invalid.", Name )
          else  UNCHANGED
          endif endif
    else if (GeomSpecMthd == "reference PVArrayGeom object")
    then  if (LocalCompAssigned( PVArrayGeomRef )==0)
          then  PostError( "PV Array '%s' Geometry to be defined via PVArrayGeom object assignment, but none is assigned.", Name )
          else if (IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle >= 0 )==0 .OR. IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle <= 90 )==0)
          then  PostError( "PVArrayGeom '%s' (referenced by PV Array '%s') is invalid (PolyLp missing, facing downward or vertices entered in reversed order).", PVArrayGeomRef:Name, Name )
          else if (IfValidAnd( Az >= 0 )==0 .OR. IfValidAnd( TiltAngle >= 0 )==0 .OR.
                   IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:Area > 0 )==0)
          then  PostError( "Geometry defined by PVArrayGeom '%s' (referenced by PV Array '%s') has invalid geometry.", PVArrayGeomRef:Name, Name )
          else  UNCHANGED
          endif endif endif
    else  UNCHANGED
    endif endif endif
ENDRULE

RULE PVArray:PVArrayGeomRef
  DESCRIPTION
    "The PVShade object that describes the orientation & tilt (& polygon) of this PV array" 
  INPUTCLASS
    Optional 
 ; DEFAULT   - no default
ENDRULE


;   "Set Proj:PVWRelLocDistLbl[1]"   Proj:PVWRelLocDistLbl[1]  = {
;         if (PVWGeomSpecMethod[1] == 1 .OR. PVWLocSpecMethod[1] != 2) then  UNDEFINED
;         else if (PVWRelLocSpecMeth[1] == 5)
;         then  "Distance Between Centroids:"
;         else  "Distance Separating Arrays:"    endif endif  }

;;     Proj:PVWRelLocArrayIdx[ALL], Optional,  0,    1,   1,    1,  1,  1
;;     Proj:PVWRelLocDistance[ALL], Optional,  0,    1,   1,    1,  1,  1 BEMP_Flt,  5,  "ft",    "Distance between this and another PV array"    
;;     Proj:PVWRelLocAzm[ALL],      Optional,  0,    1,   1,    1,  1,  1 BEMP_Flt,  5,  "deg",   "Azimuth from centroid of another array to this one (0=N, 90=E, ...)"    

;   "Set Proj:PVWRelLocAzmLbl[1]"    Proj:PVWRelLocAzmLbl[1]    = {
;         if (PVWGeomSpecMethod[1] == 1 .OR. PVWLocSpecMethod[1] != 2 .OR.
;             PVWRelLocSpecMeth[1] != 5 .OR. IfValidAnd( PVWRelLocArrayIdx[1] > 0 )==0 .OR.
;             IfValidAnd( PVWRelLocArrayIdx[1] <= 5 )==0) then  UNDEFINED
;         else  Format( "Azimuth from centroid of array #%g to centroid of this array:", PVWRelLocArrayIdx[1] )
;         endif  }

;;     Proj:PVWRelLocTiltDeg[ALL],  Optional,  0,    1,   1,    1,  1,  1 BEMP_Flt,  5,  "deg",   "Tilt from centroid of another array to this one (in degrees, 0-horizontal, 90-vertical)"    
;   "Set Proj:PVWRelLocTiltLbl[1]"    Proj:PVWRelLocTiltLbl[1]    = {
;         if (PVWGeomSpecMethod[1] == 1 .OR. PVWLocSpecMethod[1] != 2 .OR.
;             PVWRelLocSpecMeth[1] != 5 .OR. IfValidAnd( PVWRelLocArrayIdx[1] > 0 )==0 .OR.
;             IfValidAnd( PVWRelLocArrayIdx[1] <= 5 )==0) then  UNDEFINED
;         else  Format( "Tilt from centroid of array #%g to centroid of this array:", PVWRelLocArrayIdx[1] )
;         endif  }

; TO DO - when PVWGeomSpecMethod[*] == 1, then FORCE defaulting of Azimuth & Tilt (based on assigned PVArrayGeom object PolyLp)
RULE PVArray:Az
  DESCRIPTION
    "Direction that the array faces (0-North, 45-NE, 90-East, 180-S, 270-W)"  
  INPUTCLASS
    Default 
  UNITS
    deg
  MINIMUM
    90
  MAXIMUM
    300
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:GeomSpecMthd
      PVArray:PVArrayGeomRef
      PVArray:CalFlexibleInstallOpt
  DEFAULT 
    if (GeomSpecMthd = "reference PVArrayGeom object")
    then  if (LocalCompAssigned( PVArrayGeomRef )==0) then  UNDEFINED
          else if (IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle >=  0 )==0 .OR.
                   IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle <= 90 )==0)
          then  UNDEFINED
          else if (LocalStatus( PVArrayGeomRef:ChildPolyLpRef:Azimuth ) > 0)
          then  PVArrayGeomRef:ChildPolyLpRef:Azimuth
          else  UNDEFINED
          endif endif endif
    else  
          if ( IfValidAnd(ArrayType = "Tracking (one axis)"))  // APB 05/11/22 - Different default for one-axis tracking array type (tic #3352)
          then 180
          else 170
          endif
    endif
  ANNUAL
    if (LocalStatus( Az ) > 3) then  UNCHANGED
    else
          if (GeomSpecMthd = "reference PVArrayGeom object")
          then  if (LocalCompAssigned( PVArrayGeomRef )==0) then  UNDEFINED
                else if (IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle >=  0 )==0 .OR.
                         IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle <= 90 )==0)
                then  UNDEFINED
                else if (LocalStatus( PVArrayGeomRef:ChildPolyLpRef:Azimuth ) > 0)
                then  PVArrayGeomRef:ChildPolyLpRef:Azimuth
                else  UNDEFINED
                endif endif endif
          else
                if ( IfValidAnd(ArrayType = "Tracking (one axis)"))  // APB 05/11/22 - Different default for one-axis tracking array type (tic #3352)
                then 180
                else 170
                endif
          endif
    endif
ENDRULE


RULE PVArray:TiltInp
  DESCRIPTION
    "Type of PV array tilt input (degrees vs. pitch)"  
  INPUTCLASS
    Default 
  OPTION
    deg
    pitch
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:CalFlexibleInstallOpt
  DEFAULT 
    "deg"
  ANNUAL
    if (LocalStatus( TiltInp ) > 3) then  UNCHANGED
    else  "deg"
    endif
ENDRULE

RULE PVArray:TiltAngle
  DESCRIPTION
    "PV array angle in degrees (0-horizontal, 90-vertical)"  
  INPUTCLASS
    Optional
  UNITS
    deg
  MINIMUM
    0
  MAXIMUM
    90
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:GeomSpecMthd
      PVArray:TiltInp
      PVArray:CalFlexibleInstallOpt
  DEFAULT 
    if (GeomSpecMthd = "reference PVArrayGeom object")
    then  if (LocalCompAssigned( PVArrayGeomRef )==0) then  UNDEFINED
          else if (LocalStatus( PVArrayGeomRef:ChildPolyLpRef:TiltAngle ) > 0)
          then  PVArrayGeomRef:ChildPolyLpRef:TiltAngle
          else  UNDEFINED  endif endif
    else  UNDEFINED  endif
  ANNUAL
    if (LocalStatus( TiltAngle ) > 3) then  UNCHANGED
    else
          if (GeomSpecMthd = "reference PVArrayGeom object")
          then  if (LocalCompAssigned( PVArrayGeomRef )==0) then  UNDEFINED
                else if (LocalStatus( PVArrayGeomRef:ChildPolyLpRef:TiltAngle ) > 0)
                then  PVArrayGeomRef:ChildPolyLpRef:TiltAngle
                else  UNDEFINED  endif endif
          else  UNDEFINED  endif
    endif
ENDRULE

RULE PVArray:TiltPitch
  DESCRIPTION
    "PV array pitch (inches rise / 12 inches run)"  
  INPUTCLASS
    Optional
  UNITS
    x in 12
  MINIMUM
    0
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:GeomSpecMthd
      PVArray:TiltInp
      PVArray:CalFlexibleInstallOpt
  DEFAULT 
    if (GeomSpecMthd = "reference PVArrayGeom object" .AND.
        LocalStatus( TiltAngle ) < 1) then  UNDEFINED
    else if (  GeomSpecMthd = "reference PVArrayGeom object" .OR.
              (TiltInp = "deg" .AND. LocalStatus( TiltAngle ) > 4) )
    then  if (TiltAngle = 0) then  0
          else  12 * tan( (TiltAngle/180)*3.14159 )
          endif
    else
          if ( IfValidAnd(ArrayType = "Tracking (one axis)"))  // APB 05/11/22 - Different default for one-axis tracking array type (tic #3352)
          then 0
          else 5
          endif
    endif endif
  ANNUAL
    if (LocalStatus( TiltPitch ) > 3) then  UNCHANGED
    else
          if (GeomSpecMthd = "reference PVArrayGeom object" .AND.
              LocalStatus( TiltAngle ) < 1) then  UNDEFINED
          else if (  GeomSpecMthd = "reference PVArrayGeom object" .OR.
                    (TiltInp = "deg" .AND. LocalStatus( TiltAngle ) > 4) )
          then  if (TiltAngle = 0) then  0
                else  12 * tan( (TiltAngle/180)*3.14159 )
                endif
          else
            if ( IfValidAnd(ArrayType = "Tracking (one axis)"))  // APB 05/11/22 - Different default for one-axis tracking array type (tic #3352)
            then 0
            else 5
            endif
          endif endif
    endif
ENDRULE

RULE PVArray:TiltAngle
  ; second round of defaulting to handle cross-referencing between Angle & Tilt expressions
  DEFAULT 
    if (GeomSpecMthd = "reference PVArrayGeom object") then  UNCHANGED
    else if (TiltInp = "pitch" .AND. LocalStatus( TiltPitch ) > 4)
    then  (atan( TiltPitch / 12 ) / 3.14159) * 180
    else  
          if ( IfValidAnd(ArrayType = "Tracking (one axis)"))  // APB 05/11/22 - Different default for one-axis tracking array type (tic #3352)
          then 0
          else (atan( 5 / 12 ) / 3.14159) * 180
          endif
    endif endif
  ANNUAL
    if (LocalStatus( TiltAngle ) > 3) then  UNCHANGED
    else
          if (GeomSpecMthd = "reference PVArrayGeom object") then  UNCHANGED
          else if (TiltInp = "pitch" .AND. LocalStatus( TiltPitch ) > 4)
          then  (atan( TiltPitch / 12 ) / 3.14159) * 180
          else
            if ( IfValidAnd(ArrayType = "Tracking (one axis)"))  // APB 05/11/22 - Different default for one-axis tracking array type (tic #3352)
            then 0
            else (atan( 5 / 12 ) / 3.14159) * 180
            endif
          endif endif
    endif
ENDRULE


RULE PVArray:RefX
  DESCRIPTION
    "PV array lower-left x-coordinate" 
  INPUTCLASS
    Optional
  UNITS
    ft
ENDRULE

RULE PVArray:RefY
  DESCRIPTION
    "PV array lower-left y-coordinate"
  INPUTCLASS
    Optional
  UNITS
    ft
ENDRULE

RULE PVArray:RefZ
  DESCRIPTION
    "PV array lower-left z-coordinate (elevation)"
  INPUTCLASS
    Optional
  UNITS
    ft
ENDRULE

RULE PVArray:Hgt
  DESCRIPTION
    "Height of PV array"  
  INPUTCLASS
    Optional
  UNITS
    ft
  MINIMUM
    0.1
ENDRULE

RULE PVArray:Wd
  DESCRIPTION
    "Width of PV array"
  INPUTCLASS
    Optional
  UNITS
    ft
  MINIMUM
    0.1
ENDRULE


RULE PVArray:LctnSpecified
  INPUTCLASS
    NotInput 
  DEFAULT 
    if (GeomSpecMthd == "azimuth and tilt")
    then  if (LctnSpecMthd == "- not specified -") then  0
          else if (LctnSpecMthd == "X,Y,Z and height, width")
          then  if (LocalStatus( Hgt  )>0 .AND. LocalStatus( Wd   )>0 .AND.
                    LocalStatus( RefX )>0 .AND. LocalStatus( RefY )>0 .AND.
                    LocalStatus( RefZ )>0) then  2
                else  0  endif
          else if (LctnSpecMthd == "in relation to another PV Array")
          then  0  ; NYI
          else  0  ; undefined
          endif endif endif
    else if (GeomSpecMthd == "reference PVArrayGeom object")
    then  if (LocalCompAssigned( PVArrayGeomRef )==0) then  0
          else if (IfValidAnd( Az >= 0 )==0 .OR. IfValidAnd( TiltAngle >= 0 )==0 .OR.
                   IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:Area > 0 )==0) then  0
          else  2  endif endif
    else  0  endif endif
  ANNUAL
    if (GeomSpecMthd == "azimuth and tilt")
    then  if (LctnSpecMthd == "- not specified -") then  0
          else if (LctnSpecMthd == "X,Y,Z and height, width")
          then  if (LocalStatus( Hgt  )>0 .AND. LocalStatus( Wd   )>0 .AND.
                    LocalStatus( RefX )>0 .AND. LocalStatus( RefY )>0 .AND.
                    LocalStatus( RefZ )>0) then  2
                else  0  endif
          else if (LctnSpecMthd == "in relation to another PV Array")
          then  0  ; NYI
          else  0  ; undefined
          endif endif endif
    else if (GeomSpecMthd == "reference PVArrayGeom object")
    then  if (LocalCompAssigned( PVArrayGeomRef )==0) then  0
          else if (IfValidAnd( Az >= 0 )==0 .OR. IfValidAnd( TiltAngle >= 0 )==0 .OR.
                   IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:Area > 0 )==0) then  0
          else  2  endif endif
    else  0  endif endif
ENDRULE

RULE PVArray:LctnMessage
  INPUTCLASS
    NotInput 
  DEFAULT 
    if (IfValidAnd( DCSysSize > 0 )==0 .OR. GeomSpecMthd == "reference PVArrayGeom object")
    then  UNDEFINED
    else if (Proj:HavePVShadeObj > 0 .AND.
             IfValidAnd( LctnSpecified > 0 )==0)
    then  "ERROR:  Location must be specified when PV Array Shade object(s) exist."
    else  UNDEFINED
    endif endif
  ANNUAL
    if (IfValidAnd( DCSysSize > 0 )==0 .OR. GeomSpecMthd == "reference PVArrayGeom object")
    then  UNDEFINED
    else if (Proj:HavePVShadeObj > 0 .AND.
             IfValidAnd( LctnSpecified > 0 )==0)
    then  "ERROR:  Location must be specified when PV Array Shade object(s) exist."
    else  UNDEFINED
    endif endif
ENDRULE
RULE PVArray:LctnSpecMthd
  CHECKSIM
    if (IfValidAnd( PVBattSim > 0 ) .AND.
        IfValidAnd( DCSysSize > 0 ) .AND.
        Proj:HavePVShadeObj > 0 .AND.
        IfValidAnd( LctnSpecified > 0 )==0)
    then  PostError( "Location must be specified for PV Array '%s' since PV Array Shade object(s) exist.", Name )
    else  UNCHANGED
    endif
ENDRULE


RULE PVArray:GeomSummaryMessage
  INPUTCLASS
    NotInput 
  DEFAULT 
    if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
    else if (FindInString( LctnMessage, "ERROR" ) >= 0)
    then  LctnMessage
    else if ( IfValidAnd(ArrayType = "Tracking (two axis)"))  // APB 05/11/22 - Update summary message for tracking axis array types (tic #3352)
    then "2-axis tracking"
    else if ( IfValidAnd(ArrayType = "Tracking (one axis)"))
    then if (GeomSpecMthd == "deg")
          then  Format( "Tracking axis %.0f%c azimuth, %.1f%c tilt (%.1f-in-12)", Az, 176, TiltAngle, 176, TiltPitch )
          else  Format( "Tracking axis %.0f%c azimuth, %.1f-in-12 tilt (%.1f%c)", Az, 176, TiltPitch, TiltAngle, 176 )
          endif
    else if (GeomSpecMthd == "azimuth and tilt")
          then  if (LctnSpecMthd == "- not specified -")
                then  if (TiltInp == "deg")
                      then  Format( "%.0f%c azimuth, %.1f%c tilt (%.1f-in-12) (no location specified)", Az, 176, TiltAngle, 176, TiltPitch )
                      else  Format( "%.0f%c azimuth, %.1f-in-12 tilt (%.1f%c) (no location specified)", Az, 176, TiltPitch, TiltAngle, 176 )
                      endif
                else if (LctnSpecified == 0)
                then  "ERROR:  PV Array Location fields above missing or invalid."
                else  Format( "PV Array:  %.1f ft2 (%.1f W/ft2) with %.0f%c azimuth and %.1f%c tilt.", (Hgt * Wd),
                              (DCSysSize * 1000 / (Hgt * Wd)), Az, 176, TiltAngle, 176 )
                endif endif
    else if (GeomSpecMthd == "reference PVArrayGeom object")
    then  if (LocalCompAssigned( PVArrayGeomRef )==0)
          then  "ERROR:  Geometry to be defined via PVArrayGeom object assignment, but none is assigned."
          else if (IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle >= 0 )==0 .OR. IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:TiltAngle <= 90 )==0)
          then  Format( "ERROR:  PVArrayGeom '%s' is invalid (facing downward, vertices may be reversed).", PVArrayGeomRef:Name )
          else if (IfValidAnd( Az >= 0 )==0 .OR. IfValidAnd( TiltAngle >= 0 )==0 .OR.
                   IfValidAnd( PVArrayGeomRef:ChildPolyLpRef:Area > 0 )==0)
          then  Format( "ERROR:  Geometry defined by PVArrayGeom '%s' which has invalid geometry.", PVArrayGeomRef:Name )
          else  Format( "PV Array:  %.1f ft2 (%.1f W/ft2) with %.0f%c azimuth and %.1f%c tilt.", PVArrayGeomRef:ChildPolyLpRef:Area,
                         (DCSysSize * 1000 / PVArrayGeomRef:ChildPolyLpRef:Area), Az, 176, TiltAngle, 176 )
          endif endif endif
    else  "(geometry summary msg)"
    endif endif endif endif endif endif
ENDRULE


RULE PVArray:ArrayType
  DESCRIPTION
    "Type of mount and/or method of tracking the sun's direction"  
  INPUTCLASS
    Default 
  OPTION
    Fixed (open rack)
//    Fixed (roof mount)  ; APB 05/11/2022 - Option removed from CBECC-Res (tic# 3352)
    Tracking (one axis)
    Tracking (two axis)
  RESETS
    ResetTheFollowingWhenThisIsModified
      PVArray:CalFlexibleInstallOpt
  DEFAULT 
    "Fixed (open rack)"
  ANNUAL
    if (LocalStatus( ArrayType ) > 3) then  UNCHANGED
    else  "Fixed (open rack)"
    endif
ENDRULE

RULE csePVARRAY:pvArrayType
  DESCRIPTION
    "Type of mount and/or method of tracking the sun's direction"  
  INPUTCLASS
    NotInput 
  OPTION
    FixedOpenRack
    FixedRoofMount
    OneAxisTracking
    OneAxisBacktracking
    TwoAxisTracking
  DEFAULT 
    "FixedOpenRack"
  ANNUAL
    "FixedOpenRack"
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:PwrElec
  DESCRIPTION
    "Power electronics (microinverters, DC power optimizers)"  
  INPUTCLASS
    Default 
  DEFAULT 
    "- none -"
  ANNUAL
    if (LocalStatus( PwrElec ) > 3) then  UNCHANGED
    else  "- none -"
    endif
ENDRULE

// APB 04/15/22 - Port CBECC-Res PV inputs (tic #3352) 
RULE PVArray:PwrElecEffAdj
  DESCRIPTION
    "Power electronics inverter efficiency adjustor (related to PwrElec options)"  
  INPUTCLASS
    NotInput 
  MINIMUM 
    0
  MAXIMUM 
    1
  DEFAULT 
    if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
    else if (IfValidAnd(PwrElec = "DC Power Optimizers")) then 0.99
    else 1.0 
    endif endif
  ANNUAL
    if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
    else if (IfValidAnd(PwrElec = "DC Power Optimizers")) then 0.99
    else 1.0 
    endif endif
ENDRULE

RULE PVArray:InverterEff
  DESCRIPTION
    "Nominal rated DC-to-AC conversion efficiency (rated AC power output divided by rated DC power output)"  
  INPUTCLASS
    Optional
  UNITS
    %
  MINIMUM 
    0
  MAXIMUM 
    100
  RESETS
    ResetThisWhenTheFollowingIsModified
      PVArray:SpecMthd
  DEFAULT 
    if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
    else  96
    endif
  ANNUAL
    if (LocalStatus( InverterEff ) > 3) then  UNCHANGED
    else
          if (IfValidAnd( DCSysSize > 0 )==0) then  UNDEFINED
          else  96
          endif
    endif
ENDRULE

RULE NEW PVArray:TreeDescrip
  DATATYPE
    String
  INPUTCLASS
    NotInput 
  DEFAULT 
    if (IfValidAnd( DCSysSize > 0.01 ))
    then  if (IfValidAnd( CalFlexibleInstallOpt != "n/a" ))
          then  Format( "%s kWdc, %s module, %s", FltToStr( DCSysSize ), ModuleType, CalFlexibleInstallOpt )
          else if (IfValidAnd(ArrayType = "Tracking (two axis)"))                                  // APB 05/11/22 - Update tree description for tracking axis array types (tic #3352)
          then Format( "%s kWdc, %s module, 2-axis tracking", FltToStr( DCSysSize ), ModuleType )
          else if (IfValidAnd(ArrayType = "Tracking (one axis)"))
          then  if (GeomSpecMthd == "deg")
                then  Format( "%s kWdc, %s module, Tracking axis %.0f%c azimuth, %.1f%c tilt (%.1f-in-12)", FltToStr( DCSysSize ), ModuleType, Az, 176, TiltAngle, 176, TiltPitch )
                else  Format( "%s kWdc, %s module, Tracking axis %.0f%c azimuth, %.1f-in-12 tilt (%.1f%c)", FltToStr( DCSysSize ), ModuleType, Az, 176, TiltPitch, TiltAngle, 176 )
                endif
          else if (GeomSpecMthd == "azimuth and tilt")
                then if (TiltInp == "deg")
                      then  Format( "%s kWdc, %s module, %.0f%c azimuth, %.1f%c tilt (%.1f-in-12)", FltToStr( DCSysSize ), ModuleType, Az, 176, TiltAngle, 176, TiltPitch )
                      else  Format( "%s kWdc, %s module, %.0f%c azimuth, %.1f-in-12 tilt (%.1f%c)", FltToStr( DCSysSize ), ModuleType, Az, 176, TiltPitch, TiltAngle, 176 )
                      endif
		            else Format( "%s kWdc, %s module, %.1f ft2 (%.1f W/ft2) with %.0f%c azimuth and %.1f%c tilt.", FltToStr( DCSysSize ), ModuleType, PVArrayGeomRef:ChildPolyLpRef:Area,
                         (DCSysSize * 1000 / PVArrayGeomRef:ChildPolyLpRef:Area), Az, 176, TiltAngle, 176 )
		            endif
	        endif endif endif
    else  "not specified"  endif
ENDRULE

RULE PVArrayShade:ChildPolyLpRef
  CHECKSIM
    if (IfValidAnd( PVBattSim > 0 )==0) then  UNCHANGED
    else if (LocalCompAssigned( ChildPolyLpRef )==0)
    then  PostError( "PVArrayShade '%s' Geometry (PolyLp) missing.", Name )
    else if (IfValidAnd( ChildPolyLpRef:TiltAngle >= 0 )==0 .OR. IfValidAnd( ChildPolyLpRef:TiltAngle <= 90 )==0)
    then  PostError( "PVArrayShade '%s' Geometry is invalid (PolyLp missing, facing downward or vertices entered in reversed order).", Name )
    else  UNCHANGED
    endif endif endif
ENDRULE

////////////////////////////////////////////////////////////////////////////////

RULE Proj:PVSizeSum
  UNITS
    kWdc
  DESCRIPTION
    "sum of all PVArray capacities"
  INPUTCLASS
    NotInput 
  DEFAULT 
    SumAll( PVArray:DCSysSize )
  SIZING
    SumAll( PVArray:DCSysSize )
  ANNUAL
    SumAll( PVArray:DCSysSize )
ENDRULE

// APB 05/18/22 - New SARA limit on proposed PV kW (tic #3352)
// revised per direction from CEC - SAC 01/19/23 & SAC 01/20/23
RULE Proj:DCSizeMultiplier
  DESCRIPTION
    "Multiplier on PV system size, used to adjust user-entered proposed PV kW down to required exception kW (when exception is applied)"
  INPUTCLASS
    NotInput
  DEFAULT 
    if (PVSizeSum > 0)
    then  if (DisableAllPVBattRequirements > 0)
          then  0   ; zero out all PV for Hlthcare or EAA
          else if (ValidOr( UseReducedPVReqVal, 9999 ) < PVSizeSum)
          then ReducedPVReqVal / PVSizeSum    ; SCALE user PV to equal UseReducedPVReqVal
          else  1
          endif endif
    else  1
    endif
  ANNUAL_PROPOSED 
    if (IfValidAnd( AllowPropPVBatt = 0 )) then  0
    else if (IfValidAnd( DCSizeMultiplier = 0 ) .AND.
             IfValidAnd( AllowPropPVBatt > 0 ))
    then  if (ValidOr( UseReducedPVReqVal, 9999 ) < PVSizeSum)
          then ReducedPVReqVal / PVSizeSum    ; SCALE user PV to equal UseReducedPVReqVal
          else  1  endif
    else if (LocalStatus( DCSizeMultiplier ) > 0) then  UNCHANGED
    else 1 endif endif endif
  ANNUAL_BASELINE 
    if (IfValidAnd( AllowStdPV = 0 )) then  0
    else  1  endif
ENDRULE
;    if (IfValidAnd( UseReducedPVReqVal >= 0 ) .AND. IfValidAnd( SumAll(  PVArray:DCSysSize ) > 0 ))
;    then  if (ValidOr( UseReducedPVReqVal, 999 ) == (SumAll(  PVArray:DCSysSize )))
;          then  1   ; don't re-scale already scaled value
;          else if (ValidOr( UseReducedPVReqVal, 999 ) <= (SumAll(  PVArray:DCSysSize )))
;          then ReducedPVReqVal / SumAll(  PVArray:DCSysSize )
;          else  1
;          endif endif
;    else  1  endif

// APB 05/18/22 - Add messages about new SARA limit on proposed PV kW
RULE Proj:ReducedPVReqMsg1
  DEFAULT 
    if (DisableAllPVBattRequirements)
    then  ""
    else if (IfValidAnd( SumAll(  PVArray:DCSysSize ) > SolAccessRfAreaPVPwr ))
    then  Format( "Proposed PV capacity of %s kW > cap. based on SARA (%s kW).",
               FltToStr( SumAll(  PVArray:DCSysSize ), 1 ), FltToStr( SolAccessRfAreaPVPwr, 1 ) )
    else  ""
    endif endif
ENDRULE

; merged ReducedPVReqMsg3 into ReducedPVReqMsg2 - SAC 01/10/23 
RULE Proj:ReducedPVReqMsg2
  DEFAULT 
    if (DisableAllPVBattRequirements)
    then  ""
    else if (IfValidAnd( SumAll(  PVArray:DCSysSize ) > SolAccessRfAreaPVPwr ))
    then  if (ReducedPVReq = 1)
          then  if (EnumValue(ReducedPVReqExcpt) = 100)  ; "Limited by SARA provided"
                then "Proposed kW will be adjusted to match the capacity based on SARA."
                else ""  endif 
          else if (ReducedPVReq = 0)
          then       "Standard PV & Battery = Prescriptive tables w/ no reduced PV reqrmt."
          else ""  endif endif
    else  ""  endif endif
ENDRULE

;RULE Proj:ReducedPVReqMsg3
;  DEFAULT 
;    if (IfValidAnd( SumAll(  PVArray:DCSysSize ) > SolAccessRfAreaPVPwr ))
;    then  if (ReducedPVReq = 0)
;        then "Standard PV & Battery = Prescriptive tables w/ no reduced PV requirement."
;        else ""
;        endif
;    else  ""
;    endif
;ENDRULE
;;        then "With no reduced PV requirement, standard PV & Battery matches prescriptive tables."


////////////////////////////////////////////////////////////////////////////////

// ** debugging rule evaluation duration **
RULE NEW Proj:RuleEvalDuration
  INPUTCLASS
    NotInput 
  DEFAULT 
    LogDuration( "            time to evaluate PV DEFAULT rules:  %.3f seconds" )
  SIZING_PROPOSED 
    LogDuration( "            time to evaluate PV SIZING_PROPOSED rules:  %.3f seconds" )
  SIZING_BASELINE 
    LogDuration( "            time to evaluate PV SIZING_BASELINE rules:  %.3f seconds" )
  ANNUAL_PROPOSED
    LogDuration( "            time to evaluate PV ANNUAL_PROPOSED rules:  %.3f seconds" )
  ANNUAL_BASELINE
    LogDuration( "            time to evaluate PV ANNUAL_PROPOSED rules:  %.3f seconds" )
ENDRULE


;RULE Proj:Action
;  DEFAULT
;    StoreBEMProc( "end PV defaulting", 0 )
;ENDRULE
;;    PostMessageToLog( "END PV rules..." )

