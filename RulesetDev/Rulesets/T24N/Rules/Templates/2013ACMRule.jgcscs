JGCSCS
4
2013ACMRule
*.rule
David Reddy
david@360-Analytics.com


TRUE
//

0
52
/* --------------  --------------------
 Input restriction summary: 
      
 Baseline rule summary: 

*/      
RULE NEW
RULE Object:Object:Object:Property
  DESCRIPTION
    "" // ACM or SDD Definition
  HELP
    "" // ACM Applicability and other guidance 
  REFERENCE 
    
  INPUTCLASS
    Compulsory
    Required
    Optional
    Default
    CriticalDefault
    Prescribed
    NotInput
  MINIMUM 
    
  COMMONMINIMUM
    
  COMMONMAXIMUM
    
  MAXIMUM 
    
  UNITS 
; The UNITS block shows the specific units that apply to the numeric values shown in other parts of the rule. 
; The UNITS shown should be consistent with the units used in the data model XML schema. 
; If the values in the UNITS block are not consistent an error would be generated.
  OPTION         
; The OPTION section is only for data model elements that are not numeric, and instead can be one of a specific group of identifiers. 
; This is often called an enumerated list. The list shown in the OPTION block will also be represented in the XML Schema file. 
; The two sources of OPTION values should be checked for consistency. All values shown in OPTION blocks are available, none are available conditionly.
  DEFAULT 
; The DEFAULT block shows the value used if not provided by the user data model.
  PROPOSEDSIZING
    IF (u:property = 10 ) 
       THEN 30
    ELSE  
    ENDIF
  PROPOSED   
    
  BASELINESIZING
    
  BASELINE  
    
ENDRULE
0
FALSE
19
SectionHeading

// \*\*\*\*\*\*\*\*\*\* .*+
FALSE
FALSE
6
0


0
FALSE
Single Line To Do Items 1
Added by LDH
// TO DO.*+
FALSE
FALSE
20
0


0
FALSE


.+ISSUE.*+
FALSE
FALSE
14
0


0
FALSE
Single Line To Do Items 2
Added by LDH
; TO DO.*+
FALSE
FALSE
20
0


0
FALSE
Single-line comment 1

//.*+
FALSE
FALSE
5
0


0
TRUE
Single-line comment 2

;.*+
FALSE
FALSE
5
0


0
TRUE
Multi-line comment

/\*
FALSE
TRUE
5
0


3
FALSE
Preprocessor statement

^[ \t]*+#
FALSE
TRUE
11
0


4
FALSE
Operator

[-+*/=<>%&^|!~?()[\]]++
FALSE
FALSE
13
0


0
FALSE
Bracket

[{}]++
FALSE
FALSE
17
0


0
FALSE
String

"
FALSE
FALSE
9
0


5
FALSE
Character
Closing quote optional so an unclosed string is still colored as a string
'[^'\\\r\n]*+(?:\\(?:.|$)[^'\\\r\n]*+)*+'?
FALSE
FALSE
9
0


0
FALSE
Hexadecimal number

\b0x[0-9A-F]++\b
TRUE
FALSE
10
0


0
FALSE
Integer or float

\b[0-9]++(\.[0-9]+)?(E[+-]?+[0-9]++)?[fl]?+\b
TRUE
FALSE
10
0


0
FALSE
Block headings

\b(?>RULE NEW|RULE|ENDRULE|TABLE|ENDTABLE)\b
FALSE
FALSE
2
0


0
FALSE
Block subheadings

\b(?>DATATYPE|SHORTFORM|LONGFORM|DESCRIPTION|HELP|REFERENCE|INPUTCLASS|MINIMUM|COMMONMINIMUM|COMMONMAXIMUM|MAXIMUM|UNITS|OPTION|CHECKCODE|CHECKSIM|DEFAULT|PROPOSEDSIZING|PROPOSED|BASELINESIZING|BASELINE|SIZING|SIZING_PROPOSED|SIZING_BASELINE|ANNUAL|ANNUAL_PROPOSED|ANNUAL_BASELINE)\b
FALSE
FALSE
7
0


0
FALSE
INPUTCLASS Options

\b(?>Compulsory|Required|Optional|Default|CriticalDefault|Prescribed|NotInput|Prescriptive)\b
FALSE
FALSE
11
0


0
FALSE
Executable Expressions

\b(?>IF|THEN|ELSE|ENDIF|SWITCH|CASE|DEFAULT|ENDSWITCH)\b
TRUE
FALSE
11
0


0
FALSE
Object:Property

\b([A-Za-z]+)(\:([A-Za-z])+)+\b
FALSE
FALSE
16
0


0
FALSE
6
{
}
TRUE
3
(
)
TRUE
3
[
]
TRUE
3
/*
*/
FALSE
2
'
'
FALSE
2
"
"
FALSE
2
3
Multi-line Comment
1
5
TRUE
1
Closing */

\*/
FALSE
FALSE
5
0


1
FALSE
Preprocessor
1
11
FALSE
4
Continue
Backslash lets the preprocessor statement continue to the next line.  Supports all three Win/UNIX/Mac line break styles.
\\(?:\r\n|[\r\n])
FALSE
FALSE
11
0


0
FALSE
End of line
Preprocessor statement ends at the end of the line
$
FALSE
FALSE
11
0


2
FALSE
Single-line comment
Single-line comment ends the preprocessor statement.  We can color the comment right here.
//.*+
FALSE
FALSE
5
0


2
TRUE
Multi-line comment
Multi-line comment ends the preprocessor statement.  We let the main scheme handle the comment.
/\*
FALSE
TRUE
5
0


3
FALSE
String
1
9
TRUE
4
Closing quote

"
FALSE
FALSE
9
0


2
FALSE
Continue
Backslash lets the string continue to the next line.  Supports all three Win/UNIX/Mac line break styles.
(?:\r\n|[\r\n])
FALSE
FALSE
9
0


0
FALSE
Escaped character

\\.
FALSE
FALSE
9
0


0
FALSE
End of line
Highlight unterminated strings until the end of the line
$
FALSE
FALSE
9
0


2
FALSE
