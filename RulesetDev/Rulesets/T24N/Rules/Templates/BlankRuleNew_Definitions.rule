; The following is an example Rule file header/block syntax 
; Lines commented with a ';' provide guidlines for the following lines/sections 
; that are included in the file, and should be deleted from the final 
; rule file.  Lines comments with a '//' should be included in the final rule file.


; ---------------- Rule file naming convention ---------------------------------
;   - All files with RULEs should have the file extension .rule
;   - The ruleset file should be named using the following convetion:
;     <ACM Section Name, no spaces, CamelCase>-<Rulefile Description(s), no spaces, CamelCase>
;     The following is an example:
;     HVACSecondary-CoolingCoil-General.rule


; ---------------- Rule file syntax convention ---------------------------------
; "Soft" limit of 80 characters for all rule blocks in file                     << This is 80 characters
; The following conventions should be used to identify notes in the rule file:
// TO DO: Indicates outstanding work that needs to be done on the rule
// ISSUE: Indicates a ruleset or other functionality needed to complete the rule


; First line of file should indicate the <ACM Section - Subsection - SubSubSection>
; The following is an example: 
// HVAC Secondary Systems - Cooling Coils - General
//
; Include the CEC approved license agreement block at the top of every rule file.
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------

; After license block, list the ACM sections/building descriptors addressed in
; the rule file
//  This rule file addresses the following building descriptors:
//  Section X.X.X - ACM Section Name
//      Descriptor 1
//      Descriptor 2
//      ..
//  Section X.X.X - ACM Section Name
//      Descriptor 1
//      Descriptor 2
//      ...


; At the start of each set of rule blocks, list the applicable ACM Section that 
; the following following building descriptors/rules apply to.
// ---------- Section X.X.X.X - ACM Section Name -------------------------------

; At the top of each set of rule blocks, specify the name of the building descriptor
; that the rule(s) define.
; For formating purposes, descriptor headings should have at least 10 '*' prior to starting <Name       
// ********** <Name of Building Descriptor> ************************************
RULE NEW Object:Property
  DATATYPE
    String                ; Character string   
    Integer               ; Numeric with no decimal precision
    Float                 ; Numeric with decimal precision
    Enumeration 	      ; Enumerations for new property are defined by OPTION block
    <Referenced Object>   ; If data type = reference, specify only the valid
                          ; assigned object for the new property; the data type 
                          ; is assuemd from this specification
  LONGFORM
    ; String, CamelCase long form of property name if shortform is defined 
    ; in rule new declaration 
  SHORTFORM
    ; String, CamelCase short form of property name  if longform is defined 
    ; in rule new declaration 
  DESCRIPTION
    "" ; String, ACM or SDD definition.
  HELP
    "" ; String, ACM applicability and other detailed guidance. 
  REFERENCE 
       ; String, Document name (NACM, T24 Part 6, etc) and section or page 
       ; reference related to rule.  Example ACM-5.7.1
  INPUTCLASS 
    ; Description of the type of input
    Prescribed       ; Can be defined in the user's model and will not be 
                     ; ignored/overwritten, but will not be written to input data
                     ; model text file
    NotInput         ; Either not allowed for this ruleset, or is an 
                     ; intermediate/calculated parameter.
         ; optional item #1 following NotInput - can be used for data model backward compatibility purposes:
         AllowUIReset      ; (or no optional items specified) no logging during 
         ErrorIfInput      ; causes error preventing analysis from being performed
         IgnoreUserInput   ; ignores specification of this property encountered in input file – no effect on analysis
         ; optional item #2 following NotInput - used for informing user of presence in input file:
         "Quoted message written to log file" 
                     ; message written to project log file when this property is encountered in an input file
  MINIMUM 
    ; For float or integer, If the value is below the MINIMUM or above the 
    ; MAXIMUM values, a run time error is produced and building model would 
    ; be deemed non-compliant.
  COMMONMINIMUM
    ; For float or integer, The COMMONMIMIMUM and COMMONMAXIMUM are values 
    ; which will prompt the user to provide additional supporting documentation 
    ; if values are outside that range. 
  COMMONMAXIMUM
    
  MAXIMUM 
    
  UNITS 
    ; The UNITS block defines the specific units that apply to the numeric values 
    ; shown in other parts of the rule. The UNITS shown should be consistent with 
    ; the units used in the data model XML schema. If the values in the UNITS 
    ; block are not consistent an error would be generated.
  OPTION         
    ; The OPTION section is only for data model elements that are not numeric, 
    ; and instead can be one of a specific group of identifiers. This is often 
    ; called an enumerated list. The list shown in the OPTION block will also 
    ; be represented in the BEMEnums file; the two sources of OPTION values 
    ; should be checked for consistency. 
  DEFAULT 
    ; The DEFAULT block defines the value used if not provided by the user data model. 
  PROPOSED   
    
  BASELINESIZING
    ; If BASELINESIZING property is determined through sizing run, comment this block as:
    // AutoSize
  BASELINE  
    
ENDRULE



