; The following is an example Rule file header/block syntax 
; Lines commented with a ';' provide guidlines for the following lines/sections 
; that are included in the file, and should be deleted from the final 
; rule file.  Lines comments with a '//' should be included in the final rule file.


; ---------------- Rule file naming convention ---------------------------------
;   - All files with RULEs should have the file extension .rule
;   - The ruleset file should be named using the following convetion:
;     <ACM Section Name, no spaces, CamelCase>-<Rulefile Description(s), no spaces, CamelCase>
;     The following is an example:
;     HVACSecondary-CoolingCoil-General.rule


; ---------------- Rule file syntax convention ---------------------------------
; "Soft" limit of 80 characters for all rule blocks in file                     << This is 80 characters
; The following conventions should be used to identify notes in the rule file:
// TO DO: Indicates outstanding work that needs to be done on the rule
// ISSUE: Indicates a ruleset or other functionality needed to complete the rule


; First line of file should indicate the <ACM Section - Subsection - SubSubSection>
; The following is an example: 
// HVAC Secondary Systems - Cooling Coils - General
//
; Include the CEC approved license agreement block at the top of every rule file.
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------

; After license block, list the ACM sections/building descriptors addressed in
; the rule file
//  This rule file addresses the following building descriptors:
//  Section X.X.X - ACM Section Name
//      Descriptor 1
//      Descriptor 2
//      ..
//  Section X.X.X - ACM Section Name
//      Descriptor 1
//      Descriptor 2
//      ...


; At the start of each set of rule blocks, list the applicable ACM Section that 
; the following following building descriptors/rules apply to.
// ---------- Section X.X.X.X - ACM Section Name -------------------------------

; At the top of each set of rule blocks, specify the name of the building descriptor
; that the rule(s) define.
; For formating purposes, descriptor headings should have at least 10 '*' prior to starting <Name       
// ********** <Name of Building Descriptor> ************************************
RULE Object:Property
  RULESETS
    T24N
    ; The applicable ruleset for the property/rules. If not specified, the rule will be
    ; evaluate for all rulesets.
  DESCRIPTION
    "" ; String, ACM or SDD definition.  Quotes are required.
  HELP
    "" ; String, ACM applicability and other detailed guidance.  Quotes are required 
  REFERENCE 
       ; String, Document name (NACM, T24 Part 6, etc) and section or page 
       ; reference related to rule.  Example ACM-5.7.1
  PREVIOUSNAMES
    ShortName1 LongName1 ShortName2 LongName2 
       ; a series of one or more short and/or long property names that were used in previous 
       ; iterations of the ruleset to describe the same property this RULE defines
       ; note: short/long names listed here cannot have same spelling as any pre-defined RULE
       ;       block item (i.e. RULESETS, DESCRIPTION, HELP, etc.) 
  INPUTCLASS 
    ; Description of the type of input
    Compulsory       ; User MUST provide input if the object exists in the proposed design.
                     ; The property will be included in the SDD Input Data Model.txt file
                     ; In the UI, users will be prompted to define this during object creation.
                     ; Compliance analysis cannot be performed until this is defined.

    Required         ; User MUST provide input if the object exists in the proposed design.
                     ; Compliance analysis cannot be performed until this is defined.

    CondRequired     ; User must provide input if it is conditionally required for compliance analysis.
                     ; Conditional requirements can be annotated in the SDD Input Data Model.txt file
                     ; by populating the last argument in the BEMBBase.txt file.
                     ; Conditional requirements are enforced by errors posted by CHECKCODE or CHECKSIM rules.
                     ; The property will be included in the SDD Input Data Model.txt file

    Optional         ; User MAY provide input if it applies to an object in the proposed design -or-
                     ; it is conditionally required for compliance analysis.
                     ; The property will be included in the SDD Input Data Model.txt file

    Default          ; An Optional or Required property that is set to a default value by BEMEnums or DEFAULT rule.
                     ; The user may override the default value.
                     ; The property will be included in the SDD Input Data Model.txt file.

    CriticalDefault  ; NOT SUPPORTED: Default value provided which if overridden by user, must
                     ; be accompanied by user-defined documentation on why default
                     ; was overridden.

    Prescribed       ; Same as Required, Optional, or Default in that it can or
                     ; should be defined in the user's model and will not be ignored/overwritten,
                     ; but will not be included in the SDD Input Data Model.txt file

    NotInput         ; Either not allowed for the specified ruleset, is an intermediate/calculated ruleset parameter,
                     ; or is only used for simulation or reporting purposes.
                     ; The property will not be included in the SDD Input Data Model.txt file.
                     ; Simulation properties will not be included in the SDD Sim Data Model.txt file.
                     ; if indicated as a '1' in the SP field of the BEMBBase.txt file.
         ; optional item #1 following NotInput - can be used for data model backward compatibility purposes:
         AllowUIReset      ; (or no optional items specified) no logging during 
         ErrorIfInput      ; causes error preventing analysis from being performed
         IgnoreUserInput   ; ignores specification of this property encountered in input file – no effect on analysis
         ; optional item #2 following NotInput - used for informing user of presence in input file:
         "Quoted message written to log file" 
                     ; message written to project log file when this property is encountered in an input file
  OPTION         
    ; The OPTION section is only for data model elements that are not numeric, 
    ; and instead can be one of a specific group of identifiers. This is often 
    ; called an enumerated list. Enumerated lists can be specified either using 
    ; the OPTION block or the BEMEnums file. If specified in both places, the
    ; definition in the OPTION block will override that in the BEMEnums file. 
  MINIMUM 
    ; For float or integer, If the value is below the MINIMUM or above the 
    ; MAXIMUM values, a run time error is produced and building model would 
    ; be deemed non-compliant.
  MAXIMUM 
    
  COMMONMINIMUM
    ; For float or integer, The COMMONMIMIMUM and COMMONMAXIMUM are values 
    ; which will prompt the user to provide additional supporting documentation 
    ; if values are outside that range. 
  COMMONMAXIMUM

  UNITS 
    ; The UNITS block shows the specific units that apply to the numeric values 
    ; shown in other parts of the rule. The UNITS shown should be consistent with 
    ; the units used in the data model XML schema. If the values in the UNITS 
    ; block are not consistent an error would be generated.
  REPORTPRECISION
    ;  Defines the precision of numeric values written to AnalysisResults.xml files
    ;  for Proposed & Standard models.  Values include:
    ;  -9 = default/unused, 
    ;   3 for 0.xxx, 2 for 0.xx, 1 for 0.x, 0 for x, 
    ;  -1 for x0, -2 for x00, -3 for x000, etc.
  RESETS
    ; Static reset definitions that cause removal of user input when certain 
    ; other properties are modified via a user interface. This reset action is
    ; restricted only to modifiying a building model using an interface, not
    ; when performing analysis via a third party tool.
    ; All properties listed here are assumed to be for the same object as this
    ; RULE block is defined for
    ResetTheFollowingWhenThisIsModified   ; (the default)
      ; Properties listed here will have any user inputs removed when the
      ; property for which this RULE block is defined is edited by the user.
      Property1
      Property2
    ResetThisWhenTheFollowingIsModified
      ; Properties listed here, when edited by a user, will cause user input
      ; to the property for which this RULE block is defined to be removed.
      Property3
    ; if neither of the 'Reset...' options is specified and only a list of 
    ; properties is entered, then the first 'ResetTheFollowing...' is
    ; assumed.
  CHECKSIM
    ; Errors and warnings that apply to the simulation of the model, no changes to data model
  CHECKCODE
    ; Errors and warnings that apply to the code compliance of the model, no changes to data model  
  DEFAULT 
    ; The DEFAULT block shows the value used if not provided by the user data model.
  SIZING or SIZING_PROPOSED / SIZING_BASELINE
    
  ANNUAL or ANNUAL_PROPOSED / ANNUAL_ BASELINE  

  NRCCPRF 
    ; rules evaluated following analysis results calcs and before export of NRCCPRF XML file.

ENDRULE



