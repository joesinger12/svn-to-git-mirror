// Residential Central HVAC Systems
// For ResZn and ResOthZn
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2018, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  


// -----------------------------------------------------------------------------
// --------------------- Central Htg Clg Sys -------------------------------
// -----------------------------------------------------------------------------

RULE ResCentralHtgClgSys:Type
  DESCRIPTION
    "The residential central heating/cooling equipment type."
  INPUTCLASS
    Compulsory
//OPTION - Defined in BEMBase
//  Four-pipe fan coil
//  Water source heat pump
//  Hydronic heating only (not yet supported
//  Variable refrigerant flow
  CHECKSIM
    if( Type = "Hydronic heating only" )
    then PostError("ResCentralHtgClgSys '%s' is Type = '%s'.
                     This option not currently supported.", Name, Type)
    else UNCHANGED
    endif
ENDRULE

RULE ResCentralHtgClgSys:HWFluidSegInRef
  CHECKSIM
    if( Type = "Four-pipe fan coil" .OR. Type = "Hydronic heating only" )
    then if( LocalCompAssigned( HWFluidSegInRef ) = 0 )
         then PostError("The hot water inlet fluid segment of central system '%s' must be defined", Name)
         else if( HWFluidSegInRef:ParentFluidSysType != "HotWater" .AND.
                  HWFluidSegInRef:ParentFluidSysType != "ServiceHotWater" )
              then PostError("The inlet fluid segment of coil '%s' must belong to a 
                              HotWater or ServiceHotWater system.", Name) 
              else UNCHANGED
         endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( Type = "Water source heat pump" .OR. Type = "Variable refrigerant flow" )
    then UNDEFINED // Purge reference for when not applicable
    else UNCHANGED
    endif
ENDRULE

RULE ResCentralHtgClgSys:HWFluidSegOutRef
  CHECKSIM
    if( Type = "Four-pipe fan coil" .OR. Type = "Hydronic heating only" )
    then if( LocalCompAssigned( HWFluidSegOutRef ) = 0 )
         then PostError("The hot water inlet fluid segment of central system '%s' must be defined", Name)
         else if( HWFluidSegOutRef:ParentFluidSysType != "HotWater" .AND.
                  HWFluidSegOutRef:ParentFluidSysType != "ServiceHotWater" )
              then PostError("The inlet fluid segment of coil '%s' must belong to a 
                              HotWater or ServiceHotWater system.", Name) 
              else UNCHANGED
         endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( Type = "Water source heat pump" .OR. Type = "Variable refrigerant flow" )
    then UNDEFINED // Purge reference for when not applicable
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResCentralHtgClgSys:HWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( ( Type = "Four-pipe fan coil" .OR. Type = "Hydronic heating only" ) .AND. LocalCompAssigned( HWFluidSegInRef ) )
    then HWFluidSegInRef:ParentFluidSysRef
    else UNDEFINED endif
ENDRULE

RULE ResCentralHtgClgSys:ChWFluidSegInRef
  CHECKSIM
    if( Type = "Four-pipe fan coil" )
    then if( LocalCompAssigned( ChWFluidSegInRef ) = 0 )
         then PostError("The chill water inlet fluid segment of central system '%s' must be defined", Name)
         else if( ChWFluidSegInRef:ParentFluidSysType != "ChilledWater" )
              then PostError("The inlet fluid segment of coil '%s' must belong to a 
                              ChilledWater system.", Name) 
              else UNCHANGED
         endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( Type = "Water source heat pump" .OR. Type = "Hydronic heating only" .OR. Type = "Variable refrigerant flow" )
    then UNDEFINED // Purge reference for when not applicable
    else UNCHANGED
    endif
ENDRULE

RULE ResCentralHtgClgSys:ChWFluidSegOutRef
  CHECKSIM
    if( Type = "Four-pipe fan coil" )
    then if( LocalCompAssigned( ChWFluidSegOutRef ) = 0 )
         then PostError("The chill water inlet fluid segment of central system '%s' must be defined", Name)
         else if( ChWFluidSegOutRef:ParentFluidSysType != "ChilledWater" )
              then PostError("The inlet fluid segment of coil '%s' must belong to a 
                              ChilledWater system.", Name) 
              else UNCHANGED
         endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( Type = "Water source heat pump" .OR. Type = "Hydronic heating only" .OR. Type = "Variable refrigerant flow" )
    then UNDEFINED // Purge reference for when not applicable
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResCentralHtgClgSys:ChWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Four-pipe fan coil" .AND. LocalCompAssigned( ChWFluidSegInRef ) )
    then ChWFluidSegInRef:ParentFluidSysRef
    else UNDEFINED endif
ENDRULE

RULE ResCentralHtgClgSys:CWFluidSegInRef
  CHECKSIM
    if( Type = "Water source heat pump" )
    then if( LocalCompAssigned( CWFluidSegInRef ) = 0 )
         then PostError("The condenser water inlet fluid segment of central system '%s' must be defined", Name)
         else if( CWFluidSegInRef:ParentFluidSysType != "CondenserWater" )
              then PostError("The inlet fluid segment of coil '%s' must belong to a 
                              CondenserWater system.", Name) 
              else UNCHANGED
         endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( Type = "Water source heat pump" )
    then UNCHANGED 
    else UNDEFINED // Purge reference for when not applicable
    endif
ENDRULE

RULE ResCentralHtgClgSys:CWFluidSegOutRef
  CHECKSIM
    if( Type = "Water source heat pump" )
    then if( LocalCompAssigned( CWFluidSegOutRef ) = 0 )
         then PostError("The condenser water inlet fluid segment of central system '%s' must be defined", Name)
         else if( CWFluidSegOutRef:ParentFluidSysType != "CondenserWater" )
              then PostError("The inlet fluid segment of coil '%s' must belong to a 
                              CondenserWater system.", Name) 
              else UNCHANGED
         endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( Type = "Water source heat pump" )
    then UNCHANGED 
    else UNDEFINED // Purge reference for when not applicable
    endif
ENDRULE

RULE NEW ResCentralHtgClgSys:CWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Water source heat pump" .AND. LocalCompAssigned( CWFluidSegInRef ) )
    then CWFluidSegInRef:ParentFluidSysRef
    else UNDEFINED endif
ENDRULE

RULE ResCentralHtgClgSys:HtgSizingFactor
  DEFAULT
    1.25
ENDRULE

RULE ResCentralHtgClgSys:ClgSizingFactor
  DEFAULT
    1.15
ENDRULE

RULE ResCentralHtgClgSys:WSHPCOP
  PREVIOUSNAMES
    COP47
  HELP
    "Ratio of heating provided over the electrical energy consumed at AHRI rated condition
     for WSHP (68°F entering water temperature, 68°F entering air temperature."
  DEFAULT
    if( Type = "Water source heat pump" )
    then UnitaryACHPMinEffReq:COP47(
         "StandardsVersion", Proj:StdsVersion, 
         "Category", "HP",
         "SubCategory", "*",
         "CondenserType", "WaterSource",
         "SizeCategory", 18000 )
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralHtgClgSys:WSHPEER
  PREVIOUSNAMES
    EER
  HELP
    "Energy Efficiency Ratio at AHRI rated condition for WSHP (
     86°F entering water temperature, 80.6°F entering air temperature.)"
  DEFAULT
    if( Type = "Water source heat pump" )
    then UnitaryACHPMinEffReq:EER(
         "StandardsVersion", Proj:StdsVersion, 
         "Category", "HP",
         "SubCategory", "*",
         "CondenserType", "WaterSource",
         "SizeCategory", 18000 )
    else UNDEFINED
    endif
ENDRULE

// ---------- DwellUnitType ----------

RULE DwellUnitType:NumCentralEquipTypes
  MINIMUM   0
  MAXIMUM   10
  DEFAULT
    1
  CHECKSIM
    if ( HVACSysType = "Central Heating and Cooling System" )
    then if( NumCentralEquipTypes > 0 .AND. LocalCompAssigned( HVACCentralRef[1] ) == 0 ) then  PostError( "All central equipment assignments in DwellUnitType '%s' must be specified (first is excluded)", Name )
			   else if( NumCentralEquipTypes > 1 .AND. LocalCompAssigned( HVACCentralRef[2] ) == 0 ) then  PostError( "All central equipment assignments in DwellUnitType '%s' must be specified (second is excluded)", Name )
			   else if( NumCentralEquipTypes > 2 .AND. LocalCompAssigned( HVACCentralRef[3] ) == 0 ) then  PostError( "All central equipment assignments in DwellUnitType '%s' must be specified (third is excluded)", Name )
			   else if( NumCentralEquipTypes > 3 .AND. LocalCompAssigned( HVACCentralRef[4] ) == 0 ) then  PostError( "All central equipment assignments in DwellUnitType '%s' must be specified (fourth is excluded)", Name )
			   else if( NumCentralEquipTypes > 4 .AND. LocalCompAssigned( HVACCentralRef[5] ) == 0 ) then  PostError( "All central equipment assignments in DwellUnitType '%s' must be specified (fifth is excluded)", Name )
			   else UNCHANGED endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE DwellUnitType:CentralEquipCount[1]
  DEFAULT
    if( NumCentralEquipTypes > 0 ) then 1 else 0 endif
ENDRULE
RULE DwellUnitType:CentralEquipCount[2]
  DEFAULT
    if( NumCentralEquipTypes > 1 ) then 1 else 0 endif
ENDRULE
RULE DwellUnitType:CentralEquipCount[3]
  DEFAULT
    if( NumCentralEquipTypes > 2 ) then 1 else 0 endif
ENDRULE
RULE DwellUnitType:CentralEquipCount[4]
  DEFAULT
    if( NumCentralEquipTypes > 3 ) then 1 else 0 endif
ENDRULE
RULE DwellUnitType:CentralEquipCount[5]
  DEFAULT
    if( NumCentralEquipTypes > 4 ) then 1 else 0 endif
ENDRULE

RULE DwellUnitType:CentralEqpType
  DEFAULT
  // all central htg clg system in a dwell unit type must be of same type
    if( HVACSysType = "Central Heating and Cooling System" .AND. LocalCompAssigned( HVACCentralRef[1] ) )
    then ValidOr( HVACCentralRef[1]:Type, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( HVACSysType = "Central Heating and Cooling System" )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr( HVACCentralRef[2]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must be of the same type", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr( HVACCentralRef[3]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr( HVACCentralRef[4]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr( HVACCentralRef[5]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must be of the same type", Name )
				 else UNCHANGED endif endif endif endif 
		else UNCHANGED endif
ENDRULE

RULE DwellUnitType:ServesAsDHWHtr
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System" )
    then 0 else UNCHANGED endif
ENDRULE

RULE DwellUnitType:HtEqpUsedAsDHWHtr
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System" )
    then 0 else UNCHANGED endif
ENDRULE
    
RULE NEW DwellUnitType:HWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:HWFluidSysRef, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then if ( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:HWFluidSysRef, "") != HWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same hot water fluid system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:HWFluidSysRef, "") != HWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:HWFluidSysRef, "") != HWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:HWFluidSysRef, "") != HWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same hot water fluid system", Name )
				 else UNCHANGED endif endif endif endif 
		else UNCHANGED endif
ENDRULE

RULE NEW DwellUnitType:HWFluidSegInRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:HWFluidSegInRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:HWFluidSegOutRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:HWFluidSegOutRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:ChWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:ChWFluidSysRef, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same chilled water fluid system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same chilled water fluid system", Name )
				 else UNCHANGED endif endif endif endif 
		else UNCHANGED endif
ENDRULE

RULE NEW DwellUnitType:ChWFluidSegInRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:ChWFluidSegInRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:ChWFluidSegOutRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:ChWFluidSegOutRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:CWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then ValidOr( HVACCentralRef[1]:CWFluidSysRef, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same condenser water fluid system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same condenser water fluid system", Name )
				 else UNCHANGED endif endif endif endif 
		else UNCHANGED endif
ENDRULE

RULE NEW DwellUnitType:CWFluidSegInRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then ValidOr( HVACCentralRef[1]:CWFluidSegInRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:CWFluidSegOutRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then ValidOr( HVACCentralRef[1]:CWFluidSegOutRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:WSHPEER
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System" .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then if( NumCentralEquipTypes = 1 ) then ValidOr( HVACCentralRef[1]:WSHPEER, 0 )
    else if( NumCentralEquipTypes = 2 ) then min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 3 ) then min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 4 ) then min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes > 4 ) then min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) )
    else UNDEFINED endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:WSHPCOP
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( HVACSysType = "Central Heating and Cooling System" .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then if( NumCentralEquipTypes = 1 ) then ValidOr( HVACCentralRef[1]:WSHPCOP, 0 )
    else if( NumCentralEquipTypes = 2 ) then min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 3 ) then min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 4 ) then min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes > 4 ) then min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) )
    else UNDEFINED endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:VRFSysRef
  DATATYPE
    VRFSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( CentralEqpType = "Variable refrigerant flow" ) .AND. LocalCompAssigned( HVACCentralRef[1] ) )
    then ValidOr( HVACCentralRef[1]:VRFSysRef, "")
    else UNDEFINED
    endif
  CHECKSIM
    if( HVACSysType = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Variable refrigerant flow" ) )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same VRF system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in DwellUnitType '%s' must connect to the same VRF system", Name )
				 else UNCHANGED endif endif endif endif 
		else UNCHANGED endif
ENDRULE

// ---------- ResHVACSys ----------

RULE ResHVACSys:NumCentralEquipTypes
  MINIMUM   0
  MAXIMUM   10
  DEFAULT
    1
  CHECKSIM
    if ( Type = "Central Heating and Cooling System" )
    then if( NumCentralEquipTypes > 0 .AND. LocalCompAssigned( HVACCentralRef[1] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (first is excluded)", Name )
			   else if( NumCentralEquipTypes > 1 .AND. LocalCompAssigned( HVACCentralRef[2] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (second is excluded)", Name )
			   else if( NumCentralEquipTypes > 2 .AND. LocalCompAssigned( HVACCentralRef[3] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (third is excluded)", Name )
			   else if( NumCentralEquipTypes > 3 .AND. LocalCompAssigned( HVACCentralRef[4] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (fourth is excluded)", Name )
			   else if( NumCentralEquipTypes > 4 .AND. LocalCompAssigned( HVACCentralRef[5] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (fifth is excluded)", Name )
			   else if( NumCentralEquipTypes > 5 .AND. LocalCompAssigned( HVACCentralRef[6] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (sixth is excluded)", Name )
			   else if( NumCentralEquipTypes > 6 .AND. LocalCompAssigned( HVACCentralRef[7] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (seventh is excluded)", Name )
			   else if( NumCentralEquipTypes > 7 .AND. LocalCompAssigned( HVACCentralRef[8] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (eighth is excluded)", Name )
			   else if( NumCentralEquipTypes > 8 .AND. LocalCompAssigned( HVACCentralRef[9] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (ninth is excluded)", Name )
			   else if( NumCentralEquipTypes > 9 .AND. LocalCompAssigned( HVACCentralRef[10] ) == 0 ) then  PostError( "All central equipment assignments in ResHVACSys '%s' must be specified (tenth is excluded)", Name )
			   else UNCHANGED endif endif endif endif endif endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE ResHVACSys:CentralEquipCount[1]
  DEFAULT
    if( NumCentralEquipTypes > 0 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[2]
  DEFAULT
    if( NumCentralEquipTypes > 1 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[3]
  DEFAULT
    if( NumCentralEquipTypes > 2 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[4]
  DEFAULT
    if( NumCentralEquipTypes > 3 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[5]
  DEFAULT
    if( NumCentralEquipTypes > 4 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[6]
  DEFAULT
    if( NumCentralEquipTypes > 5 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[7]
  DEFAULT
    if( NumCentralEquipTypes > 6 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[8]
  DEFAULT
    if( NumCentralEquipTypes > 7 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[9]
  DEFAULT
    if( NumCentralEquipTypes > 8 ) then 1 else 0 endif
ENDRULE
RULE ResHVACSys:CentralEquipCount[10]
  DEFAULT
    if( NumCentralEquipTypes > 9 ) then 1 else 0 endif
ENDRULE

RULE ResHVACSys:CentralEqpType
  DEFAULT
  // all central htg clg system in a HVAC system must be of same type
    if( Type = "Central Heating and Cooling System" .AND. LocalCompAssigned( HVACCentralRef[1] ) )
    then ValidOr( HVACCentralRef[1]:Type, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( Type = "Central Heating and Cooling System" )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr( HVACCentralRef[2]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr( HVACCentralRef[3]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr( HVACCentralRef[4]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr( HVACCentralRef[5]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr( HVACCentralRef[6]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr( HVACCentralRef[7]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr( HVACCentralRef[8]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr( HVACCentralRef[9]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr( HVACCentralRef[10]:Type, "" ) != CentralEqpType ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must be of the same type", Name )
				 else UNCHANGED endif endif endif endif endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE NEW ResHVACSys:HWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:HWFluidSysRef, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then if ( NumCentralEquipTypes > 1 .AND. ValidOr( HVACCentralRef[2]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr( HVACCentralRef[3]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr( HVACCentralRef[4]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr( HVACCentralRef[5]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr( HVACCentralRef[6]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr( HVACCentralRef[7]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr( HVACCentralRef[8]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr( HVACCentralRef[9]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr( HVACCentralRef[10]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same hot water fluid system", Name )
				 else UNCHANGED endif endif endif endif endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE NEW ResHVACSys:HWFluidSegInRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:HWFluidSegInRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:HWFluidSegOutRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:HWFluidSegOutRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:ChWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:ChWFluidSysRef, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same chilled water fluid system", Name )
				 else UNCHANGED endif endif endif endif endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE NEW ResHVACSys:ChWFluidSegInRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:ChWFluidSegInRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:ChWFluidSegOutRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
    then ValidOr( HVACCentralRef[1]:ChWFluidSegOutRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:CWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System" .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then ValidOr( HVACCentralRef[1]:CWFluidSysRef, "" )
    else UNDEFINED
    endif
  CHECKSIM
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:CWFluidSysRef, "") != CWFluidSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same condenser water fluid system", Name )
				 else UNCHANGED endif endif endif endif endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE NEW ResHVACSys:CWFluidSegInRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then ValidOr( HVACCentralRef[1]:CWFluidSegInRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:CWFluidSegOutRef
  DATATYPE
    FluidSeg
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then ValidOr( HVACCentralRef[1]:CWFluidSegOutRef, "" )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:WSHPEER
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System" .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then if( NumCentralEquipTypes = 1 ) then ValidOr( HVACCentralRef[1]:WSHPEER, 0 )
    else if( NumCentralEquipTypes = 2 ) then min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 3 ) then min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 4 ) then min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 5 ) then min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 6 ) then min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 7 ) then min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 8 ) then min( min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[8]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes = 9 ) then min( min( min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[8]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[9]:WSHPEER, 0 ) )
    else if( NumCentralEquipTypes > 9 ) then min( min( min( min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPEER, 0 ), ValidOr( HVACCentralRef[2]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPEER, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[8]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[9]:WSHPEER, 0 ) ), ValidOr( HVACCentralRef[10]:WSHPEER, 0 ) )
    else UNDEFINED endif endif endif endif endif endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:WSHPCOP
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "Central Heating and Cooling System" .AND. IfValidAnd( CentralEqpType = "Water source heat pump" ) )
    then if( NumCentralEquipTypes = 1 ) then ValidOr( HVACCentralRef[1]:WSHPCOP, 0 )
    else if( NumCentralEquipTypes = 2 ) then min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 3 ) then min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 4 ) then min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 5 ) then min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 6 ) then min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 7 ) then min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 8 ) then min( min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[8]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes = 9 ) then min( min( min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[8]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[9]:WSHPCOP, 0 ) )
    else if( NumCentralEquipTypes > 9 ) then min( min( min( min( min( min( min( min( min( ValidOr( HVACCentralRef[1]:WSHPCOP, 0 ), ValidOr( HVACCentralRef[2]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[3]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[4]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[5]:WSHPCOP, 0 ) ),
                                             ValidOr( HVACCentralRef[6]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[7]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[8]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[9]:WSHPCOP, 0 ) ), ValidOr( HVACCentralRef[10]:WSHPCOP, 0 ) )
    else UNDEFINED endif endif endif endif endif endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:VRFSysRef
  DATATYPE
    VRFSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( HVACCentralRef[1] ) .AND. IfValidAnd( CentralEqpType = "Variable refrigerant flow" ) )
    then ValidOr( HVACCentralRef[1]:VRFSysRef, "")
    else UNDEFINED
    endif
  CHECKSIM
    if( Type = "Central Heating and Cooling System"  .AND. IfValidAnd( CentralEqpType = "Variable refrigerant flow" ) )
    then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:VRFSysRef, "") != VRFSysRef ) then  PostError( "All assigned central equipment in ResHVACSys '%s' must connect to the same VRF system", Name )
				 else UNCHANGED endif endif endif endif endif endif endif endif endif
		else UNCHANGED endif
ENDRULE

RULE NEW ResHVACSys:CentralEquipIssue2
  DATATYPE
    String
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
		     then if( NumCentralEquipTypes > 1 .AND. ValidOr( HVACCentralRef[2]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr( HVACCentralRef[3]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr( HVACCentralRef[4]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr( HVACCentralRef[5]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr( HVACCentralRef[6]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr( HVACCentralRef[7]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr( HVACCentralRef[8]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr( HVACCentralRef[9]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr( HVACCentralRef[10]:HWFluidSysRef, "" ) != HWFluidSysRef ) then "All assigned central equipment must connect to the same hot water fluid system"
				 else if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:ChWFluidSysRef, "") != ChWFluidSysRef ) then "All assigned central equipment must connect to the same chilled water fluid system"
				 else "" endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif
		else if( IfValidAnd( CentralEqpType = "Water source heat pump" ) )
		     then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:CWFluidSysRef, "") != CWFluidSysRef ) then "All assigned central equipment must connect to the same condenser water fluid system"
				 else "" endif endif endif endif endif endif endif endif endif
		else if( IfValidAnd( CentralEqpType = "Variable refrigerant flow" ) )
		     then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:VRFSysRef, "") != VRFSysRef ) then "All assigned central equipment must connect to the same VRF system"
				 else "" endif endif endif endif endif endif endif endif endif
    else ""
    endif endif endif
ENDRULE

RULE ResHVACSys:CentralEquipIssue
  DEFAULT
    if( Type = "Central Heating and Cooling System" )
    then if( NumCentralEquipTypes > 0 .AND. LocalCompAssigned( HVACCentralRef[1] ) == 0 ) then  "All central equipment assignments must be specified (first is excluded)"
		else if( NumCentralEquipTypes > 1 .AND. LocalCompAssigned( HVACCentralRef[2] ) == 0 ) then  "All central equipment assignments must be specified (second is excluded)"
		else if( NumCentralEquipTypes > 2 .AND. LocalCompAssigned( HVACCentralRef[3] ) == 0 ) then  "All central equipment assignments must be specified (third is excluded)"
		else if( NumCentralEquipTypes > 3 .AND. LocalCompAssigned( HVACCentralRef[4] ) == 0 ) then  "All central equipment assignments must be specified (fourth is excluded)"
		else if( NumCentralEquipTypes > 4 .AND. LocalCompAssigned( HVACCentralRef[5] ) == 0 ) then  "All central equipment assignments must be specified (fifth is excluded)"
		else if( NumCentralEquipTypes > 5 .AND. LocalCompAssigned( HVACCentralRef[6] ) == 0 ) then  "All central equipment assignments must be specified (sixth is excluded)"
		else if( NumCentralEquipTypes > 6 .AND. LocalCompAssigned( HVACCentralRef[7] ) == 0 ) then  "All central equipment assignments must be specified (seventh is excluded)"
		else if( NumCentralEquipTypes > 7 .AND. LocalCompAssigned( HVACCentralRef[8] ) == 0 ) then  "All central equipment assignments must be specified (eighth is excluded)"
		else if( NumCentralEquipTypes > 8 .AND. LocalCompAssigned( HVACCentralRef[9] ) == 0 ) then  "All central equipment assignments must be specified (ninth is excluded)"
		else if( NumCentralEquipTypes > 9 .AND. LocalCompAssigned( HVACCentralRef[10] ) == 0 ) then "All central equipment assignments must be specified (tenth is excluded)"
    else if( NumCentralEquipTypes > 1 .AND. ValidOr( HVACCentralRef[2]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 2 .AND. ValidOr( HVACCentralRef[3]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 3 .AND. ValidOr( HVACCentralRef[4]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 4 .AND. ValidOr( HVACCentralRef[5]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 5 .AND. ValidOr( HVACCentralRef[6]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 6 .AND. ValidOr( HVACCentralRef[7]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 7 .AND. ValidOr( HVACCentralRef[8]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 8 .AND. ValidOr( HVACCentralRef[9]:Type, "" ) != CentralEqpType ) then  "All assigned central equipment must be of the same type"
		else if( NumCentralEquipTypes > 9 .AND. ValidOr( HVACCentralRef[10]:Type, "" ) != CentralEqpType ) then "All assigned central equipment must be of the same type"
//		else if( IfValidAnd( CentralEqpType = "Four-pipe fan coil" ) )
//		     then if( NumCentralEquipTypes > 1 .AND. ValidOr( HVACCentralRef[2]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//		     else if( NumCentralEquipTypes > 2 .AND. ValidOr( HVACCentralRef[3]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 3 .AND. ValidOr( HVACCentralRef[4]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 4 .AND. ValidOr( HVACCentralRef[5]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 5 .AND. ValidOr( HVACCentralRef[6]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 6 .AND. ValidOr( HVACCentralRef[7]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 7 .AND. ValidOr( HVACCentralRef[8]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 8 .AND. ValidOr( HVACCentralRef[9]:HWFluidSysRef, "" ) != HWFluidSysRef ) then  "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 9 .AND. ValidOr( HVACCentralRef[10]:HWFluidSysRef, "" ) != HWFluidSysRef ) then "All assigned central equipment must connect to the same hot water fluid system"
//				 else if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:ChWFluidSysRef, "") != ChWFluidSysRef ) then  "All assigned central equipment must connect to the same chilled water fluid system"
//				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:ChWFluidSysRef, "") != ChWFluidSysRef ) then "All assigned central equipment must connect to the same chilled water fluid system"
//				 else "" endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif
//		else if( IfValidAnd( CentralEqpType = "Water source heat pump" ) )
//		     then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:CWFluidSysRef, "") != CWFluidSysRef ) then  "All assigned central equipment must connect to the same condenser water fluid system"
//				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:CWFluidSysRef, "") != CWFluidSysRef ) then "All assigned central equipment must connect to the same condenser water fluid system"
//				 else "" endif endif endif endif endif endif endif endif endif
//		else if( IfValidAnd( CentralEqpType = "Variable refrigerant flow" ) )
//		     then if( NumCentralEquipTypes > 1 .AND. ValidOr(HVACCentralRef[2]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//		     else if( NumCentralEquipTypes > 2 .AND. ValidOr(HVACCentralRef[3]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 3 .AND. ValidOr(HVACCentralRef[4]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 4 .AND. ValidOr(HVACCentralRef[5]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 5 .AND. ValidOr(HVACCentralRef[6]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 6 .AND. ValidOr(HVACCentralRef[7]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 7 .AND. ValidOr(HVACCentralRef[8]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 8 .AND. ValidOr(HVACCentralRef[9]:VRFSysRef, "") != VRFSysRef ) then  "All assigned central equipment must connect to the same VRF system"
//				 else if( NumCentralEquipTypes > 9 .AND. ValidOr(HVACCentralRef[10]:VRFSysRef, "") != VRFSysRef ) then "All assigned central equipment must connect to the same VRF system"
//				 else "" endif endif endif endif endif endif endif endif endif
    else CentralEquipIssue2
    endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif endif ;endif endif endif
    else "" endif
ENDRULE	 

RULE ResHVACSys:NumUIDialogTabs
  DEFAULT
    6
ENDRULE

// --------- Set ResZn/ResOtherZn connections ----------

RULE NEW ResZn:ChildDwellUnitRef
  DATATYPE
    DwellUnit
  INPUTCLASS
    NotInput
  DEFAULT
    MaxChildComp( DwellUnit:CondFlrArea )
ENDRULE

; wrap equality checks in IfValidAnd() to prevent rule eval error when DUT not assigned to DU - SAC 02/23/23
RULE NEW ResZn:CentralEqpType
  DATATYPE
    String
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" ) )
    then ChildDwellUnitRef:DwellUnitTypeRef:CentralEqpType
    else UNDEFINED
    endif
  CHECKSIM
    if( IfValidAnd( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" ) .AND.
                  NumUniqueChildVals( DwellUnit:DwellUnitTypeRef:CentralEqpType, 1 ) > 1 )
    then PostError( "The dwellUnits in ResZn '%s' are served by more than one type of central heating and cooling system which is not supported.", Name)
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResZn:HWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Four-pipe fan coil" )
    then ChildDwellUnitRef:DwellUnitTypeRef:HVACCentralRef:HWFluidSysRef
    else UNDEFINED endif
  CHECKSIM
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Four-pipe fan coil" .AND.
                  NumUniqueChildVals( DwellUnit:DwellUnitTypeRef:HWFluidSysRef, 1 ) > 1 )
    then PostError( "The dwellUnits in ResZn '%s' are served by more than one hot water loop which is not supported.", Name)
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResZn:ChWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Four-pipe fan coil" )
    then ChildDwellUnitRef:DwellUnitTypeRef:HVACCentralRef:ChWFluidSysRef
    else UNDEFINED endif
  CHECKSIM
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Four-pipe fan coil" .AND.
                  NumUniqueChildVals( DwellUnit:DwellUnitTypeRef:ChWFluidSysRef, 1 ) > 1 )
    then PostError( "The dwellUnits in ResZn '%s' are served by more than one chill water loop which is not supported.", Name)
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResZn:CWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Water source heat pump" )
    then ChildDwellUnitRef:DwellUnitTypeRef:HVACCentralRef:CWFluidSysRef
    else UNDEFINED endif
  CHECKSIM
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Water source heat pump" .AND.
                  NumUniqueChildVals( DwellUnit:DwellUnitTypeRef:CWFluidSysRef, 1 ) > 1 )
    then PostError( "The dwellUnits in ResZn '%s' are served by more than one condenser water loop which is not supported.", Name)
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResZn:VRFSysRef
  DATATYPE
    VRFSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Variable refrigerant flow" )
    then ChildDwellUnitRef:DwellUnitTypeRef:HVACCentralRef:VRFSysRef
    else UNDEFINED endif
  CHECKSIM
    if( ChildDwellUnitRef:DwellUnitTypeRef:HVACSysType = "Central Heating and Cooling System" .AND. CentralEqpType = "Variable refrigerant flow" .AND.
                  NumUniqueChildVals( DwellUnit:DwellUnitTypeRef:VRFSysRef, 1 ) > 1 )
    then PostError( "The dwellUnits in ResZn '%s' are served by more than one VRF system which is not supported.", Name)
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResOtherZn:HWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IfValidAnd( ozHVACSystem:Type = "Central Heating and Cooling System" ) )
    then if( LocalCompAssigned( ozHVACSystem:HVACCentralRef:HWFluidSysRef ) )
         then ozHVACSystem:HVACCentralRef:HWFluidSysRef
         else UNDEFINED endif
    else UNDEFINED endif
ENDRULE

RULE NEW ResOtherZn:ChWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IfValidAnd( ozHVACSystem:Type = "Central Heating and Cooling System" ) )
    then if( LocalCompAssigned( ozHVACSystem:HVACCentralRef:ChWFluidSysRef ) )
         then ozHVACSystem:HVACCentralRef:ChWFluidSysRef
         else UNDEFINED endif
    else UNDEFINED endif
ENDRULE

RULE NEW ResOtherZn:CWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IfValidAnd( ozHVACSystem:Type = "Central Heating and Cooling System" ) )
    then if( LocalCompAssigned( ozHVACSystem:HVACCentralRef:CWFluidSysRef ) )
         then ozHVACSystem:HVACCentralRef:CWFluidSysRef
         else UNDEFINED endif
    else UNDEFINED endif
ENDRULE

RULE NEW ResOtherZn:VRFSysRef
  DATATYPE
    VRFSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IfValidAnd( ozHVACSystem:Type = "Central Heating and Cooling System" ) )
    then if( LocalCompAssigned( ozHVACSystem:HVACCentralRef:VRFSysRef ) )
         then ozHVACSystem:HVACCentralRef:VRFSysRef
         else UNDEFINED endif
    else UNDEFINED endif
ENDRULE

// -------------------- Create ProcLd for Load Passing -------------------------

RULE NEW FluidSys:ProcLdRef
  DATATYPE
    ProcLd
  INPUTCLASS
    NotInput
ENDRULE
; removed test/reference Res loads - now supplied by CSE load passing - SAC 03/19/22
;  ANNUAL_PROPOSED
;    if( Proj:SimResZnInEnergyPlus = 0 .AND. 
;        ( SumRevRef( ResZn:HWFluidSysRef, ResZn:FloorArea) > 0 .OR.
;          SumRevRef( ResOtherZn:HWFluidSysRef, ResOtherZn:Area) > 0 .OR.
;          SumRevRef( ResZn:ChWFluidSysRef, ResZn:FloorArea) > 0 .OR.
;          SumRevRef( ResOtherZn:ChWFluidSysRef, ResOtherZn:Area) > 0 .OR.
;          SumRevRef( ResZn:CWFluidSysRef, ResZn:FloorArea) > 0 .OR.
;          SumRevRef( ResOtherZn:CWFluidSysRef, ResOtherZn:Area) > 0 ) )
;    then RuleLibrary( ProcLd, "ResLoad" , 1, Name)
;    else UNCHANGED
;    endif


// -------------------- Labels -------------------------
RULE NEW ResCentralHtgClgSys:TypeAbbrevStr
  DATATYPE
    String
  INPUTCLASS
    NotInput
  DEFAULT
    switch( Type )
      case "Four-pipe fan coil"       : "FPFC"
      case "Water source heat pump"   : "WSHP"
      case "Hydronic heating only"    : "Hydonic Htg Only"
      case "Variable refrigerant flow": "VRF"
      default                         : "unknown"
    endswitch
ENDRULE

// -------------------- Summary Stats & Tree Label ------------------------- SAC 02/25/22

; sum DwellUnitType area to FloorAreaServed - SAC 03/15/22
; this doesn't work for multiple units assigned to a DwellUnitType or ResHVACSys
; see revised calculation below - JP 06/02/22
//RULE ResCentralHtgClgSys:FloorAreaServed
//  DEFAULT
//	 SumRevRef( ResHVACSys:HVACCentralRef, ResHVACSys:FloorAreaServed ) +
//	 SumRevRef( DwellUnitType:HVACCentralRef, DwellUnitType:DUCntrlHtClFlrAreaServed )
//ENDRULE

RULE ResCentralHtgClgSys:NumAssigningDUs
  DEFAULT
    if (IfValidAnd( ResProj:IsMultiFamily > 0.5 )==0) then  UNDEFINED
    else  SumRevRef( DwellUnitType:HVACCentralRef, DwellUnitType:NumAssigningCntrlDUs )
    endif
ENDRULE

RULE ResCentralHtgClgSys:TreeDescrip
  DEFAULT
    if (IfValidAnd( ResProj:IsMultiFamily > 0.5 )==0) then  UNDEFINED
    else if (IfValidAnd( NumAssigningDUs > 0 ))
    then  Format( "%s, serving %g dwelling unit(s)", TypeAbbrevStr, NumAssigningDUs )
    else  Format( "%s, not assigned", TypeAbbrevStr )
    endif endif
ENDRULE


RULE DwellUnitType:NumCentralEqpUnits
  DEFAULT
    if( NumCentralEquipTypes = 1 ) then CentralEquipCount[1]
    else if( NumCentralEquipTypes = 2 ) then CentralEquipCount[1] + CentralEquipCount[2]
    else if( NumCentralEquipTypes = 3 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3]
    else if( NumCentralEquipTypes = 4 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4]
    else if( NumCentralEquipTypes > 4 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
    else 0
    endif endif endif endif endif
ENDRULE

RULE DwellUnitType:HeatEquipSummary
  DEFAULT
    if( IfValidAnd( HVACSysType = "Central Heating and Cooling System" ) .AND.
        LocalCompAssigned( HVACCentralRef ) )
    then if( HVACCentralRef:Type = "- select system type -" )
         then "unknown central system type"
         else if( HVACCentralRef:Type = "Water source heat pump" )
         then Format( "%.0f %s unit(s), %.1f COP, %.1f EER", NumCentralEqpUnits, CentralEqpType, WSHPCOP, WSHPEER ) 
         else if( HVACCentralRef:Type = "Variable refrigerant flow" )
         then Format( "%.0f %s indoor unit(s)", NumCentralEqpUnits, CentralEqpType )
         else Format( "%.0f %s unit(s)", NumCentralEqpUnits, CentralEqpType )
         endif endif endif
    else UNCHANGED
    endif
ENDRULE

RULE ResHVACSys:NumCentralEqpUnits
  DEFAULT
    if( NumCentralEquipTypes = 1 ) then CentralEquipCount[1]
    else if( NumCentralEquipTypes = 2 ) then CentralEquipCount[1] + CentralEquipCount[2]
    else if( NumCentralEquipTypes = 3 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3]
    else if( NumCentralEquipTypes = 4 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4]
    else if( NumCentralEquipTypes = 5 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
    else if( NumCentralEquipTypes = 6 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
                                           + CentralEquipCount[6]
    else if( NumCentralEquipTypes = 7 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
                                           + CentralEquipCount[6] + CentralEquipCount[7]
    else if( NumCentralEquipTypes = 8 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
                                           + CentralEquipCount[6] + CentralEquipCount[7] + CentralEquipCount[8]
    else if( NumCentralEquipTypes = 9 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
                                           + CentralEquipCount[6] + CentralEquipCount[7] + CentralEquipCount[8] + CentralEquipCount[9]
    else if( NumCentralEquipTypes > 9 ) then CentralEquipCount[1] + CentralEquipCount[2] + CentralEquipCount[3] + CentralEquipCount[4] + CentralEquipCount[5]
                                           + CentralEquipCount[6] + CentralEquipCount[7] + CentralEquipCount[8] + CentralEquipCount[9] + CentralEquipCount[10]
    else 0
    endif endif endif endif endif endif endif endif endif endif
ENDRULE

; facilitate ResZnGrp:Mult (floor multipliers) - SAC 05/26/23 (tic #3392)
RULE NEW ResHVACSys:MaxResZnGrpMult
  DESCRIPTION
    "The highest ResZnGrp:Mult across any zone served by this system"
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    max( MaxRevRef( ResZn:ActiveHVACSystem, ResZn:Mult ),
         MaxRevRef( ResOtherZn:ozHVACSystem, ResOtherZn:Mult ) )
ENDRULE

RULE ResHVACSys:HeatEquipSummary
  DEFAULT
    if( IfValidAnd( Type = "Central Heating and Cooling System" ) .AND.
        LocalCompAssigned( HVACCentralRef ) )
    then if( HVACCentralRef:Type = "- select system type -" )
         then "unknown central system type"
         else if( HVACCentralRef:Type = "Water source heat pump" )
         then Format( "%.0f %s unit(s), %.1f COP, %.1f EER", NumCentralEqpUnits, CentralEqpType, WSHPCOP, WSHPEER )
         else if( HVACCentralRef:Type = "Variable refrigerant flow" )
         then Format( "%.0f %s indoor unit(s)", NumCentralEqpUnits, CentralEqpType )
         else Format( "%.0f %s unit(s)", NumCentralEqpUnits, CentralEqpType )
         endif endif endif
    else UNCHANGED
    endif
ENDRULE
// -------------------------------------------
// --------------- System Size ---------------
// -------------------------------------------

// ------------ Auto Hard Sizing -------------
RULE Proj:ResAutoHardSizeAirFlowPerSqFt
  HELP
    "Used for AutoHardSizing only, a project level specification of air side 
     supply air flow capacity based on system conditioned floor area. Only 
     applied to ResHVACSys that connected to FluidSys!"
  DEFAULT
    if( LocalStatus(AutoHardSize) = 0 .OR. AutoHardSize = 0 )
    then UNDEFINED
    else 1.0 ; cfm/ft2
    endif  
  SIZING
    UNDEFINED
ENDRULE

RULE Proj:ResAutoHardSizeAirFlowPerTon
  HELP
    "Used for AutoHardSizing only, a project level specification of air side 
     cooling capacity based on supply air flow. Only applied to ResHVACSys that 
     connected to FluidSys!"
  DEFAULT
    if( LocalStatus(AutoHardSize) = 0 .OR. AutoHardSize = 0 )
    then UNDEFINED
    else 350 ; cfm/ton (net) cooling
    endif
  SIZING
    UNDEFINED
ENDRULE

RULE DwellUnitType:AreaPerCentralEqp[1]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[1] * DUFloorAreaServed / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE DwellUnitType:AreaPerCentralEqp[2]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[2] * DUFloorAreaServed / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE DwellUnitType:AreaPerCentralEqp[3]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[3] * DUFloorAreaServed / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE DwellUnitType:AreaPerCentralEqp[4]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[4] * DUFloorAreaServed / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE DwellUnitType:AreaPerCentralEqp[5]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[5] * DUFloorAreaServed / NumCentralEqpUnits else UNDEFINED endif
ENDRULE

RULE ResHVACSys:AreaPerCentralEqp[1]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[1] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[2]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[2] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[3]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[3] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[4]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[4] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[5]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[5] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[6]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[6] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[7]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[7] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[8]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[8] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[9]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[9] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE
RULE ResHVACSys:AreaPerCentralEqp[10]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[10] * FloorAreaServed[1] / NumCentralEqpUnits else UNDEFINED endif
ENDRULE

RULE DwellUnitType:CentralEquipCountMult[1]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[1] * NumAssigningDUs else UNDEFINED endif
ENDRULE
RULE DwellUnitType:CentralEquipCountMult[2]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[2] * NumAssigningDUs else UNDEFINED endif
ENDRULE
RULE DwellUnitType:CentralEquipCountMult[3]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[3] * NumAssigningDUs else UNDEFINED endif
ENDRULE
RULE DwellUnitType:CentralEquipCountMult[4]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[4] * NumAssigningDUs else UNDEFINED endif
ENDRULE
RULE DwellUnitType:CentralEquipCountMult[5]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[5] * NumAssigningDUs else UNDEFINED endif
ENDRULE

RULE ResHVACSys:CentralEquipCountMult[1]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[1] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[2]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[2] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[3]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[3] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[4]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[4] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[5]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[5] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[6]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[6] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[7]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[7] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[8]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[8] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[9]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[9] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE
RULE ResHVACSys:CentralEquipCountMult[10]
  DEFAULT
    if( IfValidAnd( NumCentralEqpUnits > 0 ) ) then CentralEquipCount[10] * CountRefs( ResOtherZn:ozHVACSystem ) else UNDEFINED endif
ENDRULE


RULE ResCentralHtgClgSys:FloorAreaServed
  DEFAULT
    SumRevRef( DwellUnitType:HVACCentralRef[1], DwellUnitType:AreaPerCentralEqp[1] ) + SumRevRef( DwellUnitType:HVACCentralRef[2], DwellUnitType:AreaPerCentralEqp[2] ) +
    SumRevRef( DwellUnitType:HVACCentralRef[3], DwellUnitType:AreaPerCentralEqp[3] ) + SumRevRef( DwellUnitType:HVACCentralRef[4], DwellUnitType:AreaPerCentralEqp[4] ) +
    SumRevRef( DwellUnitType:HVACCentralRef[5], DwellUnitType:AreaPerCentralEqp[5] ) + 
    SumRevRef( ResHVACSys:HVACCentralRef[1], ResHVACSys:AreaPerCentralEqp[1] ) + SumRevRef( ResHVACSys:HVACCentralRef[2], ResHVACSys:AreaPerCentralEqp[2] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[3], ResHVACSys:AreaPerCentralEqp[3] ) + SumRevRef( ResHVACSys:HVACCentralRef[4], ResHVACSys:AreaPerCentralEqp[4] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[5], ResHVACSys:AreaPerCentralEqp[5] ) + SumRevRef( ResHVACSys:HVACCentralRef[6], ResHVACSys:AreaPerCentralEqp[6] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[7], ResHVACSys:AreaPerCentralEqp[7] ) + SumRevRef( ResHVACSys:HVACCentralRef[8], ResHVACSys:AreaPerCentralEqp[8] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[9], ResHVACSys:AreaPerCentralEqp[9] ) + SumRevRef( ResHVACSys:HVACCentralRef[10], ResHVACSys:AreaPerCentralEqp[10] )
ENDRULE

RULE ResCentralHtgClgSys:TotalNumUnits
  DEFAULT
    SumRevRef( DwellUnitType:HVACCentralRef[1], DwellUnitType:CentralEquipCountMult[1] ) + SumRevRef( DwellUnitType:HVACCentralRef[2], DwellUnitType:CentralEquipCountMult[2] ) +
    SumRevRef( DwellUnitType:HVACCentralRef[3], DwellUnitType:CentralEquipCountMult[3] ) + SumRevRef( DwellUnitType:HVACCentralRef[4], DwellUnitType:CentralEquipCountMult[4] ) +
    SumRevRef( DwellUnitType:HVACCentralRef[5], DwellUnitType:CentralEquipCountMult[5] ) + 
    SumRevRef( ResHVACSys:HVACCentralRef[1], ResHVACSys:CentralEquipCountMult[1] ) + SumRevRef( ResHVACSys:HVACCentralRef[2], ResHVACSys:CentralEquipCountMult[2] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[3], ResHVACSys:CentralEquipCountMult[3] ) + SumRevRef( ResHVACSys:HVACCentralRef[4], ResHVACSys:CentralEquipCountMult[4] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[5], ResHVACSys:CentralEquipCountMult[5] ) + SumRevRef( ResHVACSys:HVACCentralRef[6], ResHVACSys:CentralEquipCountMult[6] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[7], ResHVACSys:CentralEquipCountMult[7] ) + SumRevRef( ResHVACSys:HVACCentralRef[8], ResHVACSys:CentralEquipCountMult[8] ) +
    SumRevRef( ResHVACSys:HVACCentralRef[9], ResHVACSys:CentralEquipCountMult[9] ) + SumRevRef( ResHVACSys:HVACCentralRef[10], ResHVACSys:CentralEquipCountMult[10] )
ENDRULE

RULE ResCentralHtgClgSys:AutoSize
  RESETS
    ResetThisWhenTheFollowingIsModified
      Type
  DEFAULT
    if( Type = "Variable refrigerant flow" )
    then 0
    else 1
    endif
ENDRULE

RULE ResCentralHtgClgSys:HtgCapTotNetRtd
  DEFAULT
    if( IfValidAnd( Proj:AutoHardSize > 0 ) .AND. IfValidAnd( FloorAreaServed > 0 ) )
    then FloorAreaServed * Proj:ResAutoHardSizeAirFlowPerSqFt / Proj:ResAutoHardSizeAirFlowPerTon * 12000 / TotalNumUnits
    else 0
    endif
  CHECKSIM
    if( Type = "Variable refrigerant flow" .AND. IfValidAnd( HtgCapTotNetRtd <= 0 ) .AND. AutoSize = 0 )
    then PostError("Net heating capacity for Res Central System '%s' is a required input for 
                    Variable refrigerant flow", Name)
    else UNCHANGED
    endif
ENDRULE

RULE ResCentralHtgClgSys:ClgCapTotNetRtd
  DEFAULT
    if( IfValidAnd( Proj:AutoHardSize > 0 ) .AND. IfValidAnd( FloorAreaServed > 0 ) )
    then FloorAreaServed * Proj:ResAutoHardSizeAirFlowPerSqFt / Proj:ResAutoHardSizeAirFlowPerTon * 12000 /  TotalNumUnits
    else 0
    endif
  CHECKSIM
    if( Type = "Variable refrigerant flow" .AND. IfValidAnd( ClgCapTotNetRtd <= 0 ) .AND. AutoSize = 0 )
    then PostError("Net cooling capacity for Res Central System '%s' is a required input for 
                    Variable refrigerant flow", Name)
    else UNCHANGED
    endif
ENDRULE

RULE NEW DwellUnitType:SumCentralClgCap
  DESCRIPTION
    "The sum of cooling capacity of the residential central heating and cooling system
     served by this dwelling unit type"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( HVACSysType = "Central Heating and Cooling System" ) )
    then if( IfValidAnd( Proj:AutoHardSize = 1 ) .AND. CentralEqpType != "Variable refrigerant flow" )
         then DUFloorAreaServed * Proj:ResAutoHardSizeAirFlowPerSqFt / Proj:ResAutoHardSizeAirFlowPerTon * 12000
         else if( NumCentralEquipTypes = 1 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 2 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 3 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 4 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                      CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes > 4 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                      CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd )
         else 0 
         endif endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:SumCentralHtRejLd
  DATATYPE
    Float
  DESCRIPTION
    "The sum of heat rejected by the WSHP at the peak rated output."
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( HVACSysType = "Central Heating and Cooling System" ) .AND. 
        IfValidAnd( CentralEqpType = "Water source heat pump" ) .AND.
        IfValidAnd( Proj:AutoHardSize = 1 ) )
    then SumCentralClgCap * ( 1 + ( 3.412 / ValidOr( WSHPEER, 12 ) ) )
    else 0
    endif
ENDRULE

RULE NEW DwellUnitType:SumCentralHtgCap
  DESCRIPTION
    "The sum of cooling capacity of the residential central heating and cooling system.
     For auto hard sizing only"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( HVACSysType = "Central Heating and Cooling System" )  )
    then if( IfValidAnd( Proj:AutoHardSize = 1 ) .AND. CentralEqpType != "Variable refrigerant flow" )
         then 1.05 * DUFloorAreaServed * Proj:ResAutoHardSizeAirFlowPerSqFt / Proj:ResAutoHardSizeAirFlowPerTon * 12000
         else if( NumCentralEquipTypes = 1 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 2 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 3 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd  )
         else if( NumCentralEquipTypes = 4 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                      CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes > 4 ) then NumAssigningDUs * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                      CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd )
         else 0 
         endif endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW DwellUnitType:SumCentralHtExtractionLd
  DESCRIPTION
    "The sum of extraction load of the residential central heating and cooling system.
     For auto hard sizing only"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( HVACSysType = "Central Heating and Cooling System" ) .AND. 
        IfValidAnd( CentralEqpType = "Water source heat pump" ) .AND.
        IfValidAnd( Proj:AutoHardSize = 1 ) )
    then SumCentralHtgCap * ( 1 - 1 / ValidOr( WSHPCOP, 3 ) )
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:NumAssigningZones
  DESCRIPTION
    "The number of zones served by this HVAC system"
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    CountRefs(ResZn:HVACSystem ) + CountRefs( ResOtherZn:ozHVACSystem )
ENDRULE

RULE NEW ResHVACSys:SumCentralClgCap
  DESCRIPTION
    "The sum of cooling capacity of the residential central heating and cooling system.
     For auto hard sizing only"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( Type = "Central Heating and Cooling System" ) )
    then if( IfValidAnd( Proj:AutoHardSize = 1 ) .AND. CentralEqpType != "Variable refrigerant flow" )
         then FloorAreaServed * Proj:ResAutoHardSizeAirFlowPerSqFt / Proj:ResAutoHardSizeAirFlowPerTon * 12000
         else if( NumCentralEquipTypes = 1 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 2 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 3 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd  )
         else if( NumCentralEquipTypes = 4 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 5 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 6 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 7 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 8 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:ClgCapTotNetRtd + CentralEquipCount[8] * HVACCentralRef[8]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes = 9 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:ClgCapTotNetRtd + CentralEquipCount[8] * HVACCentralRef[8]:ClgCapTotNetRtd + CentralEquipCount[9] * HVACCentralRef[9]:ClgCapTotNetRtd )
         else if( NumCentralEquipTypes > 9 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:ClgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:ClgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:ClgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:ClgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:ClgCapTotNetRtd + CentralEquipCount[8] * HVACCentralRef[8]:ClgCapTotNetRtd + CentralEquipCount[9] * HVACCentralRef[9]:ClgCapTotNetRtd + 
                                                                        CentralEquipCount[10] * HVACCentralRef[10]:ClgCapTotNetRtd )
         else 0 
         endif endif endif endif endif endif endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:SumCentralHtRejLd
  DATATYPE
    Float
  DESCRIPTION
    "The sum of heat rejected by the WSHP at the peak rated output."
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( Type = "Central Heating and Cooling System" ) .AND. 
        IfValidAnd( CentralEqpType = "Water source heat pump" ) .AND.
        IfValidAnd( Proj:AutoHardSize = 1 ) )
    then SumCentralClgCap * ( 1 + ( 3.412 / ValidOr( WSHPEER, 12 ) ) )
    else 0
    endif
ENDRULE

RULE NEW ResHVACSys:SumCentralHtgCap
  DESCRIPTION
    "The sum of cooling capacity of the residential central heating and cooling system.
     For auto hard sizing only"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( Type = "Central Heating and Cooling System" ) )
    then if( IfValidAnd( Proj:AutoHardSize = 1 ) .AND. CentralEqpType != "Variable refrigerant flow" )
         then 1.05 * FloorAreaServed * Proj:ResAutoHardSizeAirFlowPerSqFt / Proj:ResAutoHardSizeAirFlowPerTon * 12000
         else if( NumCentralEquipTypes = 1 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 2 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 3 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 4 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 5 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 6 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 7 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 8 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:HtgCapTotNetRtd + CentralEquipCount[8] * HVACCentralRef[8]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes = 9 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:HtgCapTotNetRtd + CentralEquipCount[8] * HVACCentralRef[8]:HtgCapTotNetRtd + CentralEquipCount[9] * HVACCentralRef[9]:HtgCapTotNetRtd )
         else if( NumCentralEquipTypes > 9 ) then NumAssigningZones * ( CentralEquipCount[1] * HVACCentralRef[1]:HtgCapTotNetRtd + CentralEquipCount[2] * HVACCentralRef[2]:HtgCapTotNetRtd + CentralEquipCount[3] * HVACCentralRef[3]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[4] * HVACCentralRef[4]:HtgCapTotNetRtd + CentralEquipCount[5] * HVACCentralRef[5]:HtgCapTotNetRtd + CentralEquipCount[6] * HVACCentralRef[6]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[7] * HVACCentralRef[7]:HtgCapTotNetRtd + CentralEquipCount[8] * HVACCentralRef[8]:HtgCapTotNetRtd + CentralEquipCount[9] * HVACCentralRef[9]:HtgCapTotNetRtd + 
                                                                        CentralEquipCount[10] * HVACCentralRef[10]:HtgCapTotNetRtd )
         else 0 
         endif endif endif endif endif endif endif endif endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResHVACSys:SumCentralHtExtractionLd
  DESCRIPTION
    "The sum of extraction load of the residential central heating and cooling system.
     For auto hard sizing only"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    Btu/h
  DEFAULT
    if( IfValidAnd( Type = "Central Heating and Cooling System" ) .AND. 
        IfValidAnd( CentralEqpType = "Water source heat pump" ) .AND.
        IfValidAnd( Proj:AutoHardSize = 1 ) )
    then SumCentralHtgCap * ( 1 - 1 / ValidOr( WSHPCOP, 3 ) )
    else UNDEFINED
    endif
ENDRULE


; SAC 05/09/22
RULE NEW ResOtherZn:TrmlUnitRef
  DATATYPE
    TerminalUnit
  LONGFORM
    TerminalUnitReference
  DESCRIPTION
    "pointer from ResOtherZn to the TrmlUnit that assigns this ResotherZn"
  INPUTCLASS
    NotInput
  DEFAULT
    MaxRevRefComp( TrmlUnit:ZnServedRef, TrmlUnit:Cnt )
ENDRULE


// -----------------------------------------------------------------------------
// --------------------- Central VRF Sys -------------------------------
// -----------------------------------------------------------------------------
// Converting EnergyPlus inputs to CSE inputs see detial calculation in Apendix_5.7_PerformanceCUrves.xlsx
// all the coefficients are calculated in the same document

// CSE assumes COP linearly increases as PLR decreases.
// So, we need to capture the maximum efficiency @ PLR ~= 0.55, and the user input PLRMin is ignored
// Then we need to use cycling degradation in CSE to approach the COP drop as PLR < 0.5 seem in E+

// JP 7/21/22 This section had been greatly simplified after CBECC 2022.1.0 release, 
// but the old approach is still documented in Apendix_5.7_PerformanceCUrves.xlsx

RULE NEW ResHVACSys:VRFClgEIR
  DESCRIPTION
    "The gross cooling EIR of the VRF system at AHRI conditions (kW/kW)."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:ClgEIR else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFHtgEIR
  DESCRIPTION
    "The gross Heating EIR of the VRF system at AHRI conditions (kW/kW)."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:HtgEIR else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFEquivalentPipeLen
  DESCRIPTION
    "The equivalent pipe length in feet between the farthest terminal 
     unit and the heat pump condenser."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    ft
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:EquivalentPipeLen else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxDeltaHgt
  DESCRIPTION
    "The vertical pipe height in feet between the highest or lowest 
     terminal unit and the Outdoor Unit."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    ft
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:MaxDeltaHgt else UNDEFINED endif
ENDRULE

RULE NEW VRFSys:NumResHVACSysServed
  DESCRIPTION
    "Number of ResHVACSys served by this VRFSys"
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  SIZING
    CountRefs( ResHVACSys:VRFSysRef )
ENDRULE

RULE NEW ResHVACSys:VRFTotCprsrCrankcaseHtrCap
  DESCRIPTION
    "The total crankcase heater power."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    W
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:CprsrCrankcaseHtrCapSim * VRFSysRef:CprsrQty / VRFSysRef:NumResHVACSysServed else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFCrankcaseCtrlTemp
  DESCRIPTION
    "Maximum outdoor dry-bulb temperature for crankcase heater operation."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  UNITS
    F
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:CrankcaseCtrlTemp else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFFanHtCoeff
  DESCRIPTION
    "An intermediate calculation of a coefficient for calculating fan heat at
     conditions CSE assumed for VCHP"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    // Q_fan = FanHtCoeff * Q_gross
    //                 1 ton      400cfm   0.2075W    3.412Btu/hr
    // FanHtCoeff = ----------- x ------ x ------- x -----------
    //              12000Btu/hr    1ton     1cfm         1W
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then (1/12000)*400*0.2075*3.412
    else UNDEFINED endif
ENDRULE

; This part of the rules are calculating the performance parameter at maximum system capacity
//RULE ResHVACSys:CentralSysClgCap
// convert net capacity to gross capacity ( net capacity + fan heat )
//  SIZING
//    if( CentralEqpType = "Variable refrigerant flow" ) 
//    then CentralSysClgCap + ( CentralSysClgCap / ( 1 - VRFFanHtCoeff ) ) * VRFFanHtCoeff else UNCHANGED endif
//ENDRULE
//
//RULE ResHVACSys:CentralSysHtgCap
// convert net capacity to gross capacity ( net capacity - fan heat )
//  SIZING
//    if( CentralEqpType = "Variable refrigerant flow" ) 
//    then CentralSysHtgCap - ( CentralSysClgCap / ( 1 - VRFFanHtCoeff ) ) * VRFFanHtCoeff else UNCHANGED endif
//ENDRULE

RULE NEW ResHVACSys:VRFMaxClgCapRat11595
  DESCRIPTION
    "Ratio of maximum net cooling capacity at 115F over
     maximum net cooling capacity at 95F (rated condition)."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                  CapModiferOfTemp_115 x ( 1 - FanHtCoeff ) <- ClgNetCap115/ClgGrossCap95
    // ClgCapRat11595 = ------------------------------------------
    //                  CapModiferOfTemp_95 x ( 1 - FanHtCoeff ) <- ClgNetCap95/ClgGrossCap95
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 0.89585 / 0.99759
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxClgCapRat8295
  DESCRIPTION
    "Ratio of maximum net cooling capacity at 82F over
     maximum netcooling capacity at 95F (rated condition)."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                  CapModiferOfTemp_82 x ( 1 - FanHtCoeff ) <- ClgNetCap82/ClgGrossCap95
    // ClgCapRat11595 = ------------------------------------------
    //                  CapModiferOfTemp_95 x ( 1 - FanHtCoeff ) <- ClgNetCap95/ClgGrossCap95
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 1.04757 / 0.99759
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxHtgCapRat1747
  DESCRIPTION
    "Ratio of maximum net heating capacity at 17F over
     maximum net heating capacity at 47F (rated condition)."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                  CapModiferOfTemp_17 x ( 1 + FanHtCoeff ) <- HtgNetCap17/HtgGrossCap47
    // ClgCapRat11595 = ------------------------------------------
    //                  CapModiferOfTemp_47 x ( 1 + FanHtCoeff ) <- HtgNetCap47/HtgGrossCap47
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 0.78471 / 1.00097
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxHtgCapRat0547
  DESCRIPTION
    "Ratio of maximum net heating capacity at 5F over
     maximum net heating capacity at 47F (rated condition)."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                  CapModiferOfTemp_05 x ( 1 + FanHtCoeff ) <- HtgNetCap05/HtgGrossCap47
    // ClgCapRat11595 = ------------------------------------------
    //                  CapModiferOfTemp_47 x ( 1 + FanHtCoeff ) <- HtgNetCap47/HtgGrossCap47
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 0.63584 / 1.00097
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFPipeLoss
  DESCRIPTION
    "Cooling pipe losses modifier as a function of total pipe length, 
     and vertical pipe height ( where combination ratio is not used, set to 1 )"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 1.069379 - 0.000455676 * VRFEquivalentPipeLen + 2.78709E-07 * VRFEquivalentPipeLen * VRFEquivalentPipeLen 
         - 0.11511 * 1 + 0.051117 * 1 - 0.000133198 * VRFEquivalentPipeLen * 1
         - 0.00019231 * VRFMaxDeltaHgt
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxClgCOP115
  DESCRIPTION
    "Total system cooling COP at maximum capacity at outdoor temperature of 115F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                             ( 1 - FanHtCoeff )                      <- output
    // COP115 = ----------------------------------------------------------
    //           ClgEIR_95 / PipeLoss x EIRModifierOfTemp_115 + FanHtCoeff <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 - VRFFanHtCoeff ) / ( VRFClgEIR / VRFPipeLoss * 1.2892 + VRFFanHtCoeff )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxClgCOP95
  DESCRIPTION
    "Total system cooling COP at maximum capacity at outdoor temperature of 95F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                             ( 1 - FanHtCoeff )                      <- output
    // COP95 = ----------------------------------------------------------
    //           ClgEIR_95 / PipeLoss x EIRModifierOfTemp_95 + FanHtCoeff <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 - VRFFanHtCoeff ) / ( VRFClgEIR / VRFPipeLoss * 1.0 + VRFFanHtCoeff )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxClgCOP82
  DESCRIPTION
    "Total system cooling COP at maximum capacity at outdoor temperature of 82F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                             ( 1 - FanHtCoeff )                      <- output
    // COP95 = ----------------------------------------------------------
    //           ClgEIR_95 / PipeLoss x EIRModifierOfTemp_82 + FanHtCoeff <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 - VRFFanHtCoeff ) / ( VRFClgEIR / VRFPipeLoss * 0.8349 + VRFFanHtCoeff )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxHtgCOP47
  DESCRIPTION
    "Total system heating COP at maximum capacity at outdoor temperature of 47F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                             ( 1 + FanHtCoeff )                      <- output
    // COP47 = ----------------------------------------------------------
    //           HtgEIR_47 / PipeLoss x EIRModifierOfTemp_47 + FanHtCoeff <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 + VRFFanHtCoeff ) / ( VRFHtgEIR / VRFPipeLoss * 1 + VRFFanHtCoeff )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxHtgCOP17
  DESCRIPTION
    "Total system heating COP at maximum capacity at outdoor temperature of 17F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                             ( 1 + FanHtCoeff )                      <- output
    // COP17 = ----------------------------------------------------------
    //           HtgEIR_47 / PipeLoss x EIRModifierOfTemp_17 + FanHtCoeff <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 + VRFFanHtCoeff ) / ( VRFHtgEIR / VRFPipeLoss * 1.4500 + VRFFanHtCoeff )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMaxHtgCOP05
  DESCRIPTION
    "Total system heating COP at maximum capacity at outdoor temperature of 5F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                             ( 1 + FanHtCoeff )                      <- output
    // COP05 = ----------------------------------------------------------
    //           HtgEIR_47 / PipeLoss x EIRModifierOfTemp_05 + FanHtCoeff <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 + VRFFanHtCoeff ) / ( VRFHtgEIR / VRFPipeLoss * 1.7271 + VRFFanHtCoeff )
    else UNDEFINED endif
ENDRULE

// This part of the rules are calculating the performance parameter at minimum system capacity

RULE NEW ResHVACSys:VRFClgPLRMin
  DESCRIPTION
    "The minimum operating part-load ratio (PLR) of the heat pump in cooling mode."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
;    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:PLRMin else UNDEFINED endif
    if( CentralEqpType = "Variable refrigerant flow" ) then 0.55 else UNDEFINED endif ; PLR at ~ the maximum cooling efficiency
ENDRULE

RULE NEW ResHVACSys:VRFHtgPLRMin
  DESCRIPTION
    "The minimum operating part-load ratio (PLR) of the heat pump in heating mode."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
;    if( CentralEqpType = "Variable refrigerant flow" ) then VRFSysRef:PLRMin else UNDEFINED endif
    if( CentralEqpType = "Variable refrigerant flow" ) then 0.55 else UNDEFINED endif ; PLR at ~ the maximum heating efficiency
ENDRULE

RULE NEW ResHVACSys:VRFClgEIR_fPLRMin
  DESCRIPTION
    "Cooling energy input ratio (EIR) modifier of part load ratio (PRL) at minimum PLR"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 0+ 0.625 * VRFClgPLRMin + 0.234375 * VRFClgPLRMin * VRFClgPLRMin + 0.087890625 * VRFClgPLRMin * VRFClgPLRMin * VRFClgPLRMin +
         0.032958984 * VRFClgPLRMin * VRFClgPLRMin * VRFClgPLRMin * VRFClgPLRMin + 0.012359619 * VRFClgPLRMin * VRFClgPLRMin * VRFClgPLRMin * VRFClgPLRMin * VRFClgPLRMin
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFHtgEIR_fPLRMin
  DESCRIPTION
    "Heating energy input ratio (EIR) modifier of part load ratio (PRL) at minimum PLR"
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then 0.0 + 0.909090909 * VRFHtgPLRMin + 0.082644628 * VRFHtgPLRMin * VRFHtgPLRMin + 0.007513148 * VRFHtgPLRMin * VRFHtgPLRMin * VRFHtgPLRMin +
         0.000683013 * VRFHtgPLRMin * VRFHtgPLRMin * VRFHtgPLRMin * VRFHtgPLRMin + 0.00006209 * VRFHtgPLRMin * VRFHtgPLRMin * VRFHtgPLRMin * VRFHtgPLRMin * VRFHtgPLRMin
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMinClgCOP115
  DESCRIPTION
    "Total system cooling COP at Minimum capacity at outdoor temperature of 115F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                                       ( 1 - FanHtCoeff ) x VRFClgPLRMin                               <- output
    // COP115 = -------------------------------------------------------------------------------------------
    //          ClgEIR_95 / PipeLoss x EIRModifierOfTemp_115 x VRFClgEIR_fPLRMin + FanHtCoeff x VRFClgPLRMin <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 - VRFFanHtCoeff ) * VRFClgPLRMin / ( VRFClgEIR / VRFPipeLoss * 1.2892 * VRFClgEIR_fPLRMin + VRFFanHtCoeff * VRFClgPLRMin )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMinClgCOP95
  DESCRIPTION
    "Total system cooling COP at Minimum capacity at outdoor temperature of 95F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                                       ( 1 - FanHtCoeff ) x VRFClgPLRMin                              <- output
    // COP95 =  -------------------------------------------------------------------------------------------
    //          ClgEIR_95 / PipeLoss x EIRModifierOfTemp_95 x VRFClgEIR_fPLRMin + FanHtCoeff x VRFClgPLRMin <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 - VRFFanHtCoeff ) * VRFClgPLRMin / ( VRFClgEIR / VRFPipeLoss * 1 * VRFClgEIR_fPLRMin + VRFFanHtCoeff * VRFClgPLRMin )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMinClgCOP82
  DESCRIPTION
    "Total system cooling COP at Minimum capacity at outdoor temperature of 82F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                                       ( 1 - FanHtCoeff ) x VRFClgPLRMin                              <- output
    // COP82 =  -------------------------------------------------------------------------------------------
    //          ClgEIR_95 / PipeLoss x EIRModifierOfTemp_82 x VRFClgEIR_fPLRMin + FanHtCoeff x VRFClgPLRMin <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 - VRFFanHtCoeff ) * VRFClgPLRMin / ( VRFClgEIR / VRFPipeLoss * 0.8349 * VRFClgEIR_fPLRMin + VRFFanHtCoeff * VRFClgPLRMin )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMinHtgCOP47
  DESCRIPTION
    "Total system heating COP at Minimum capacity at outdoor temperature of 47F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                                       ( 1 + FanHtCoeff ) x VRFClgPLRMin                              <- output
    // COP47 =  -------------------------------------------------------------------------------------------
    //          ClgEIR_47 / PipeLoss x EIRModifierOfTemp_47 x VRFClgEIR_fPLRMin + FanHtCoeff x VRFClgPLRMin <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 + VRFFanHtCoeff ) * VRFHtgPLRMin / ( VRFHtgEIR / VRFPipeLoss * 1 * VRFHtgEIR_fPLRMin + VRFFanHtCoeff * VRFClgPLRMin )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMinHtgCOP17
  DESCRIPTION
    "Total system heating COP at Minimum capacity at outdoor temperature of 17F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                                       ( 1 + FanHtCoeff ) x VRFClgPLRMin                              <- output
    // COP47 =  -------------------------------------------------------------------------------------------
    //          ClgEIR_47 / PipeLoss x EIRModifierOfTemp_17 x VRFClgEIR_fPLRMin + FanHtCoeff x VRFClgPLRMin <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 + VRFFanHtCoeff ) * VRFHtgPLRMin / ( VRFHtgEIR / VRFPipeLoss * 1.4500 * VRFHtgEIR_fPLRMin + VRFFanHtCoeff * VRFClgPLRMin )
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:VRFMinHtgCOP05
  DESCRIPTION
    "Total system heating COP at Minimum capacity at outdoor temperature of 5F."
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  SIZING
    //                                       ( 1 + FanHtCoeff ) x VRFClgPLRMin                              <- output
    // COP47 =  -------------------------------------------------------------------------------------------
    //          ClgEIR_47 / PipeLoss x EIRModifierOfTemp_05 x VRFClgEIR_fPLRMin + FanHtCoeff x VRFClgPLRMin <- input = cmopressor + fan
    if( CentralEqpType = "Variable refrigerant flow" ) 
    then ( 1 + VRFFanHtCoeff ) * VRFHtgPLRMin / ( VRFHtgEIR / VRFPipeLoss * 1.7271 * VRFHtgEIR_fPLRMin + VRFFanHtCoeff * VRFClgPLRMin )
    else UNDEFINED endif
ENDRULE

// -----------------------------------------------------------------------------
// --------------------- Central Vent Sys -------------------------------
// -----------------------------------------------------------------------------
RULE NEW Proj:AboveGrdStoryCnt
  DATATYPE
    Integer
  LONGFORM
    AboveGradeStoryCount
  INPUTCLASS
    NotInput
  DESCRIPTION
    "The number of above-grade building stories." 
  HELP
    "This property is one determining factor for the basline HVAC system type. 
     A floor is considered a Habitable Story, defined in the Standards as a 
     story that is at least 50 percent above grade."
  DEFAULT
    MaxChild( Bldg:AboveGrdStoryCnt )
ENDRULE

RULE ResCentralVentSys:TypeDescrip
// TO DO write *.rtf
  DEFAULT
    switch( Type )
    case "Balanced" : UNDEFINED
    case "Supply"   : UNDEFINED
    case "Exhaust"  : UNDEFINED
    default : UNDEFINED
    endswitch
ENDRULE
; place here to ensure fan power is calculated correctly
RULE ResCentralVentSys:HXType
  SIZING_PROPOSED
    if( Type = "Balanced" )
    then UNCHANGED
    else "None"
    endif
  SIZING_BASELINE
    if( ( Type = "Balanced" ) .AND.
        ( Proj:CliZnNum < 3 .OR. Proj:CliZnNum > 10 ) .AND.
        Proj:AboveGrdStoryCnt >= 4 )
    then "Plate"
    else "None"
    endif
ENDRULE

RULE ResCentralVentSys:HasHXBypass
  CHECKSIM
    if( TempCtrl = "NoSATControl" .AND.
        ( HXType = "Wheel" .OR. HasHXBypass = "Yes" ) )
    then PostWarning( "Residential central ventilation system '%s' has no
                       temperature control. Therefore there is no contrl to 
                       the rotary wheel or bypass damper.", Name )
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( TempCtrl = "NoSATControl" )
    then "No"
    else if( HXType = "Wheel" )
    then "Yes"
    else UNCHANGED
    endif endif
  SIZING_BASELINE
    if( ( HXType = "Plate" ) )
    then "Yes"
    else "No"
    endif
ENDRULE

RULE ResOtherZn:IAQOption
  RESETS
    CentralSupplyCFM
    CentralExhaustCFM
  SIZING_PROPOSED
    if( LocalCompAssigned( ozHVACSystem ) = ComponentType ("AirSys" ) )
    then "Air System"
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then "Air System"
    else UNCHANGED
    endif
ENDRULE

RULE ResOtherZn:Action
  DEFAULT
    if( LocalCompAssigned( ozHVACSystem ) = ComponentType ("AirSys" ) .AND.
        ( LocalStatus( IAQOption ) > 4 .OR. 
          LocalCompAssigned( IAQFanRef[1] ) > 0 .OR. 
          LocalCompAssigned( IAQFanRef[2] ) > 0 .OR. 
          LocalCompAssigned( IAQFanRef[3] ) > 0 .OR. 
          LocalCompAssigned( IAQFanRef[4] ) > 0 .OR. 
          LocalCompAssigned( CentralVentSysRef ) > 0 ) )
    then EvalRulelist( "Blast_ResOtherZnIAQ_forAirSys", 1 )
    else UNCHANGED
    endif           
ENDRULE

RULE DwellUnitType:IAQOption
  RESETS
    CentralSupplyCFM
    CentralExhaustCFM
ENDRULE

RULE ResOtherZn:CentralVentSysRef
  CHECKSIM
    if( IAQOption = "Central Supply / Central Exhaust" .AND.
        IfValidAnd( CentralVentSysRef:Type != "Balanced" ) )
    then PostError("ResOtherZn '%s' needs to be connected to a balanced central ventilation system.", Name )
    else if( ( IAQOption = "Central Supply / Individual Exhaust" .OR.
               IAQOption = "Central Supply" ) .AND.
        IfValidAnd( CentralVentSysRef:Type != "Supply" ) )
    then PostError("ResOtherZn '%s' needs to be connected to a central supply ventilation system.", Name )
    else if( ( IAQOption = "Central Exhaust / Individual Supply" .OR.
               IAQOption = "Central Exhaust" ) .AND.
        IfValidAnd( CentralVentSysRef:Type != "Exhaust" ) )
    then PostError("ResOtherZn '%s' needs to be connected to a central exhaust ventilation system.", Name )
    else UNCHANGED
    endif endif endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then UNDEFINED ; ventilation provided by single-zone system
    else UNCHANGED
    endif
ENDRULE

RULE DwellUnitType:CentralVentSysRef
  CHECKSIM
    if( IAQOption = "Central Supply / Central Exhaust" .AND.
        IfValidAnd( CentralVentSysRef:Type != "Balanced" ) )
    then PostError("DwellUnitType '%s' needs to be connected to a balanced central ventilation system.", Name )
    else if( ( IAQOption = "Central Supply / Individual Exhaust" .OR.
               IAQOption = "Central Supply" ) .AND.
        IfValidAnd( CentralVentSysRef:Type != "Supply" ) )
    then PostError("DwellUnitType '%s' needs to be connected to a central supply ventilation system.", Name )
    else if( ( IAQOption = "Central Exhaust / Individual Supply" .OR.
               IAQOption = "Central Exhaust" ) .AND.
        IfValidAnd( CentralVentSysRef:Type != "Exhaust" ) )
    then PostError("DwellUnitType '%s' needs to be connected to a central exhaust ventilation system.", Name )
    else UNCHANGED
    endif endif endif
ENDRULE

// ---------- Fan flow rate ----------
RULE ResOtherZn:SupplyIAQFanCnt
  DEFAULT
    if( LocalCompAssigned( SupplyIAQFanRef ) )
    then 1
    else UNDEFINED
    endif
ENDRULE

RULE DwellUnitType:SupplyIAQFanCnt
  DEFAULT
    if( LocalCompAssigned( SupplyIAQFanRef ) )
    then 1
    else UNDEFINED
    endif
ENDRULE

RULE ResOtherZn:ExhaustIAQFanCnt
  DEFAULT
    if( LocalCompAssigned( ExhaustIAQFanRef ) )
    then 1
    else UNDEFINED
    endif
ENDRULE

RULE DwellUnitType:ExhaustIAQFanCnt
  DEFAULT
    if( LocalCompAssigned( ExhaustIAQFanRef ) )
    then 1
    else UNDEFINED
    endif
ENDRULE

RULE ResOtherZn:SupplyIAQCFM
  DEFAULT
    if( IAQOption = "Central Exhaust / Individual Supply" .AND.
        LocalCompAssigned( SupplyIAQFanRef ) )
    then SupplyIAQFanRef:IAQCFM * SupplyIAQFanCnt
    else 0
    endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then 0 ; ventilation provided by single-zone system
    else SupplyIAQCFM * ResZnGrp:CodeVentMult * ResZnGrp:ExhVentMult
    endif
ENDRULE

RULE DwellUnitType:SupplyIAQCFM
  DEFAULT
    if( IAQOption = "Central Exhaust / Individual Supply" .AND.
        LocalCompAssigned( SupplyIAQFanRef ) )
    then SupplyIAQFanRef:IAQCFM * SupplyIAQFanCnt
    else 0
    endif
  SIZING_BASELINE
    min( MinIAQCFM * 1.25, SupplyIAQCFM )
ENDRULE

RULE ResOtherZn:ExhaustIAQCFM
  DEFAULT
    if( IAQOption = "Central Supply / Individual Exhaust" .AND.
        LocalCompAssigned( ExhaustIAQFanRef ) )
    then ExhaustIAQFanRef:IAQCFM * ExhaustIAQFanCnt
    else 0
    endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then 0 ; ventilation provided by single-zone system
    else ExhaustIAQCFM * ResZnGrp:CodeVentMult * ResZnGrp:ExhVentMult
    endif
ENDRULE

RULE DwellUnitType:ExhaustIAQCFM
  DEFAULT
    if( IAQOption = "Central Supply / Individual Exhaust" .AND.
        LocalCompAssigned( ExhaustIAQFanRef ) )
    then ExhaustIAQFanRef:IAQCFM * ExhaustIAQFanCnt
    else 0
    endif
  SIZING_BASELINE
    min( MinIAQCFM * 1.25, ExhaustIAQCFM )
ENDRULE

RULE ResOtherZn:CentralSupplyCFM
  DEFAULT
    if( IAQOption = "Central Supply / Central Exhaust" .OR. 
        IAQOption = "Central Supply / Individual Exhaust" .OR. 
        IAQOption = "Central Supply" )
    then MinIAQCFM
    else if( IAQOption = "Central Exhaust / Individual Supply" )
    then SupplyIAQCFM ; Use CentralVentSys to model individual fans
    else 0
    endif endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then 0 ; ventilation provided by single-zone system
    else if( IAQOption = "Central Supply / Central Exhaust" .OR. 
             IAQOption = "Central Supply / Individual Exhaust" .OR.
             IAQOption = "Central Exhaust / Individual Supply" .OR. 
             IAQOption = "Central Supply" )
    then CentralSupplyCFM * ResZnGrp:CodeVentMult * ResZnGrp:ExhVentMult
    else 0
    endif endif
ENDRULE

RULE DwellUnitType:CentralSupplyCFM
  DEFAULT
    if( IAQOption = "Central Supply / Central Exhaust" .OR. 
        IAQOption = "Central Supply / Individual Exhaust" .OR. 
        IAQOption = "Central Supply" )
    then MinIAQCFM
    else if( IAQOption = "Central Exhaust / Individual Supply" )
    then SupplyIAQCFM ; Use CentralVentSys to model individual fans
    else 0
    endif endif
  SIZING_BASELINE
    min( MinIAQCFM * 1.25, CentralSupplyCFM )
ENDRULE

RULE ResOtherZn:CentralExhaustCFM
  DEFAULT
    if( IAQOption = "Central Supply / Central Exhaust" .OR.
        IAQOption = "Central Exhaust / Individual Supply" .OR.
        IAQOption = "Central Exhaust" )
    then MinIAQCFM
    else if( IAQOption = "Central Supply / Individual Exhaust" )
    then ExhaustIAQCFM
    else 0
    endif endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then 0 ; ventilation provided by single-zone system
    else if( IAQOption = "Central Supply / Central Exhaust" .OR.
             IAQOption = "Central Supply / Individual Exhaust" .OR.
             IAQOption = "Central Exhaust / Individual Supply" .OR.
             IAQOption = "Central Exhaust" )
    then CentralExhaustCFM * ResZnGrp:CodeVentMult * ResZnGrp:ExhVentMult
    else 0
    endif endif
ENDRULE

RULE DwellUnitType:CentralExhaustCFM
  DEFAULT
    if( IAQOption = "Central Supply / Central Exhaust" .OR.
        IAQOption = "Central Exhaust / Individual Supply" .OR.
        IAQOption = "Central Exhaust" )
    then MinIAQCFM
    else if( IAQOption = "Central Supply / Individual Exhaust" )
    then ExhaustIAQCFM
    else 0
    endif endif
  SIZING_BASELINE
    min( MinIAQCFM * 1.25, CentralExhaustCFM )
ENDRULE

RULE NEW DwellUnit:CentralSupplyCFMWithMult
  DATATYPE
    Float
  DESCRIPTION
    "Supply air flow rate from the central ventilation system with multiplier"
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned(DwellUnitTypeRef) )
    then DwellUnitTypeRef:CentralSupplyCFM * Count
    else 0
    endif
  SIZING_BASELINE
    DwellUnitTypeRef:CentralSupplyCFM * Count
ENDRULE

RULE NEW DwellUnit:CentralExhaustCFMWithMult
  DATATYPE
    Float
  DESCRIPTION
    "Exhaust air flow rate to the central ventilation system with multiplier"
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned(DwellUnitTypeRef) )
    then DwellUnitTypeRef:CentralExhaustCFM * Count
    else 0
    endif
  SIZING_BASELINE
    DwellUnitTypeRef:CentralExhaustCFM * Count
ENDRULE

RULE NEW DwellUnit:CentralVentSysRef
  DATATYPE
    ResCentralVentSys
  INPUTCLASS
    NotInput
  DEFAULT
    if( CentralSupplyCFMWithMult > 0 .OR. CentralExhaustCFMWithMult > 0 )
    then DwellUnitTypeRef:CentralVentSysRef
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResZn:CentralSupplyCFM
  DATATYPE
    Float
  DESCRIPTION
    "Supply air flow rate from the central ventilation system"
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren( DwellUnit:CentralSupplyCFMWithMult )
  SIZING_BASELINE
    SumChildren( DwellUnit:CentralSupplyCFMWithMult )
ENDRULE

RULE NEW ResZn:CentralExhaustCFM
  DATATYPE
    Float
  DESCRIPTION
    "Exhaust air flow rate to the central ventilation system"
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren( DwellUnit:CentralExhaustCFMWithMult )
  SIZING_BASELINE
    SumChildren( DwellUnit:CentralExhaustCFMWithMult )
ENDRULE

RULE ResZn:CentralVentSysRef
  DEFAULT
    if( CentralSupplyCFM > 0 .OR. CentralExhaustCFM > 0 )
    then ChildDwellUnitRef:CentralVentSysRef
    else UNDEFINED
    endif
  CHECKSIM
    if( ( CentralSupplyCFM > 0 .OR. CentralExhaustCFM > 0 ) .AND.
        NumUniqueChildVals( DwellUnit:CentralVentSysRef, 1 ) > 1 )
    then PostError( "The dwellUnits in ResZn '%s' are served by more than one central ventilation systems
                     or served by central system and individual fan at the same time which are not supported.", Name)
    else UNCHANGED
    endif
ENDRULE

RULE ResCentralVentSys:SupFanCap
  DEFAULT
    SumRevRef( ResZn:CentralVentSysRef, ResZn:CentralSupplyCFM ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:CentralSupplyCFM )
  SIZING_BASELINE
    SumRevRef( ResZn:CentralVentSysRef, ResZn:CentralSupplyCFM ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:CentralSupplyCFM )
ENDRULE

RULE ResCentralVentSys:ExhFanCap
  DEFAULT
    SumRevRef( ResZn:CentralVentSysRef, ResZn:CentralExhaustCFM ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:CentralExhaustCFM )
  SIZING_BASELINE
    SumRevRef( ResZn:CentralVentSysRef, ResZn:CentralExhaustCFM ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:CentralExhaustCFM )
ENDRULE

RULE NEW ResCentralVentSys:SupDURat
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DESCRIPTION
    "Supply to dwelling units ratio"
  SIZING_BASELINE
    if( SupFanCap > 0 )
    then SumRevRef( ResZn:CentralVentSysRef, ResZn:CentralSupplyCFM ) / SupFanCap
    else 0
    endif
ENDRULE

RULE NEW ResCentralVentSys:ExhDURat
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DESCRIPTION
    "Exhaust from dwelling units ratio"
  SIZING_BASELINE
    if( ExhFanCap > 0 )
    then SumRevRef( ResZn:CentralVentSysRef, ResZn:CentralExhaustCFM ) / ExhFanCap
    else 0
    endif
ENDRULE

// ---------- Fan power ----------
RULE NEW ResOtherZn:SupplyFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( IAQOption = "Central Exhaust / Individual Supply" .AND.
        LocalCompAssigned( SupplyIAQFanRef ) )
    then SupplyIAQFanRef:WPerCFMIAQ * SupplyIAQCFM else 0 endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then 0 ; ventilation provided by single-zone system
    else UNCHANGED
    endif
ENDRULE

RULE NEW DwellUnitType:SupplyFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( IAQOption = "Central Exhaust / Individual Supply" .AND.
        LocalCompAssigned( SupplyIAQFanRef ) )
    then SupplyIAQFanRef:WPerCFMIAQ * SupplyIAQCFM else 0 endif
  SIZING_PROPOSED
    if( IfValidAnd( IAQHasFID > 0 ) )
    then u:SupplyFanPwr
    else u:SupplyFanPwr * 1.1
    endif
  SIZING_BASELINE
    if( IfValidAnd( IAQSupInletsAccessible > 0 ) )
    then 0.35 * SupplyIAQCFM
    else min( 0.35 * SupplyIAQCFM, zp:SupplyFanPwr )
    endif
ENDRULE

RULE NEW ResOtherZn:ExhaustFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( IAQOption = "Central Supply / Individual Exhaust" .AND.
        LocalCompAssigned( ExhaustIAQFanRef ) )
    then ExhaustIAQFanRef:WPerCFMIAQ * ExhaustIAQCFM else 0 endif
  SIZING_BASELINE
    if( Type = "Conditioned" .AND. CondType = "Directly" )
    then 0 ; ventilation provided by single-zone system
    else UNCHANGED
    endif
ENDRULE

RULE NEW DwellUnitType:ExhaustFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( IAQOption = "Central Supply / Individual Exhaust" .AND.
        LocalCompAssigned( ExhaustIAQFanRef ) )
    then ExhaustIAQFanRef:WPerCFMIAQ * ExhaustIAQCFM else 0 endif
  SIZING_BASELINE
    if( IAQOption = "Central Supply / Individual Exhaust" .AND.
        LocalCompAssigned( ExhaustIAQFanRef ) )
    then 0.35 * ExhaustIAQCFM else 0 endif
ENDRULE

RULE NEW DwellUnit:SupplyFanPwrWithMult
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned(DwellUnitTypeRef) )
    then DwellUnitTypeRef:SupplyFanPwr * Count
    else UNDEFINED
    endif
  SIZING
    DwellUnitTypeRef:SupplyFanPwr * Count
ENDRULE

RULE NEW DwellUnit:ExhaustFanPwrWithMult
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned(DwellUnitTypeRef) )
    then DwellUnitTypeRef:ExhaustFanPwr * Count
    else UNDEFINED
    endif
  SIZING
    DwellUnitTypeRef:ExhaustFanPwr * Count
ENDRULE

RULE NEW ResZn:SupplyFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren( DwellUnit:SupplyFanPwrWithMult )
  SIZING
    SumChildren( DwellUnit:SupplyFanPwrWithMult )
ENDRULE

RULE NEW ResZn:ExhaustFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren( DwellUnit:ExhaustFanPwrWithMult )
  SIZING
    SumChildren( DwellUnit:ExhaustFanPwrWithMult )
ENDRULE

RULE NEW ResCentralVentSys:TotIndividualSupFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    SumRevRef( ResZn:CentralVentSysRef, ResZn:SupplyFanPwr ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:SupplyFanPwr )
  SIZING
    SumRevRef( ResZn:CentralVentSysRef, ResZn:SupplyFanPwr ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:SupplyFanPwr )
ENDRULE

RULE NEW ResCentralVentSys:TotIndividualExhFanPwr
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    SumRevRef( ResZn:CentralVentSysRef, ResZn:ExhaustFanPwr ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:ExhaustFanPwr )
  SIZING
    SumRevRef( ResZn:CentralVentSysRef, ResZn:ExhaustFanPwr ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:ExhaustFanPwr )
ENDRULE

RULE ResCentralVentSys:SupFanPwrIdx
  DEFAULT
    if( IfValidAnd( HXType != "None" ) )
    then 0.441 + 0.190 ; for Central w/ Heat Recovery
    else if( Type = "Balanced" .OR. Type = "Supply" )
    then 0.441 ; for Central Supply / Central Exhaust OR Central Supply / Individual Exhaust
    else if( SupFanCap > 0 )
    then TotIndividualSupFanPwr/SupFanCap ; for Central Exhaust / Individual Supply
    else 0 ; for Central Exhaust only
    endif endif endif
  SIZING_PROPOSED
    if( IfValidAnd( TotIndividualSupFanPwr > 0 ) )
    then TotIndividualSupFanPwr / SupFanCap
    else u:SupFanPwrIdx
    endif
  SIZING_BASELINE
    if( IfValidAnd( HXType != "None" ) )
    then SupDURat * ( 0.441 + 0.190 ) + ( 1 - SupDURat ) * SupFanPwrIdx ; for Central w/ Heat Recovery
    else if( Type = "Balanced" .OR. Type = "Supply" )
    then SupDURat * ( 0.441 ) + ( 1 - SupDURat ) * SupFanPwrIdx ; for Central Supply / Central Exhaust OR Central Supply / Individual Exhaust
    else if( SupFanCap > 0 ) 
    then TotIndividualSupFanPwr/SupFanCap ; for Central Exhaust / Individual Supply
    else 0 ; for Central Exhaust only
    endif endif endif
ENDRULE

RULE ResCentralVentSys:ExhFanPwrIdx
  DEFAULT
    if( IfValidAnd( HXType != "None" ) )
    then 0.302 + 0.165 ; for Central w/ Heat Recovery
    else if( Type = "Balanced" .OR. Type = "Exhaust" )
    then 0.302 ; for Central Supply / Central Exhaust OR Central Exhaust / Individual Supply
    else if( ExhFanCap > 0 )
    then TotIndividualExhFanPwr/ExhFanCap ; for Central Supply / Individual Exhaust
    else 0 ; for Central Supply only
    endif endif endif
  SIZING_BASELINE
    if( IfValidAnd( HXType != "None" ) )
    then ExhDURat * ( 0.302 + 0.165 ) + ( 1 - ExhDURat ) * ExhFanPwrIdx ; for Central w/ Heat Recovery
    else if( Type = "Balanced" .OR. Type = "Exhaust" )
    then ExhDURat * ( 0.302 ) + ( 1 - ExhDURat ) * ExhFanPwrIdx ; for Central Supply / Central Exhaust OR Central Exhaust / Individual Supply
    else if( ExhFanCap > 0 )
    then TotIndividualExhFanPwr/ExhFanCap ; for Central Supply / Individual Exhaust
    else 0 ; for Central Supply only
    endif endif endif    
ENDRULE

RULE ResCentralVentSys:Type
  DESCRIPTION
    "The residential central ventilation equipment configuration."
  INPUTCLASS
    Compulsory
  RESETS
    HXType
    TempCtrl
    EconoCtrlMthd
    SupFanPwrIdx
    ExhFanPwrIdx
  CHECKSIM
    if( EconoLockout = "Yes")
    then PostError("ResCentralVentSys '%s' has heat recovery with 'Economizer Lockout'.
                     This option not currently supported.", Name)
    else if( DefrostCtrl != "None")
    then PostError("ResCentralVentSys '%s' has heat recovery with 'Defrost Control'.
                     This option not currently supported.", Name)
    else if( TempCtrl = "Scheduled" .OR. TempCtrl = "OutsideAirReset" .OR. TempCtrl = "ScheduledDualSetpoint" )
    then PostError("ResCentralVentSys '%s' is using supply temperature control '%s'.
                     This option not currently supported.", Name, TempCtrl)
    else if( CoilClgType = "ChilledWater" )
    then PostError("ResCentralVentSys '%s' is using 'ChilledWater' coil.
                     This option not currently supported.", Name)
    else if( CoilHtgType = "HotWater" )
    then PostError("ResCentralVentSys '%s' is using 'HotWater' coil.
                     This option not currently supported.", Name)
    else if( EconoCtrlMthd != "NoEconomizer" )
    then PostError("ResCentralVentSys '%s' has economizer.
                     This option not currently supported.", Name)
    else UNCHANGED
    endif endif endif endif endif endif
ENDRULE

RULE ResCentralVentSys:TempCtrl
  RESETS
    CoilClgType
    CoilHtgType
  SIZING_BASELINE
    if( HasHXBypass = "Yes" )
    then "FixedDualSetpoint"
    else "NoSATControl"
    endif
ENDRULE

RULE ResCentralVentSys:ClgFixedSupTemp
  SIZING_BASELINE
    if( HasHXBypass = "Yes" )
    then if( Proj:CliZnNum =  1 .OR.
             Proj:CliZnNum =  3 .OR.
             Proj:CliZnNum =  5 .OR.
             Proj:CliZnNum = 11 .OR.
             Proj:CliZnNum = 12 .OR.
             Proj:CliZnNum = 13 .OR.
             Proj:CliZnNum = 14 .OR.
             Proj:CliZnNum = 15 .OR.
             Proj:CliZnNum = 16 )
         then 75
         else
         if( Proj:CliZnNum =  2 .OR.
             Proj:CliZnNum =  4 .OR.
             Proj:CliZnNum = 10 )
         then 73
         else 
         if( Proj:CliZnNum =  6 .OR.
             Proj:CliZnNum =  8 .OR.
             Proj:CliZnNum =  9 )
         then 71
         else 69
         endif endif endif
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:HtgFixedSupTemp
  SIZING_BASELINE
    if( HasHXBypass = "Yes" )
    then 68
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:EconoCtrlMthd
  SIZING_BASELINE
    "NoEconomizer"
ENDRULE

RULE NEW ResCentralVentSys:TempCtrlErrMsg
  DESCRIPTION
    "Residential central ventilation system screen error message"
  DATATYPE
    String
  LONGFORM
    TemperatureControlErrorMessage
  INPUTCLASS
    NotInput
  DEFAULT
    if( TempCtrl = "Scheduled" .OR. TempCtrl = "OutsideAirReset" .OR. TempCtrl = "ScheduledDualSetpoint" )
    then "*Selected control option is not supported."
    else if( CoilClgType = "ChilledWater" )
    then "*'ChilledWater' coil is not supported."
    else if( CoilHtgType = "HotWater" )
    then "*'HotWater' coil is not supported."
    else ""
    endif endif endif
ENDRULE

RULE ResCentralVentSys:NumUIDialogTabs
  DEFAULT
    3
ENDRULE

// -----------------------------------------------------------------------------
// Heat Recovery
// -----------------------------------------------------------------------------
RULE ResCentralVentSys:HtRcvrySupFlowRtd
  DEFAULT
    if( IfValidAnd( HXType != "None" ) )
    then SupFanCap
    else UNDEFINED
    endif
  SIZING
    if( IfValidAnd( HXType != "None" ) )
    then SupFanCap
    else UNDEFINED
    endif
ENDRULE

RULE NEW ResCentralVentSys:ImbalFlowWarn
  DATATYPE
    String
  LONGFORM
    ImbalanceFlowWarning
  INPUTCLASS
    NotInput
  DEFAULT
    if( SupFanCap > 0 )
    then if( ( ExhFanCap / SupFanCap ) > 1.3 )
         then "!Exhaust air to Supply air flow ratio is greater than 1.3!"
         else if( ( ExhFanCap / SupFanCap ) < 0.5 ) 
         then "!Supply air to Exhaust air flow ratio is greater than 2!"
         else ""
         endif endif
    else ""
    endif
ENDRULE

RULE ResCentralVentSys:SensHtRcvryEff
  DEFAULT
    if( IfValidAnd( HtRcvryCertification = "HVI" ) )
    then 0.67
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:AdjSensHtRcvryEff
  DEFAULT
    if( IfValidAnd( HtRcvryCertification = "HVI" ) )
    then 0.67
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:RcvryType
  CHECKSIM
    if( RcvryType = "LatentOnly" )
    then
      PostError("ResCentralVentSys '%s' has RecoveryType 'LatentOnly'.
                 This option is not longer supported.", Name)
    else UNCHANGED
    endif 
  SIZING_BASELINE
    if( HXType != "None" )
    then "SensibleOnly"
    else UNDEFINED
    endif
ENDRULE
// 100% Flow - Heating
RULE ResCentralVentSys:HtgSensEff100
  DESCRIPTION
    "The sensible heat exchange effectiveness at heating condition 
     with both the supply and exhaust air volume flow rates equal to 100%."
  DEFAULT
    if( RcvryType = "Total" )
    then 0.69
    else if( RcvryType = "SensibleOnly" )
    then 0.61
    else 0
    endif endif
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then AdjSensHtRcvryEff
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then 0.67
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:HtgLatEff100
  DESCRIPTION
    "The latent heat exchange effectiveness at heating condition 
     with both the supply and exhaust air volume flow rates equal to 100%."
  DEFAULT
    if( RcvryType = "Total" )
    then 0.54
    else if( RcvryType = "LatentOnly" )
    then 0.50
    else 0
    endif endif
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then 0
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then 0
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:HtgTotEff100
  DESCRIPTION
    "The total heat exchange effectiveness at heating condition 
     with both the supply and exhaust air volume flow rates equal to 100%."
  DEFAULT
    if( RcvryType = "Total" )
    then 0.64
    else if( RcvryType = "SensibleOnly" )
    then 0.41
    else if( RcvryType = "LatentOnly" )
    then 0.35
    else 0
    endif endif endif
ENDRULE

// 100% Flow - Cooling
RULE ResCentralVentSys:ClgSensEff100
  DESCRIPTION
    "The sensible heat exchange effectiveness at cooling condition 
     with both the supply and exhaust air volume flow rates equal to 100%."
  DEFAULT
    if( RcvryType = "Total" )
    then 0.69
    else if( RcvryType = "SensibleOnly" )
    then 0.59
    else 0
    endif endif
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then AdjSensHtRcvryEff
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then 0.67
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:ClgLatEff100
  DESCRIPTION
    "The latent heat exchange effectiveness at cooling condition 
     with both the supply and exhaust air volume flow rates equal to 100%."
  DEFAULT
    if( RcvryType = "Total" )
    then 0.43
    else if( RcvryType = "LatentOnly" )
    then 0.45
    else 0
    endif endif
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then 0
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then 0
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:ClgTotEff100
  DESCRIPTION
    "The latent heat exchange effectiveness at cooling condition 
     with both the supply and exhaust air volume flow rates equal to 100%."
  DEFAULT
    if( RcvryType = "Total" )
    then 0.69
    else if( RcvryType = "SensibleOnly" )
    then 0.43
    else if( RcvryType = "LatentOnly" )
    then 0.30
    else 0
    endif endif endif
ENDRULE

// 75% Flow - Heating
RULE ResCentralVentSys:HtgSensEff75
  DESCRIPTION
    "The sensible heat exchange effectiveness at heating condition 
     with both the supply and exhaust air volume flow rates equal to 75%."
  DEFAULT
    if( IfValidAnd( HtgSensEff100 > 0 ) )
    then HtgSensEff100 + 0.03 // Estimate
    else 0
    endif  
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then AdjSensHtRcvryEff
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then HtgSensEff100
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:HtgLatEff75
  DESCRIPTION
    "The latent heat exchange effectiveness at heating condition 
     with both the supply and exhaust air volume flow rates equal to 75%."
  DEFAULT
    if( IfValidAnd( HtgLatEff100 > 0 ) )
    then HtgLatEff100 + 0.03 // Estimate
    else 0
    endif  
  SIZING_BASELINE
    if( HXType != "None" )
    then 0
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:HtgTotEff75
  DESCRIPTION
    "The total heat exchange effectiveness at heating condition 
     with both the supply and exhaust air volume flow rates equal to 75%."
  DEFAULT
    if( IfValidAnd( HtgTotEff100 > 0 ) )
    then HtgTotEff100 + 0.03 // Estimate
    else 0
    endif  
ENDRULE

// 75% Flow - Cooling
RULE ResCentralVentSys:ClgSensEff75
  DESCRIPTION
    "The sensible heat exchange effectiveness at cooling condition 
     with both the supply and exhaust air volume flow rates equal to 75%."
  DEFAULT
    if( IfValidAnd( ClgSensEff100 > 0 ) )
    then ClgSensEff100 + 0.03 // Estimate
    else 0
    endif  
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then AdjSensHtRcvryEff
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then ClgSensEff100
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:ClgLatEff75
  DESCRIPTION
    "The latent heat exchange effectiveness at cooling condition 
     with both the supply and exhaust air volume flow rates equal to 75%."
  DEFAULT
    if( IfValidAnd( ClgLatEff100 > 0 ) )
    then ClgLatEff100 + 0.03 // Estimate
    else 0
    endif
  SIZING_PROPOSED
    if( HtRcvryCertification = "HVI" )
    then 0
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( HXType != "None" )
    then 0
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:ClgTotEff75
  DESCRIPTION
    "The total heat exchange effectiveness at cooling condition 
     with both the supply and exhaust air volume flow rates equal to 75%."
  DEFAULT
    if( IfValidAnd( ClgTotEff100 > 0 ) )
    then ClgTotEff100 + 0.03 // Estimate
    else 0
    endif
ENDRULE

RULE ResCentralVentSys:DefrostCtrl
  DESCRIPTION
    "Heat exchanger defrost control method."
  HELP
    "There are four heat exchanger defrost control method: None, 
     ExhaustAirRecirculation, ExhaustOnly, and MinimumExhaustTemperature."
  DEFAULT
    "None"
ENDRULE

RULE ResCentralVentSys:DefrostCtrlTemp
  DESCRIPTION
    "The numeric field defines T_db of air which is used to initiate 
     frost control."
  HELP
    "For ExhaustAirRecirculation and ExhaustOnly frost control, the threshold
     temperature defines the supply air inlet temperature below which 
     frost control is active. "
  DEFAULT
    if( DefrostCtrl = "ExhaustAirRecirculation" .OR.
        DefrostCtrl = "ExhaustOnly" )
    then 40
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:DefrostTimeFrac
  DESCRIPTION
    "This numeric field defines the fraction of simulation timestep 
    when frost control will be invoked when the threhold temperature 
    is reached."
  HELP
    "Only applicable when DefrostControl = 'ExhaustAirRecirculation'
     and 'ExhaustOnly'."
  DEFAULT
    if( DefrostCtrl = "ExhaustAirRecirculation" .OR.
        DefrostCtrl = "ExhaustOnly" )
    then 0.083
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:DefrostTimeFracRt
  DESCRIPTION
    "This numeric field defines the rate of increase in the defrost 
     time fraction as the supply air inlet temperature falls below the
     threhold temperature."
  HELP
    "Only applicable when DefrostControl = 'ExhaustAirRecirculation'
     and 'ExhaustOnly'."
  DEFAULT
    if( DefrostCtrl = "ExhaustAirRecirculation" .OR.
        DefrostCtrl = "ExhaustOnly" )
    then 0.012
    else UNDEFINED
    endif
ENDRULE

RULE ResCentralVentSys:EconoLockout
  DESCRIPTION
    "This field denotes whether the heat exchanger is locked out when
     economizer is operating."
  CHECKCODE
    if( HXType = "Plate" .AND. HasHXBypass = "No" .AND. EconoLockout = "Yes" )  
    then
      PostWarning("HeatRecovery '%s' is a 'Plate' heat exchanger with no bypass.
                   Heat exchanger lockout with economizer will not be simulated.",
                  Name)
    else UNCHANGED
    endif
ENDRULE

RULE ResCentralVentSys:AuxPwr
  DESCRIPTION
    "The electric consumption rate of heat exchanger unit."
  HELP
    "This energy is not added to the air stream."
  DEFAULT
    0
ENDRULE
// -----------------------------------------------------------------------------
// Heating & Cooling Coils
// -----------------------------------------------------------------------------
RULE ResCentralVentSys:CoilClgType
    CHECKSIM
      if( CoilHtgType = "HeatPump" .AND. CoilClgType != "DirectExpansion" )
      then PostError( "HeatPump heating coil is specified in Central ventilation system
                       '%s' but without a DirectExpansion cooling coil, and this is not 
                       supported.", Name )
      else UNCHANGED
      endif
ENDRULE
RULE ResCentralVentSys:UnitaryCat
  DEFAULT
    if( CoilClgType = "DirectExpansion" .AND. CoilHtgType = "HeatPump" )
    then "HP"
    else if( CoilClgType = "DirectExpansion" )
    then "AC"
    else "NA"
    endif endif
ENDRULE
RULE ResCentralVentSys:IsSEER
  DEFAULT
    0
ENDRULE
RULE ResCentralVentSys:EffMetric
  DEFAULT
    if( IsSEER > 0 )
    then Proj:EffMetric
    else "SEER/EER/HSPF"
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinSEER2
  DEFAULT
    if( CoilClgType = "DirectExpansion" .AND. IsSEER > 0 .AND. EffMetric = "SEER2/EER2/HSPF2" )
    then UnitaryACHPMinEffReq:SEER2( "StandardsVersion", Proj:StdsVersion,
                                     "Category", UnitaryCat,
                                     "SubCategory", CoilSubType,
                                     "CondenserType", "Air",
                                     "SizeCategory", 44999 )
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinSEER
  DEFAULT
    if( CoilClgType = "DirectExpansion" .AND. IsSEER > 0 .AND. EffMetric = "SEER/EER/HSPF" )
    then UnitaryACHPMinEffReq:SEER( "StandardsVersion", Proj:StdsVersion,
                                     "Category", UnitaryCat,
                                     "SubCategory", CoilSubType,
                                     "CondenserType", "Air",
                                     "SizeCategory", 44999 )
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinEER2
  DEFAULT
    if( CoilClgType = "DirectExpansion" .AND. EnumValue ( EffMetric ) = 2 )
    then if( IfValidAnd( SEER2 >= 15.2 ) )
         then UnitaryACHPMinEffReq:EER2b( "StandardsVersion", Proj:StdsVersion,
                                          "Category", UnitaryCat,
                                          "SubCategory", CoilSubType,
                                          "CondenserType", "Air",
                                          "SizeCategory", 44999 )
         else UnitaryACHPMinEffReq:EER2a( "StandardsVersion", Proj:StdsVersion,
                                          "Category", UnitaryCat,
                                          "SubCategory", CoilSubType,
                                          "CondenserType", "Air",
                                          "SizeCategory", 44999 )
         endif
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinEER
  DEFAULT
    if( CoilClgType = "DirectExpansion" .AND. EffMetric = "SEER/EER/HSPF" )
    then if( IsSEER > 0 )
         then UnitaryACHPMinEffReq:EER( "StandardsVersion", Proj:StdsVersion,
                                        "Category", UnitaryCat,
                                        "SubCategory", CoilSubType,
                                        "CondenserType", "Air",
                                        "SizeCategory", 44999 )
         else UnitaryACHPMinEffReq:EER( "StandardsVersion", Proj:StdsVersion,
                                        "Category", UnitaryCat,
                                        "SubCategory", CoilSubType,
                                        "CondenserType", "Air",
                                        "SizeCategory", 65000 )
         endif
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinHSPF2
  DEFAULT
    if( CoilHtgType = "HeatPump" .AND. IsSEER > 0 .AND. EffMetric = "SEER2/EER2/HSPF2" )
    then UnitaryACHPMinEffReq:HSPF2( "StandardsVersion", Proj:StdsVersion,
                                     "Category", UnitaryCat,
                                     "SubCategory", CoilSubType,
                                     "CondenserType", "Air",
                                     "SizeCategory", 64999 )
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinHSPF
  DEFAULT
    if( CoilHtgType = "HeatPump" .AND. IsSEER > 0 .AND. EffMetric = "SEER/EER/HSPF" )
    then UnitaryACHPMinEffReq:HSPF( "StandardsVersion", Proj:StdsVersion,
                                    "Category", UnitaryCat,
                                    "SubCategory", CoilSubType,
                                    "CondenserType", "Air",
                                    "SizeCategory", 64999 )
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:CodeMinCOP47
  DEFAULT
    if( CoilHtgType = "HeatPump" .AND. IsSEER = 0 )
    then UnitaryACHPMinEffReq:COP47( "StandardsVersion", Proj:StdsVersion,
                                    "Category", UnitaryCat,
                                    "SubCategory", "*",
                                    "CondenserType", "Air",
                                    "SizeCategory", 65000 )
    else UNDEFINED
    endif
ENDRULE
RULE NEW ResCentralVentSys:SEERToSEER2Rat
  DATATYPE
    Float
  DESCRIPTION
    "The ratio of SEER2/SEER for a given equipment type."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( CodeMinSEER2 > 0 ) )
    then UnitaryACHPMinEffReq:SEERToSEER2Rat( "StandardsVersion", Proj:StdsVersion,
                                              "Category", UnitaryCat,
                                              "SubCategory", CoilSubType,
                                              "CondenserType", "Air", 
                                              "SizeCategory", 44999 )
    else UNDEFINED
    endif
ENDRULE
RULE NEW ResCentralVentSys:EERToEER2Rat
  DATATYPE
    Float
  DESCRIPTION
    "The ratio of EER2/EER for a given equipment type."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( CodeMinEER2 > 0 ) )
    then 0.96
    else UNDEFINED
    endif
ENDRULE
RULE NEW ResCentralVentSys:HSPFToHSPF2Rat
  DATATYPE
    Float
  DESCRIPTION
    "The ratio of HSPF2/HSPF for a given equipment type."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( HSPF2 > 0 ) )
    then UnitaryACHPMinEffReq:HSPFToHSPF2Rat( "StandardsVersion", Proj:StdsVersion,
                                              "Category", UnitaryCat,
                                              "SubCategory", CoilSubType,
                                              "CondenserType", "Air", 
                                              "SizeCategory", 64999 )
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:SEER2
  DEFAULT
    if( IfValidAnd( CodeMinSEER2 > 0 ) )
    then CodeMinSEER2
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:SEER
  DEFAULT
    if( IfValidAnd( CodeMinSEER > 0 ) )
    then CodeMinSEER
    else UNDEFINED
    endif
  SIZING
    if( EffMetric = "SEER2/EER2/HSPF2" .AND. IfValidAnd( SEER2 > 0 ) .AND. IfValidAnd( SEERToSEER2Rat > 0 ) )
    then SEER2 / SEERToSEER2Rat
    else UNCHANGED
    endif
ENDRULE
RULE ResCentralVentSys:EER2
  DEFAULT
    if( IfValidAnd( CodeMinEER2 > 0 ) )
    then CodeMinEER2
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:EER
  DEFAULT
    if( IfValidAnd( CodeMinEER > 0 ) )
    then CodeMinEER
    else UNDEFINED
    endif
  SIZING
    if( EffMetric = "SEER2/EER2/HSPF2" .AND. IfValidAnd( EER2 > 0 ) .AND. IfValidAnd( EERToEER2Rat > 0 ) )
    then EER2 / EERToEER2Rat
    else if(EffMetric = "SEER2/EER2/HSPF2" .AND. IfValidAnd( SEER2 > 0 ) .AND. IfValidAnd( SEERToSEER2Rat > 0 ) )
    then Min( 13, ( -0.0194 * ( SEER2 / SEERToSEER2Rat )**2 ) + ( 1.0864 * ( SEER2 / SEERToSEER2Rat ) ) )
    else if( IfValidAnd( EER > 0 ) )
    then UNCHANGED
    else if( IfValidAnd( SEER > 0 ) )
    then Min( 13, ( -0.0194 * SEER**2 ) + ( 1.0864 * SEER ) )
    else UNCHANGED
    endif endif endif endif
ENDRULE
RULE ResCentralVentSys:HSPF2
  DEFAULT
    if( IfValidAnd( CodeMinHSPF2 > 0 ) )
    then CodeMinHSPF2
    else UNDEFINED
    endif
ENDRULE
RULE ResCentralVentSys:HSPF
  DEFAULT
    if( IfValidAnd( CodeMinHSPF > 0 ) )
    then CodeMinHSPF
    else UNDEFINED
    endif
SIZING
    if( EffMetric = "SEER2/EER2/HSPF2" .AND. IfValidAnd( HSPF2 > 0 ) .AND. IfValidAnd( HSPFToHSPF2Rat > 0 ) )
    then HSPF2 / HSPFToHSPF2Rat
    else UNCHANGED
    endif
ENDRULE
RULE ResCentralVentSys:COP47
  DEFAULT
    if( IfValidAnd( CodeMinCOP47 > 0 ) )
    then CodeMinCOP47
    else UNDEFINED
    endif
  SIZING
    if( IfValidAnd( COP47 > 0 ) )
    then UNCHANGED
    else if( EffMetric = "SEER2/EER2/HSPF2" .AND. IfValidAnd( HSPF2 > 0 ) .AND. IfValidAnd( HSPFToHSPF2Rat > 0 ) )
    then ( 0.2778 * ( HSPF2 / HSPFToHSPF2Rat ) ) + 0.9667
    else if( IfValidAnd( HSPF > 0 ) )
    then ( 0.2778 * HSPF ) + 0.9667
    else UNCHANGED
    endif endif endif
ENDRULE
// -----------------------------------------------------------------------------
// ------------------ Default ResHVACSys Properties ----------------------------
// -----------------------------------------------------------------------------

RULE ResHVACSys:HVACCentralRef
  CHECKSIM
    if( Type = "Central Heating and Cooling System" .AND. LocalCompAssigned( HVACCentralRef ) == 0 )
    then PostError("The central heating and cooling system of ResHVACSys '%s' must be defined", Name)
    else UNCHANGED
    endif
ENDRULE

RULE ResHVACSys:HaveHeating
  DEFAULT
    if( Type = "Central Heating and Cooling System" .AND. LocalCompAssigned( HVACCentralRef ) )
    then 1
    else UNCHANGED
    endif
ENDRULE

RULE ResHVACSys:HaveCooling
  DEFAULT
    if( Type = "Central Heating and Cooling System" .AND. LocalCompAssigned( HVACCentralRef ) )
    then if( HVACCentralRef:Type = "Hydronic heating only" )
         then 0
         else 1
         endif
    else UNCHANGED
    endif
ENDRULE

RULE ResHVACSys:HtOrClDucted
  DEFAULT
    if( Type = "Central Heating and Cooling System" .AND. LocalCompAssigned( HVACCentralRef ) )
    then 0
    else UNCHANGED
    endif
ENDRULE

RULE ResHVACSys:ConstHtgSetpt
  DEFAULT
    if( Type = "Central Heating and Cooling System" )
    then -1
    else UNCHANGED
    endif
ENDRULE

RULE ResHVACSys:DuctMsg
  DEFAULT
    if( Type = "Central Heating and Cooling System" )
    then ""
    else UNCHANGED
    endif
ENDRULE

RULE NEW ResHVACSys:HWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( LocalCompAssigned( HVACCentralRef:HWFluidSysRef ) )
    then HVACCentralRef:HWFluidSysRef
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:ChWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( LocalCompAssigned( HVACCentralRef:ChWFluidSysRef ) )
    then HVACCentralRef:ChWFluidSysRef
    else UNDEFINED endif
ENDRULE

RULE NEW ResHVACSys:CWFluidSysRef
  DATATYPE
    FluidSys
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( LocalCompAssigned( HVACCentralRef:CWFluidSysRef ) )
    then HVACCentralRef:CWFluidSysRef
    else UNDEFINED endif
ENDRULE
// -----------------------------------------------------------------------------
// --------------------- Default Analysis Method -------------------------------
// -----------------------------------------------------------------------------

RULE NEW Proj:SimResZnInEnergyPlus
  DATATYPE
    Integer
  INPUTCLASS
    OPTIONAL
  DEFAULT
    0
ENDRULE

// -----------------------------------------------------------------------------
// --------------------------- Set Up Flags ------------------------------------
// -----------------------------------------------------------------------------

RULE NEW ResOtherZn:IsCentralHtgClg
  DATATYPE
    Integer
  LONGFORM
    IsCentralHeatingCooling
  DESCRIPTION
    "Whether the resdential zone is served by a central heating/cooling system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( ozHVACSystem:Type = "Central Heating and Cooling System" ) )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ResOtherZn:IsCentralVent
  DATATYPE
    Integer
  LONGFORM
    IsCentralVentilating
  DESCRIPTION
    "Whether the resdential zone is served by a central ventilation system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IAQOption = "Central Supply / Central Exhaust" .OR.
        IAQOption = "Central Supply / Individual Exhaust".OR.
        IAQOption = "Central Exhaust / Individual Supply".OR.
        IAQOption = "Central Supply".OR.
        IAQOption = "Central Exhaust" )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ResOtherZn:SimInEnergyPlus
  DATATYPE
    Integer
  LONGFORM
    SimulateInEnergyPlus
  INPUTCLASS
    Default
  DEFAULT
//    if( IsCentralHtgClg = 1 .OR. IsCentralVent = 1 )
//    then Proj:ResCentralHVACSimMethod
//    else UNDEFINED
//    endif
    Proj:SimResZnInEnergyPlus
ENDRULE  

RULE NEW ResZn:IsCentralHtgClg
  DATATYPE
    Integer
  LONGFORM
    IsCentralHeatingCooling
  DESCRIPTION
    "Whether the Resdential zone is served by a central heating/cooling system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( MaxChild( DwellUnit:DwellUnitTypeRef:HVACSysTypeAbbrev ) == 4 )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ResZn:IsCentralVent
  DATATYPE
    Integer
  LONGFORM
    IsCentralVentilating
  DESCRIPTION
    "Whether the resdential zone is served by a central ventilation system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( CentralVentSysRef ) )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ResZn:SimInEnergyPlus
  DATATYPE
    Integer
  LONGFORM
    SimulateInEnergyPlus
  INPUTCLASS
    Default
  DEFAULT
//    if( IsCentralHtgClg = 1 .OR. IsCentralVent = 1 )
//    then Proj:ResCentralHVACSimMethod
//    else UNDEFINED
//    endif
    Proj:SimResZnInEnergyPlus
ENDRULE  

RULE ResCentralVentSys:FloorAreaServed
  DEFAULT
    SumRevRef( ResZn:CentralVentSysRef, ResZn:FloorArea ) +
    SumRevRef( ResOtherZn:CentralVentSysRef, ResOtherZn:Area )
ENDRULE




