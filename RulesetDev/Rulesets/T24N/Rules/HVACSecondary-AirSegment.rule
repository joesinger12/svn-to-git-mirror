// AirSystem - AirSegments
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALifORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN if
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------


//  This rule file addresses the following building descriptors:



// ----------- Type ------------------------------------------------------------
RULE AirSeg:Type
  DESCRIPTION
    "A high-level descriptor of the AirSegments purpose."
  HELP
    "Used to validate data model connections and relationships of in AirSystems."
  INPUTCLASS 
    Compulsory
// Enums defined in BEMEnums.txt since property referenced by Library object
;  OPTION
;   - specify -
;   Supply
;   Return
;   Relief
;   Exhaust
;   OutsideAir // Not currently supported
;   Connector // Not currently supported
;   DualDuctSplitter // Not currently supported
;   MakeupAir // Not currently supported
  DEFAULT
    if( ChildIndex ( 1 ) = 1 )
    then // This is the first child of the parent AirSys
      if( Parent( Type ) != "Exhaust" )
      then "Supply"
      else "Exhaust"
      endif
    else if( IfValidAnd( AirSys:IsAllOA > 0 ) )
    then "Exhaust"
    else "Return"
    endif endif    
; SIZING    
// AirSeg:Type for baseline systems defined in Library_HVAC file
  CHECKSIM
    if( Type = "Exhaust" .AND.
        AirSys:IsExhSys = 0 .AND. 
        AirSys:IsAllOA = 0 )
    then 
      PostError("AirSegment '%s' is Type = 'Exhaust', but the parent AirSystem:Type
                 is not specified as 'Exhaust' or is not 100% OA. This is not allowed.
                 Possible alternate configurations include a) model as a separate
                 Type = 'Exhaust' system, b) revise system to be 100% OA so all air
                 returned to the air handler is exhausted, or c) revise to 
                 Type = 'Relief' if the system has relief fans.",
                 Name)
    else
    if( Type != "Exhaust" .AND. 
        AirSys:IsExhSys > 0 .AND. 
        AirSys:AirSegCnt <= 1 )
    then 
      PostError("AirSegment '%s' is Type = '%s'. For Exhaust AirSystems with only
                 one AirSegment, the Type must be 'Exhaust'.",
                 Name, Type)
    else
    if( AirSys:ServesResZn > 0 .AND. 
        Type != "Supply" .AND. Type != "Return" ) 
    then 
        PostError("AirSegment '%s' is part a system that serves a ResidentialOtherZone.
                   Only Type = 'Supply' and 'Return' are supported.", Name)
    else UNCHANGED
    endif endif endif
  SIZING
    if( ( AirSys:Type = "DOASCV" .OR. AirSys:Type = "DOASVAV" ) .AND.
          Type = "Exhaust" )
    then // Change to return so fan is simulated in AirLoopHVAC 
     "Return"
    else UNCHANGED
    endif
  ANNUAL
    z:Type
ENDRULE


// ********** Status ***********************************************************
RULE NEW AirSeg:IsNew
  DATATYPE
    Integer
  DESCRIPTION
    "The status of the system or component, used for additions and alterations."
  INPUTCLASS 
    NotInput
  DEFAULT
// Status defined from top-down. If parent system is 'New;, 'Altered', or 
// 'Existing' with hydronic coils served by a new plant, the 
//  the coil is 'New'.
    if( Parent( IsNew ) ) then 1 else 0 endif
// Status defined from bottom-up
;   if( ( SumChildren( CoilClg:IsExisting ) + 
;         SumChildren( CoilHtg:IsExisting ) + 
;         SumChildren( Fan:IsExisting ) ) > 0 )
;   then 1 // System includes some existing components
;   else 0 // All AirSeg components are New
;   endif
  SIZING
    if( Parent( IsNew ) ) then 1 else 0 endif
  ANNUAL
    z:IsNew   
ENDRULE

RULE NEW AirSeg:IsExisting
  DATATYPE
    Integer
  DESCRIPTION
    "The status of the system or component, used for additions and alterations."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( IsNew ) then 0 else 1 endif
  SIZING
    if( IsNew ) then 0 else 1 endif
  ANNUAL
    z:IsExisting  
ENDRULE

RULE NEW AirSeg:IsFuture
  DATATYPE
    Integer
  DESCRIPTION
    "The status of the system or component, used for additions and alterations."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( Parent( IsFuture ) ) then 1 else 0 endif 
ENDRULE


// ----------- Path ------------------------------------------------------------
RULE AirSeg:Path
  DESCRIPTION
    "The path of air flow to/from the zone."
  HELP
    "Used to validate data model connections and relationships of in AirSystems."
  REFERENCE
    NACM Section 5.7.3.2
    NACM Section 5.7.3.3
  INPUTCLASS 
    Default
  OPTION
    NotApplicable
    Direct
    Ducted
    PlenumZones
  DEFAULT : T24N_2016
    "Ducted"
  DEFAULT
    if( Type = "Supply" )
    then "Ducted"
    else if( Type = "Return" )
    then "Direct"
    else "NotApplicable"
    endif endif
  SIZING
    if( BaseSysNum > 0 .AND. LocalStatus( Path ) = 0 )
    then
      if( Type = "Supply" )
      then "Ducted"
      else if( Type = "Return" )
      then "Direct"
      else "NotApplicable"
      endif endif
    else Path 
    endif
  ANNUAL
    z:Path
ENDRULE


// ----------- Source ------------------------------------------------------------
;RULE AirSeg:Src
;  DESCRIPTION
;    ""
;  HELP
;    ""
;  INPUTCLASS 
;    Optional
;  OPTION
;    NotApplicable
;    AirSystem
;    OutsideAir
;    ZoneAir
;ENDRULE


// Rules to default AirSeg references and plenum relationships
// Supply 
RULE NEW AirSeg:SupAirSegIdx
  DATATYPE
    Integer
  LONGFORM
    SupplyAirSegmentIndex
  INPUTCLASS 
    NotInput
  DEFAULT
    if( Type = "Supply" )
    then ChildIndex( 1 ) 
    else 0
    endif
ENDRULE
RULE AirSys:SupAirSegRef
  INPUTCLASS 
    NotInput
  DEFAULT
    if( IfValidAnd( MaxChild( AirSeg:SupAirSegIdx ) > 0 ) )
    then ChildRef( AirSeg:Name, MaxChild( AirSeg:SupAirSegIdx ) )
    else UNDEFINED
    endif
  CHECKSIM
    if( Type != "Exhaust" .AND. LocalCompAssigned( SupAirSegRef ) = 0 )
    then
      PostError("AirSystem '%s' does not have a supply AirSegment.", Name )
    else UNCHANGED
    endif
ENDRULE 


// Return side
RULE NEW AirSeg:RetAirSegIdx
  DATATYPE
    Integer
  LONGFORM
    SupplyAirSegmentIndex
  INPUTCLASS 
    NotInput
  DEFAULT
    if( Type = "Return" .OR. Type = "Relief" )
    then ChildIndex( 1 ) 
    else 0
    endif
ENDRULE 
RULE AirSys:RetAirSegRef
  INPUTCLASS 
    NotInput
  DEFAULT
    if( IfValidAnd( MaxChild( AirSeg:RetAirSegIdx ) > 0 ) )
    then ChildRef( AirSeg:Name, MaxChild( AirSeg:RetAirSegIdx ) ) 
    else UNDEFINED
    endif
  CHECKSIM
    if( IsExhSys = 0 .AND. 
        SysOARat < 0.99 .AND. IsAllOA = 0 .AND. 
        LocalCompAssigned( RetAirSegRef ) = 0 )
    then
      PostError("AirSystem '%s' does not have a return AirSegment.", Name )
    else UNCHANGED
    endif
ENDRULE

// Parent AirSys
RULE NEW AirSeg:ParentAirSysRef
  DATATYPE
    AirSystem
  LONGFORM
    ParentAirSystemReference
  DESCRIPTION
    "Reference to the AirSegment's parent AirSys object."
  INPUTCLASS
    NotInput
  DEFAULT
    Parent( Name )
  ANNUAL
    Parent( Name )
ENDRULE 



