// ThermalZone - Zone Level Controls/Setpoints
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  

//  This rule file addresses the following building descriptors:
//  Section 5.6.1  
//      Control System Type
//      Space Thermostat Throttling Range
//      Space Temperature Schedule


          
// ---------- Section 5.6.1 - Space Temperature Control ------------------------
// ********** Space Thermostat Throttling Range ********************************
RULE ThrmlZn:ThrtlgRng
  DESCRIPTION
    "The number of degrees that the room temperature must change for the
     thermostat to indicate the zone needs heating or cooling; i.e. the deadband
     around the setpoint temperature."
  HELP
    "The setpoint deadband is defined as the setpoint temperature plus or minus
     one half the throttling range. This should not be confused with the deadband
     that typically exists between the heating and cooling setpoints."
  REFERENCE 
    NACM Section 5.6.1
  INPUTCLASS 
    NotInput  
  UNITS 
    °F
  DEFAULT 
    2.0
  SIZING : T24N_2016
    if( IsCond > 0 )
    then 2.0
    else UNDEFINED
    endif
  SIZING
    if( IsCond > 0 )
    then // 2x the unmet load hour temperature tolerance.
      Max( ValidOr( Proj:ClgUnmetLdHrTol, 0 ), 
           ValidOr( Proj:HtgUnmetLdHrTol, 0 ) ) * 2  
    else UNDEFINED
    endif
  ANNUAL  
    z:ThrtlgRng
ENDRULE


// ********** Space Temperature Schedule ***************************************
// Then assign the appropriate thermostat schedules to the thermal zone based on 
// predominant function group determined in ThermalZone-General.rule
RULE ThrmlZn:ClgTstatSchRef
  DESCRIPTION
    "The cooling temperature schedule for the ThermalZone." 
  HELP : T24N
    "The schedules specified in Appendix 5.4A and detailed in Appendix 5.4B shall
     be used as a default."
  REFERENCE 
    NACM Section 5.6.1
  INPUTCLASS : T24N
    Prescribed
  INPUTCLASS : S901G ECBC
    Default
  CHECKCODE : S901G ECBC
    if( IsCond > 0 .AND. 
        LocalStatus( ClgTstatSchRef ) = 0 .AND. 
        HasClg )
    then 
      PostWarning("The cooling thermostat schedule for ThermalZone '%s' is not
                  defined. Since the system(s) serving the zone has cooling capacity,
                  a default schedule will be assigned.", Name)
    else UNCHANGED
    endif
  SIZING_PROPOSED : T24N
    if( IsCond > 0 .AND. LocalStatus( PredominantFuncGrp ) > 0 ) 
    then // Is no conditioned and PredominantFunctionGroup defined
      if( HasClg = 0 .AND. HtgOnlySysArea > 0 )
      then // Heating only warehouse exception, but still need schedule for sizing
        RuleLibrary( Schedule, 
                     SpaceFunctionGroups:ClgTstatSchRef( "FuncGroup", PredominantFuncGrp ) )
      else
      if( HasNoClg > 0 .AND. HasUnknownHVAC = 0 .AND.
          IsNoMech = 0 .AND. IsNoAddMech = 0 )
      then // Zone HasNoClg is specified, but still need schedule for sizing
        RuleLibrary( Schedule, 
                     SpaceFunctionGroups:ClgTstatSchRef( "FuncGroup", PredominantFuncGrp ) )
      else // Use default ACM schedule based on PredominantFunctionGroup
        RuleLibrary( Schedule, 
                     SpaceFunctionGroups:ClgTstatSchRef( "FuncGroup", PredominantFuncGrp ) )
      endif endif
    else UNDEFINED
    endif
  SIZING_PROPOSED : S901G ECBC
    if( IsCond > 0 .AND LocalStatus( PredominantFuncGrp ) > 0 ) 
    then // Is no conditioned and PredominantFunctionGroup defined
      if( HasClg = 0 .AND. HtgOnlySysArea > 0 )
      then // Heating only warehouse exception
        UNDEFINED
      else
      if( HasNoClg > 0 .AND. HasUnknownHVAC = 0 )
      then // Zone designed for no cooling and that option has been selected by user
        UNDEFINED
      else
      if( LocalStatus( u:ClgTstatSchRef ) > 0 )
      then u:ClgTstatSchRef
      else // Use default ACM schedule based on PredominantFunctionGroup
        RuleLibrary( Schedule, 
                     SpaceFunctionGroups:ClgTstatSchRef( "FuncGroup", PredominantFuncGrp ) )
      endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    zp:ClgTstatSchRef
  ANNUAL
    if( HasClg = 0 .AND. HtgOnlySysArea > 0 ) 
    then // Heating only warehouse exception, remove ClgTstatSch
      UNDEFINED
    else 
    if( HasNoClg > 0 .AND. HasUnknownHVAC = 0 .AND.
        IsNoMech = 0 .AND. IsNoAddMech = 0 )  
    then // Zone HasNoClg is specified, remove ClgTstatSch
      UNDEFINED 
    else z:ClgTstatSchRef
    endif endif
ENDRULE
RULE ThrmlZn:HtgTstatSchRef
  DESCRIPTION
    "The heating temperature schedule for the ThermalZone."
  HELP : T24N
    "The schedules specified in Appendix 5.4A and detailed in Appendix 5.4B shall
     be used as a default."
  REFERENCE 
    NACM Section 5.6.1
  INPUTCLASS : T24N
    Prescribed
  INPUTCLASS : S901G ECBC
    Default
  CHECKCODE : S901G ECBC
    if( IsCond > 0 .AND. 
        LocalStatus( HtgTstatSchRef ) = 0 .AND.
        HasHtg )
    then 
      PostWarning("The heating thermostat schedule for ThermalZone '%s' is not
                  defined. Since the system(s) serving the zone has heating capacity,
                  a default schedule will be assigned.", Name)
    else UNCHANGED
    endif
  SIZING_PROPOSED : T24N
    if( IsCond > 0 .AND. LocalStatus( PredominantFuncGrp ) > 0 ) 
    then // Is conditioned and PredominantFunctionGroup determined
      RuleLibrary( Schedule, 
                   SpaceFunctionGroups:HtgTstatSchRef( "FuncGroup", PredominantFuncGrp ) )
    else UNDEFINED
    endif
  SIZING_PROPOSED : S901G ECBC
    if( IsCond > 0 .AND LocalStatus( PredominantFuncGrp ) > 0 ) 
    then // Is no conditioned and PredominantFunctionGroup defined
      if( LocalStatus( u:HtgTstatSchRef ) > 0 )
      then u:HtgTstatSchRef
      else // Use default ACM schedule based on PredominantFunctionGroup
        RuleLibrary( Schedule, 
                     SpaceFunctionGroups:ClgTstatSchRef( "FuncGroup", PredominantFuncGrp ) )
      endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    zp:HtgTstatSchRef
  ANNUAL  
    z:HtgTstatSchRef
ENDRULE
// ***************** Radiant System Setpoint Adjustment ***********************
// Determine whether the zone is served by radiant system
RULE NEW ThrmlZn:IsServedByRadSys
  DATATYPE
    Integer
  LONGFORM
    IsServedByRadiantSystem
  DESCRIPTION
    "Determine whether the zone is served by radiant system"
  INPUTCLASS
    NotInput
  ANNUAL
    if( IfValidAnd(PriAirCondgSysRef[1]:Type = "Radiant") .OR. IfValidAnd(PriAirCondgSysRef[2]:Type = "Radiant") ) 
    then 1
    else 0
    endif
ENDRULE
// Define Cooling delta T
RULE NEW ThrmlZn:RadSysClgTstatDeltaT
  DATATYPE
    Float
  LONGFORM
    RadiantSystemCoolingThermostatDeltaT
  DESCRIPTION
    "The cooling setpoint temperature difference between radiant system and all-air system.
     The goal is to achieve a similar operative temperature, thermal comfort level."
  INPUTCLASS
    NotInput
  ANNUAL
    2
ENDRULE
// Define heating delta T
RULE NEW ThrmlZn:RadSysHtgTstatDeltaT
  DATATYPE
    Float
  LONGFORM
    RadiantSystemHeatingThermostatDeltaT
  DESCRIPTION
    "The heating setpoint temperature difference between radiant system and all-air system.
     The goal is to achieve a similar operative temperature, thermal comfort level."
  INPUTCLASS
    NotInput
  ANNUAL
    -3.5
ENDRULE
// Create an 'On' schedule that can be used for multiplying on a constant value
RULE NEW ThrmlZn:TstatOnSchRef
  DATATYPE
    Schedule
  LONGFORM
    HeatingThermostatOnScheduleReference
  DESCRIPTION
    "An 'All On' schedule referenced in SumSchedule function for creating
     the ClgTstatDeltaTSch/HtgTstatDeltaTSch."
  INPUTCLASS
    NotInput     
  ANNUAL
    if( IsServedByRadSys > 0 .AND. ( RadSysClgTstatDeltaT != 0 .OR. RadSysHtgTstatDeltaT != 0 ) ) 
    then RuleLibrary( Schedule, "On" )
    else UNDEFINED
    endif
ENDRULE
// Create cooling delta T schedule
RULE NEW ThrmlZn:ClgTstatDeltaTSchRef
  DATATYPE
    Schedule
  LONGFORM
    CoolingThermostatDeltaTScheduleReference
  DESCRIPTION
    "For zones served by radiant systems a schedule of occupied hour
     with delta T between occupied and unoccupied setpoint is created.
     This schedule will be used to adjust occupied setpoint for the radiant system."
  INPUTCLASS
    NotInput     
  ANNUAL
    if( IsServedByRadSys > 0 .AND. RadSysClgTstatDeltaT != 0 ) 
    then ScheduleSum( "ClgTstatDeltaTSch", 2, 
                     ClgTstatSchRef, 
                     TstatOnSchRef,
                     -1, ClgTstatSchRef:MaxVal) 
    else UNDEFINED
    endif 
ENDRULE
// Create new cooling schedule for zones served by radiant systems
RULE ThrmlZn:ClgTstatSchRef
  DESCRIPTION
    "Create new schedule for zones served by radiant systems with 
     adjusted occupied setpoint"
  ANNUAL
    if( IsServedByRadSys > 0 .AND. RadSysClgTstatDeltaT != 0 ) 
    then ScheduleSum( "RadSysClgTstatSch", 2, 
                     ClgTstatSchRef, 
                     ClgTstatDeltaTSchRef,
                     1, RadSysClgTstatDeltaT/(ClgTstatSchRef:MaxVal-ClgTstatSchRef:MinVal))
    else UNCHANGED
    endif 
ENDRULE
// Create heating delta T schedule
RULE NEW ThrmlZn:HtgTstatDeltaTSchRef
  DATATYPE
    Schedule
  LONGFORM
    HeatingThermostatDeltaTScheduleReference
  DESCRIPTION
    "For zones served by radiant systems a schedule of occupied hour
     with delta T between occupied and unoccupied setpoint is created.
     This schedule will be used to adjust occupied setpoint for the radiant system."
  INPUTCLASS
    NotInput     
  ANNUAL
    if( IsServedByRadSys > 0 .AND. RadSysHtgTstatDeltaT != 0 )
    then ScheduleSum( "HtgTstatDeltaTSch", 2, 
                     HtgTstatSchRef, 
                     TstatOnSchRef,
                     1, -HtgTstatSchRef:MinVal) 
    else UNDEFINED
    endif 
ENDRULE
// Create new heating schedule for zones served by radiant systems
RULE ThrmlZn:HtgTstatSchRef
  DESCRIPTION
    "Create new schedule for zones served by radiant systems with 
     adjusted occupied setpoint"
  ANNUAL
    if( IsServedByRadSys > 0 .AND. RadSysHtgTstatDeltaT != 0 )
    then ScheduleSum( "RadSysHtgTstatSch", 2, 
                     HtgTstatSchRef, 
                     HtgTstatDeltaTSchRef,
                     1, RadSysHtgTstatDeltaT/(HtgTstatSchRef:MaxVal-HtgTstatSchRef:MinVal))
    else UNCHANGED
    endif 
ENDRULE

// Specify HtgMax/ClgMin schedule values at ThrmlZn
RULE NEW ThrmlZn:HtgTstatSchMaxVal
  DATATYPE
    Float
  LONGFORM
    HeatingThermostatScheduleReferenceMaximumValue
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( HtgTstatSchRef ) )
    then HtgTstatSchRef:MaxVal
    else 70
    endif
  SIZING
    if( LocalCompAssigned( HtgTstatSchRef ) )
    then HtgTstatSchRef:MaxVal
    else 70
    endif
  ANNUAL
    z:HtgTstatSchMaxVal
ENDRULE
RULE NEW ThrmlZn:ClgTstatSchMinVal
  DATATYPE
    Float
  LONGFORM
    CoolingThermostatScheduleReferenceMinimumValue
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( ClgTstatSchRef ) )
    then ClgTstatSchRef:MinVal
    else 75
    endif
  SIZING
    if( LocalCompAssigned( ClgTstatSchRef ) )
    then ClgTstatSchRef:MinVal
    else 75
    endif
  ANNUAL
    z:ClgTstatSchMinVal
ENDRULE

// Determine whether the ventilation system is unique form the Primary System
RULE NEW ThrmlZn:UniqueVentSysAssigned
  DATATYPE
    Float
  LONGFORM
    UniqueVentilationSystemAssigned
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( VentSysRef ) .AND. VentSrc = "Forced" )
    then
      if( LocalCompAssigned( PriAirCondgSysRef[1] ) )
      then
        if( VentSysRef = PriAirCondgSysRef[1] )
        then
          if( LocalCompAssigned( TrmlUnitRef ) )
          then
            if( TrmlUnitRef:Type = "ActiveBeam" )
            then 1
            else 0 // VentSys and PriSys[1] are the same
            endif
          else 0
          endif
        else 1
        endif
      else
      if( LocalCompAssigned( PriAirCondgSysRef[2] ) ) 
      then 
        if( VentSysRef = PriAirCondgSysRef[2] )
        then
          if( LocalCompAssigned( TrmlUnitRef ) )
          then
            if( TrmlUnitRef:Type = "ActiveBeam" )
            then 1
            else 0 // VentSys and PriSys[1] are the same
            endif
          else 0
          endif
        else 1
        endif
      else 1 // No PriSys assigned
      endif endif
    else 0 // No Vent System Assigned
    endif  
ENDRULE


// ********** System Priority **************************************************
// See issue 1220 for background
// -----------------------------------------------------------------------------
RULE ThrmlZn:PriAirCondgSysPriority[1]
  DESCRIPTION
    "The order in which Primary A/C system is used to meet zone loads."
  HELP
    "If there is more than one unique system serving the zone, this value defines
     the order in which the Primary A/C system is used to meet zone loads. If there
     is a conflict in ordering, the program will assume the Ventilation System
     is ordered first, followed by the Primary A/C system."
  INPUTCLASS
    Default
  DEFAULT
    if( IsCond > 0 .AND. HasUnknownHVAC != 1 .AND. 
        LocalCompAssigned( PriAirCondgSysRef[1] ) )
    then
      if( IfValidAnd( UniqueVentSysAssigned > 0 ) )
      then // VentSys != to PriAirCondgSys
        if( VentSysRef:IsExhSys > 0 )
        then 1 // VentSys is an exhaust system, set PriSys to #1 priority
        else 2 // Set to second priority since VentSys is DOAS
        endif
      else 1 // VentSys and PriSys are the same
      endif
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( IfValidAnd( VentSysRef:BaseSysNum > 100 ) .AND.
        IfValidAnd( VentSysRef:BaseSysNum < 200 ) )
    then 2 // Ventilation system is balanced
    else
    if( HasUnknownHVAC > 0 )
    then 1 // Primary and ventilation system are the same
    else
    if( IsCond > 0 .AND. LocalCompAssigned( PriAirCondgSysRef[1] ) )
    then ValidOr( PriAirCondgSysPriority[1], 1 )
    else UNDEFINED
    endif endif endif
  SIZING_BASELINE
    if( IsExistingHVAC > 0 .OR. IsCond = 0 )
    then zp:PriAirCondgSysPriority[1]
    else
    if( IfValidAnd( VentSysRef:IsUnitaryHRRVentSys > 0 ) .AND.
        IfValidAnd( ResVentEquipChkReq > 0 ) .AND. 
        IfValidAnd( ResVentEquipIsAccessible = 0 ) )
    then // System is unitary ventilation system and is not accessible, Standard = Proposed
      zp:PriAirCondgSysPriority[1]
    else
    if( IfValidAnd( VentSysRef:BaseSysNum > 100 ) .AND.
        IfValidAnd( VentSysRef:BaseSysNum < 200 ) )
    then 2 // Ventilation system is balanced
    else 1 // Primary and ventilation system are the same
    endif endif endif
  ANNUAL
    z:PriAirCondgSysPriority[1]
ENDRULE
RULE ThrmlZn:PriAirCondgSysPriorityClg[1]
  DESCRIPTION
    "The order in which Primary[1] system is used to meet zone cooling loads."
  HELP
    "This property is for debugging purposes only. If specified, it is translated
     to the ZoneHVAC:EquipmentList sequence number in the E+ model."
  INPUTCLASS
    Prescribed
ENDRULE
RULE ThrmlZn:PriAirCondgSysPriorityHtg[1]
  DESCRIPTION
    "The order in which Primary[1] system is used to meet zone heating loads."
  HELP
    "This property is for debugging purposes only. If specified, it is translated
     to the ZoneHVAC:EquipmentList sequence number in the E+ model."
  INPUTCLASS
    Prescribed
ENDRULE

// -----------------------------------------------------------------------------
RULE ThrmlZn:PriAirCondgSysPriority[2]
  DESCRIPTION
    "The order in which second A/C system is used to meet zone loads."
  HELP
    "If there is more than one unique system serving the zone, this value defines
     the order in which the Primary A/C system is used to meet zone loads. If there
     is a conflict in ordering, the program will assume the Ventilation System
     is ordered last, followed by the Primary A/C system(s)."
  INPUTCLASS
    Default
  DEFAULT
    if( LocalCompAssigned( PriAirCondgSysRef[2] ) .AND.
        IsCond > 0  .AND. HasUnknownHVAC != 1 )
    then
      if( LocalCompAssigned( PriAirCondgSysRef[1] ) ) 
      then ValidOr( PriAirCondgSysPriority[1], 1 ) + 1
      else
      if( LocalCompAssigned( VentSysRef ) ) 
      then ValidOr( VentSysPriority, 1 ) + 1
      else 1
      endif endif
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( LocalCompAssigned( PriAirCondgSysRef[2] ) .AND.
        IsCond > 0 .AND. HasUnknownHVAC != 1 )
    then PriAirCondgSysPriority[2]
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( LocalCompAssigned( PriAirCondgSysRef[2] ) .AND. 
        ( IsExistingHVAC > 0 .OR. IsCond = 0 ) )
    then zp:PriAirCondgSysPriority[2]
    else UNDEFINED
    endif
  ANNUAL
    z:PriAirCondgSysPriority[2]
ENDRULE
RULE ThrmlZn:PriAirCondgSysPriorityClg[2]
  DESCRIPTION
    "The order in which Primary[2] system is used to meet zone cooling loads."
  HELP
    "This property is for debugging purposes only. If specified, it is translated
     to the ZoneHVAC:EquipmentList sequence number in the E+ model."
  INPUTCLASS
    Prescribed
ENDRULE
RULE ThrmlZn:PriAirCondgSysPriorityHtg[2]
  DESCRIPTION
    "The order in which Primary[2] system is used to meet zone heating loads."
  HELP
    "This property is for debugging purposes only. If specified, it is translated
     to the ZoneHVAC:EquipmentList sequence number in the E+ model."
  INPUTCLASS
    Prescribed
ENDRULE

// -----------------------------------------------------------------------------
RULE ThrmlZn:VentSysPriority
  DESCRIPTION
    "The order in which Ventilation system is used to meet zone loads."
  HELP
    "If there is more than one unique system serving the zone, this value defines
     the order in which the Ventilation system is used to meet zone loads. If there
     is a conflict in ordering, the program will assume the Ventilation System
     is ordered first, followed by the Primary A/C system."
  INPUTCLASS
    Default
  DEFAULT
    if( IsCond > 0  .AND. HasUnknownHVAC != 1 .AND. 
        VentSrc = "Forced" .AND. LocalCompAssigned( VentSysRef ) )
    then 
      if( LocalCompAssigned( PriAirCondgSysRef[1] ) = 0 .AND.
          LocalCompAssigned( PriAirCondgSysRef[2] ) = 0 )
      then 1 // No Pri systems defined
      else
      if( UniqueVentSysAssigned > 0 )
      then 1 // VentSys is not same as Pri, i.e. DOAS, set to 1
      else
      if( VentSysRef = PriAirCondgSysRef[1] )
      then PriAirCondgSysPriority[1]
      else
      if( VentSysRef = PriAirCondgSysRef[2] )
      then PriAirCondgSysPriority[2]
      else 1
      endif endif endif endif
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( VentSrc != "Forced" .OR. LocalCompAssigned( VentSysRef ) = 0 )
    then UNDEFINED
    else
    if( IsCond > 0  )
    then ValidOr( VentSysPriority, 1 )
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( VentSrc != "Forced" .OR. LocalCompAssigned( VentSysRef ) = 0 )
    then UNDEFINED
    else
    if( IsExistingHVAC > 0 .OR. IsCond = 0 )
    then zp:VentSysPriority // Existing or unconditioned, same as proposed
    else
    if( IsCond > 0 .AND. BaseVentSysIsExh > 0  )
    then UNDEFINED // Baseline VentSys for HRR and hotel/motel is modeled as exhaust
    else 1 // VentSys and PriSys are the same
    endif endif endif
  ANNUAL
    z:VentSysPriority
ENDRULE
RULE ThrmlZn:VentSysPriorityClg
  DESCRIPTION
    "The order in which Ventilation system is used to meet zone cooling loads."
  HELP
    "This property is for debugging purposes only. If specified, it is translated
     to the ZoneHVAC:EquipmentList sequence number in the E+ model."
  INPUTCLASS
    Prescribed
ENDRULE
RULE ThrmlZn:VentSysPriorityHtg
  DESCRIPTION
    "The order in which Ventilation system is used to meet zone heating loads."
  HELP
    "This property is for debugging purposes only. If specified, it is translated
     to the ZoneHVAC:EquipmentList sequence number in the E+ model."
  INPUTCLASS
    Prescribed
ENDRULE
