// Building - Air Balance
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES  LOSS OF USE, DATA, OR PROFITS  OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------





// Kitchen ventilation/exhaust systems
// Proposed ventilation air flow for commerical kitchen spaces only
RULE NEW Spc:CommKitVentFlow
  DATATYPE
    Float
  LONGFORM 
    CommercialKitchenVentilationFlow
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( CommKitArea > 0 ) )
    then ValidOr( VentFlow, 0 )
    else 0
    endif
  ANNUAL
    if( CommKitArea > 0 )
    then ValidOr( VentFlow, 0 )
    else 0
    endif
ENDRULE

RULE NEW Story:CommKitVentFlow
  DATATYPE
    Float
  LONGFORM
    CommericalKitchenVentilationFlow
  DESCRIPTION
    "The total commercial kitchen ventilation air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( Spc:VentFlow, Spc:CommKitArea > 0 ) * Mult
  ANNUAL
    SumChildrenIf( Spc:VentFlow, Spc:CommKitArea > 0 ) * Mult
ENDRULE

RULE NEW Bldg:CommKitVentFlow
  DATATYPE
    Float
  LONGFORM
    CommericalKitchenVentilationFlow
  DESCRIPTION
    "The total commercial kitchen ventilation air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CommKitVentFlow )
  ANNUAL
    SumChildren( Story:CommKitVentFlow )
ENDRULE

RULE NEW Story:TotKitExhHoodFlow
  DATATYPE
    Float
  LONGFORM
    TotalKitchenExhaustHoodFlow
  DESCRIPTION
    "The total proposed kitchen exhaust hood air flow for the BuildingStory."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:TotKitExhHoodFlow ) * Mult
ENDRULE

RULE NEW Bldg:TotKitExhHoodFlow
  DATATYPE
    Float
  LONGFORM
    TotalKitchenExhaustHoodFlow
  DESCRIPTION
    "The total proposed kitchen exhaust hood air flow for the Building."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:TotKitExhHoodFlow )
ENDRULE

RULE NEW Story:MaxTotKitExhHoodFlow
  DATATYPE
    Float
  LONGFORM
    MaximumTotalKitchenExhaustHoodFlow
  DESCRIPTION
    "The total maximum kitchen exhaust hood air flow, per Table 140.9-A of
     the Standard, for the BuildingStory."   
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:MaxTotKitExhHoodFlow ) * Mult
ENDRULE

RULE NEW Bldg:MaxTotKitExhHoodFlow
  DATATYPE
    Float
  LONGFORM
    MaximumTotalKitchenExhaustHoodFlow
  DESCRIPTION
    "The total maximum kitchen exhaust hood air flow, per Table 140.9-A of
     the Standard, for the Building."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:MaxTotKitExhHoodFlow )
ENDRULE

RULE NEW Story:CommKitExhFlow
  DATATYPE
    Float
  LONGFORM
    CommericalKitchenExhaustFlow
  DESCRIPTION
    "The total commercial kitchen exhaust air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( Spc:ExhFlow, Spc:CommKitArea > 0 ) * Mult
  ANNUAL
    SumChildrenIf( Spc:ExhFlow, Spc:CommKitArea > 0 ) * Mult
ENDRULE

RULE NEW Bldg:CommKitExhFlow
  DATATYPE
    Float
  LONGFORM
    CommericalKitchenExhaustFlow
  DESCRIPTION
    "The total commercial kitchen exhaust air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CommKitExhFlow )
  ANNUAL
    SumChildren( Story:CommKitExhFlow )
ENDRULE

// Laboratory ventilation/exhaust systems
RULE NEW Story:LabVentFlow
  DATATYPE
    Float
  LONGFORM
    LaboratoryVentilationFlow
  DESCRIPTION
    "The total laboratory ventilation air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( Spc:VentFlow, Spc:LabArea > 0 ) * Mult
ENDRULE

RULE NEW Bldg:LabVentFlow
  DATATYPE
    Float
  LONGFORM
    LaboratoryVentilationFlow
  DESCRIPTION
    "The total laboratory ventilation air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:LabVentFlow )
ENDRULE

RULE NEW Story:LabExhFlow
  DATATYPE
    Float
  LONGFORM
    LaboratoryExhaustFlow
  DESCRIPTION
    "The total laboratory exhaust air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( Spc:ExhFlow, Spc:LabArea > 0 ) * Mult 
ENDRULE

RULE NEW Bldg:LabExhFlow
  DATATYPE
    Float
  LONGFORM
    LaboratoryExhaustFlow
  DESCRIPTION
    "The total laboratory exhaust air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:LabExhFlow )
ENDRULE

// Parking Garage ventilation/exhaust systems
RULE NEW Story:PrkgGarVentFlow
  DATATYPE
    Float
  LONGFORM
    ParkingGarageVentilationFlow
  DESCRIPTION
    "The total ParkingGarage ventilation air flow for the BuildingStory"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( Spc:VentFlow, Spc:PrkgGarArea > 0 ) * Mult
  ANNUAL
    SumChildrenIf( Spc:VentFlow, Spc:PrkgGarArea > 0 ) * Mult
ENDRULE

RULE NEW Bldg:PrkgGarVentFlow
  DATATYPE
    Float
  LONGFORM
    ParkingGarageVentilationFlow
  DESCRIPTION
    "The total ParkingGarage ventilation air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:PrkgGarVentFlow )
  ANNUAL
    SumChildren( Story:PrkgGarVentFlow )
ENDRULE

RULE NEW Story:PrkgGarExhFlow
  DATATYPE
    Float
  LONGFORM
    ParkingGarageExhaustFlow
  DESCRIPTION
    "The total ParkingGarage exhaust air flow for the BuildingStory"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( Spc:ExhFlow, Spc:PrkgGarArea > 0 ) * Mult
  ANNUAL
    SumChildrenIf( Spc:ExhFlow, Spc:PrkgGarArea > 0 ) * Mult 
ENDRULE

RULE NEW Bldg:PrkgGarExhFlow
  DATATYPE
    Float
  LONGFORM
    ParkingGarageExhaustFlow
  DESCRIPTION
    "The total ParkingGarage exhaust air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:PrkgGarExhFlow )
  ANNUAL
    SumChildren( Story:PrkgGarExhFlow )
ENDRULE

// ***************************************************************************
// Sum of proposed design ventilation for BuildingStory and Building air balance checks
// Story
RULE NEW Story:VentFlow
  DATATYPE
    Float
  LONGFORM
    VentilationFlow
  DESCRIPTION
    "The quantity of proposed ventilation air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:VentFlow )
  ANNUAL
    SumChildren( Spc:VentFlow )
ENDRULE

RULE NEW Story:VentFlowForBal
  DATATYPE
    Float
  LONGFORM
    VentilationFlowForBalance
  DESCRIPTION
    "The quantity of proposed ventilation air flow for the BuildingStory
     included in the ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:VentFlowForBal )
  ANNUAL
    SumChildren( Spc:VentFlowForBal )
ENDRULE

RULE NEW Story:OtherVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    OtherVentilationFlowForBalance
  DESCRIPTION
    "The quantity of proposed 'Other' ventilation air flow for the BuildingStory
     included in the 'Other' ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:OtherVentFlowForBal )
  ANNUAL
    SumChildren( Spc:OtherVentFlowForBal )
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:VentFlow
  DATATYPE
    Float
  LONGFORM
    VentilationFlow
  DESCRIPTION
    "The quantity of proposed ventilation air flow for the ResidentialZoneGroup."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( ResOtherZn:TotalIAQCFM )
  ANNUAL
    SumChildren( ResOtherZn:TotalIAQCFM )
ENDRULE

RULE NEW ResZnGrp:VentFlowForBal
  DATATYPE
    Float
  LONGFORM
    VentilationFlowForBalance
  DESCRIPTION
    "The quantity of proposed ventilation air flow for the ResidentialZoneGroup
     included in the ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( ResOtherZn:TotalIAQCFM, ResOtherZn:Type = "Conditioned" )
  ANNUAL
    SumChildrenIf( ResOtherZn:TotalIAQCFM, ResOtherZn:Type = "Conditioned" )
ENDRULE

// Building
RULE NEW Bldg:VentFlow
  DATATYPE
    Float
  LONGFORM
    VentilationFlow
  DESCRIPTION
    "The quantity of proposed ventilation air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:VentFlow ) + SumChildren( ResZnGrp:VentFlow )
  ANNUAL
    SumChildren( Story:VentFlow ) + SumChildren( ResZnGrp:VentFlow )
ENDRULE

RULE NEW Bldg:VentFlowForBal
  DATATYPE
    Float
  LONGFORM
    VentilationFlowForBalance
  DESCRIPTION
    "The quantity of proposed ventilation air flow for the Building
     included in the ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:VentFlowForBal ) + SumChildren( ResZnGrp:VentFlowForBal )
  ANNUAL
    SumChildren( Story:VentFlowForBal ) + SumChildren( ResZnGrp:VentFlowForBal )
ENDRULE

RULE NEW Bldg:OtherVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    OtherVentilationFlowForBalance
  DESCRIPTION
    "The quantity of proposed 'Other' ventilation air flow for the Building
     included in the 'Other' ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:OtherVentFlowForBal )
  ANNUAL
    SumChildren( Story:OtherVentFlowForBal )
ENDRULE

// Sum of code ventilation for BuildingStory and Building air balance checks
// Story
RULE NEW Story:CodeVentFlow
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlow
  DESCRIPTION
    "The quantity of code ventilation air flow for the BuildingStory"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeVentFlow )
  ANNUAL
    SumChildren( Spc:CodeVentFlow)
ENDRULE

RULE NEW Story:CodeVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlowForBalance
  DESCRIPTION
    "The quantity of code ventilation air flow for the BuildingStory 
     included in the ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeVentFlowForBal )
  ANNUAL
    SumChildren( Spc:CodeVentFlowForBal )
ENDRULE

RULE NEW Story:CodeOtherVentFlow
  DATATYPE
    Float
  LONGFORM
    CodeOtherVentilationFlow
  DESCRIPTION
    "The quantity of code ventilation air flow for the BuildingStory 
     included in the 'Other' category."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeOtherVentFlow )
  ANNUAL
    SumChildren( Spc:CodeOtherVentFlow)
ENDRULE

RULE NEW Story:CodeOtherVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeOtherVentilationFlowForBalance
  DESCRIPTION
    "The quantity of code ventilation air flow for the BuildingStory 
     included in the 'Other' ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeOtherVentFlowForBal )
  ANNUAL
    SumChildren( Spc:CodeOtherVentFlowForBal )
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:CodeVentFlow
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlow
  DESCRIPTION
    "The quantity of code ventilation air flow for the ResidentialZoneGroup"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( ResOtherZn:MinIAQCFM )
  ANNUAL
    SumChildren( ResOtherZn:MinIAQCFM)
ENDRULE

RULE NEW ResZnGrp:CodeVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlowForBalance
  DESCRIPTION
    "The quantity of code ventilation air flow for the ResidentialZoneGroup 
     included in the ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( ResOtherZn:MinIAQCFM, ResOtherZn:Type = "Conditioned" )
  ANNUAL
    SumChildrenIf( ResOtherZn:MinIAQCFM, ResOtherZn:Type = "Conditioned" )
ENDRULE

// Building
RULE NEW Bldg:CodeVentFlow
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlow
  DESCRIPTION
    "The quantity of code ventilation air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeVentFlow ) + SumChildren( ResZnGrp:CodeVentFlow )
  ANNUAL
    SumChildren( Story:CodeVentFlow) + SumChildren( ResZnGrp:CodeVentFlow )
ENDRULE

RULE NEW Bldg:CodeVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlowForBalance
  DESCRIPTION
    "The quantity of code ventilation air flow for the Building
     included in the ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeVentFlowForBal ) + SumChildren( ResZnGrp:CodeVentFlowForBal )
  ANNUAL
    SumChildren( Story:CodeVentFlowForBal ) + SumChildren( ResZnGrp:CodeVentFlowForBal )
ENDRULE

RULE NEW Bldg:CodeOtherVentFlow
  DATATYPE
    Float
  LONGFORM
    CodeOtherVentilationFlow
  DESCRIPTION
    "The quantity of 'Other' code ventilation air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeOtherVentFlow )
  ANNUAL
    SumChildren( Story:CodeOtherVentFlow)
ENDRULE

RULE NEW Bldg:CodeOtherVentFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeOtherVentilationFlowForBalance
  DESCRIPTION
    "The quantity of code ventilation air flow for the Building
     included in the 'Other' ventilation air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeOtherVentFlowForBal )
  ANNUAL
    SumChildren( Story:CodeOtherVentFlowForBal )
ENDRULE


// ***************************************************************************
// General exhaust systems (not including process exhaust)
// Story
RULE NEW Story:ExhFlow
  DATATYPE
    Float
  LONGFORM
    ExhaustFlow
  DESCRIPTION
    "The proposed exhaust air flow for the BuildingStory."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:ExhFlow )
  ANNUAL
    SumChildren( Spc:ExhFlow )
ENDRULE

RULE NEW Story:ExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    ExhaustFlowForBalance
  DESCRIPTION
    "The proposed exhaust air flow for the BuildingStory included in the non-'Other'
     ventilation air flow balance."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:ExhFlowForBal )
  ANNUAL
    SumChildren( Spc:ExhFlowForBal )
ENDRULE

RULE NEW Story:OtherExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    ExhaustOtherFlowForBalance
  DESCRIPTION
    "The proposed exhaust air flow for the BuildingStory included in the 'Other'
     ventilation air flow balance."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:OtherExhFlowForBal )
  ANNUAL
    SumChildren( Spc:OtherExhFlowForBal )
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:ExhFlow
  DATATYPE
    Float
  LONGFORM
    ExhaustFlow
  DESCRIPTION
    "The proposed exhaust air flow for the ResidentialZoneGroup."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( ResOtherZn:TotalExhCFM )
  ANNUAL
    SumChildren( ResOtherZn:TotalExhCFM )
ENDRULE

RULE NEW ResZnGrp:ExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    ExhaustFlowForBalance
  DESCRIPTION
    "The proposed exhaust air flow for the ResidentialZoneGroup included in the
     ventilation air flow balance."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( ResOtherZn:TotalExhCFM, ResOtherZn:Type = "Conditioned" )
  ANNUAL
    SumChildrenIf( ResOtherZn:TotalExhCFM, ResOtherZn:Type = "Conditioned" )
ENDRULE

// Building
RULE NEW Bldg:ExhFlow
  DATATYPE
    Float
  LONGFORM
    ExhaustFlow
  DESCRIPTION
    "The proposed exhaust air flow for the Building."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:ExhFlow ) + SumChildren( ResZnGrp:ExhFlow )
  ANNUAL
    SumChildren( Story:ExhFlow ) + SumChildren( ResZnGrp:ExhFlow )
ENDRULE

RULE NEW Bldg:ExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    ExhaustFlowForBalance
  DESCRIPTION
    "The proposed exhaust air flow for the Building included in the
     ventilation air flow balance."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:ExhFlowForBal ) + SumChildren( ResZnGrp:ExhFlowForBal )
  ANNUAL
    SumChildren( Story:ExhFlowForBal ) + SumChildren( ResZnGrp:ExhFlowForBal )
ENDRULE

RULE NEW Bldg:OtherExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    ExhaustOtherFlowForBalance
  DESCRIPTION
    "The proposed exhaust air flow for the Building included in the 'Other'
     ventilation air flow balance."  
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:OtherExhFlowForBal )
  ANNUAL
    SumChildren( Story:OtherExhFlowForBal )
ENDRULE

// Sum of code exhaust for BuildingStory and Building air balance checks
// Story
RULE NEW Story:CodeExhFlow
  DATATYPE
    Float
  LONGFORM
    CodeExhaustFlow
  DESCRIPTION
    "The quantity of code exhaust air flow for the BuildingStory"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeExhFlow )
  ANNUAL
    SumChildren( Spc:CodeExhFlow)
ENDRULE

RULE NEW Story:CodeExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeExhaustFlowForBalance
  DESCRIPTION
    "The quantity of code exhaust air flow for the BuildingStory 
     included in the exhaust air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeExhFlowForBal )
  ANNUAL
    SumChildren( Spc:CodeExhFlowForBal )
ENDRULE

RULE NEW Story:CodeOtherExhFlow
  DATATYPE
    Float
  LONGFORM
    CodeOtherExhaustFlow
  DESCRIPTION
    "The quantity of code exhaust air flow for the BuildingStory 
     included in the 'Other' category."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeOtherExhFlow )
  ANNUAL
    SumChildren( Spc:CodeOtherExhFlow)
ENDRULE

RULE NEW Story:CodeOtherExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeOtherExhaustFlowForBalance
  DESCRIPTION
    "The quantity of code exhaust air flow for the BuildingStory 
     included in the 'Other' exhaust air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Spc:CodeOtherExhFlowForBal )
  ANNUAL
    SumChildren( Spc:CodeOtherExhFlowForBal )
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:CodeExhFlow
  DATATYPE
    Float
  LONGFORM
    CodeExhaustFlow
  DESCRIPTION
    "The quantity of code exhaust air flow for the ResidentialZoneGroup"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( ResOtherZn:MinExhCFM )
  ANNUAL
    SumChildren( ResOtherZn:MinExhCFM)
ENDRULE

RULE NEW ResZnGrp:CodeExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeExhaustFlowForBalance
  DESCRIPTION
    "The quantity of code exhaust air flow for the ResidentialZoneGroup 
     included in the exhaust air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildrenIf( ResOtherZn:MinExhCFM, ResOtherZn:Type = "Conditioned" )
  ANNUAL
    SumChildrenIf( ResOtherZn:MinExhCFM, ResOtherZn:Type = "Conditioned" )
ENDRULE

// Building
RULE NEW Bldg:CodeExhFlow
  DATATYPE
    Float
  LONGFORM
    CodeExhaustFlow
  DESCRIPTION
    "The quantity of code exhaust air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeExhFlow ) + SumChildren( ResZnGrp:CodeExhFlow )
  ANNUAL
    SumChildren( Story:CodeExhFlow) + SumChildren( ResZnGrp:CodeExhFlow )
ENDRULE

RULE NEW Bldg:CodeExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeExhaustFlowForBalance
  DESCRIPTION
    "The quantity of code exhaust air flow for the Building
     included in the exhaust air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeExhFlowForBal ) + SumChildren( ResZnGrp:CodeExhFlowForBal )
  ANNUAL
    SumChildren( Story:CodeExhFlowForBal ) + SumChildren( ResZnGrp:CodeExhFlowForBal )
ENDRULE

RULE NEW Bldg:CodeOtherExhFlow
  DATATYPE
    Float
  LONGFORM
    CodeOtherExhaustFlow
  DESCRIPTION
    "The quantity of 'Other' code exhaust air flow for the Building."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeOtherExhFlow )
  ANNUAL
    SumChildren( Story:CodeOtherExhFlow)
ENDRULE

RULE NEW Bldg:CodeOtherExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    CodeOtherExhaustFlowForBalance
  DESCRIPTION
    "The quantity of code exhaust air flow for the Building
     included in the 'Other' exhaust air flow balance."
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:CodeOtherExhFlowForBal )
  ANNUAL
    SumChildren( Story:CodeOtherExhFlowForBal )
ENDRULE

// Calculate a ratio of proposed to code ventilation (for spaces included in balance)
// Story
RULE NEW Story:CodeVentFlowForBalRat
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlowForBalanceRatio
  DESCRIPTION
    "The ratio of the proposed ventilation air flow rate to the code ventilation
     air flow rate, for the nonresidential spaces on the BuildingStory."
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( CodeVentFlowForBal > 0 ) .AND.
        IfValidAnd( VentFlowForBal >= 0 ) )
    then VentFlowForBal / CodeVentFlowForBal
    else 1.0
    endif
  ANNUAL
    if( IfValidAnd( CodeVentFlowForBal > 0 ) .AND.
        IfValidAnd( VentFlowForBal >= 0 ) )
    then VentFlowForBal / CodeVentFlowForBal
    else 1.0
    endif
ENDRULE

RULE NEW Story:CodeOtherVentFlowForBalRat
  DATATYPE
    Float
  LONGFORM
    CodeOtherVentilationFlowForBalanceRatio
  DESCRIPTION
    "The ratio of the proposed ventilation air flow rate to the code ventilation
     air flow rate, for the nonresidential 'Other' spaces on the BuildingStory."
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( CodeOtherVentFlowForBal > 0 ) .AND.
        IfValidAnd( OtherVentFlowForBal >= 0 ) )
    then OtherVentFlowForBal / CodeOtherVentFlowForBal
    else 1.0
    endif
  ANNUAL
    if( IfValidAnd( CodeOtherVentFlowForBal > 0 ) .AND.
        IfValidAnd( OtherVentFlowForBal >= 0 ) )
    then OtherVentFlowForBal / CodeOtherVentFlowForBal
    else 1.0
    endif
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:CodeVentFlowForBalRat
  DATATYPE
    Float
  LONGFORM
    CodeVentilationFlowForBalanceRatio
  DESCRIPTION
    "The ratio of the proposed ventilation air flow rate to the code ventilation
     air flow rate, for the residential common spaces on the ResidentialZoneGroup."
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( CodeVentFlowForBal > 0 ) .AND.
        IfValidAnd( VentFlowForBal >= 0 ) )
    then VentFlowForBal / CodeVentFlowForBal
    else 1.0
    endif
  ANNUAL
    if( IfValidAnd( CodeVentFlowForBal > 0 ) .AND.
        IfValidAnd( VentFlowForBal >= 0 ) )
    then VentFlowForBal / CodeVentFlowForBal
    else 1.0
    endif
ENDRULE

// Calculate a multiplier to scale down the proposed ventilation rates to equal 
// code minimum rates
// Story
RULE NEW Story:CodeVentMult
  DATATYPE
    Float
  LONGFORM
    CodeVentilationMultiplier
  DESCRIPTION
    "The mutliplier used to adjust the proposed design ventilation air flows to
     be equal to the code minimum required ventilation air flow.
     For nonresidential spaces only, and does not include Laboratory, Healthcare, or
     spaces that have the 'Other' ventilation standard specified."
  HELP
    "This multiplier is used to uniformly adjust the proposed Space ventilation rates 
     down to equal the code minimum if the proposed ventilation rate is greater 
     than that required by the ventilation Standard. The check is performed and 
     adjustments to the proposed ventilation rates are applied on a BuildingStory
     basis.  That is if only 1 of 5 stories in the building is over-ventilated,
     only the proposed ventilation rates of that 1 story are adjusted downward
     to equal the code minimum in the baseline design."
  INPUTCLASS 
    NotInput
; DEFAULT : T24N
;   if( Proj:IsNewMech .AND. 
;       ( VentFlowForBal - CommKitVentFlow ) > 0 .AND.
;       VentFlowForBal > CodeVentFlowForBal * ( 1 + Proj:VentTolMaxLimNonRes ) )
;   then
;     ( CodeVentFlowForBal - CommKitVentFlow ) /
;     ( VentFlowForBal - CommKitVentFlow )
; // CommKitVentFlow is subtracted since the baseline CommKit vent air flow is the same proposed
;   else 1
;   endif
  DEFAULT
    if( CodeVentFlowForBalRat > ( 1.0 + Proj:VentTolMaxLimNonRes ) )
    then CodeVentFlowForBal * ( 1.0 + Proj:VentTolMaxLimNonRes ) / VentFlowForBal
    else 1.0
    endif
  CHECKCODE
    if( VentFlowForBal < CodeVentFlowForBal * ( 1.0 - Proj:VentTolMinLimNonRes ) )
    then // The BuildingStory does not have enough ventilation air flow 
      PostError("The design ventilation air flow for nonresidential spaces on BuildingStory '%s', 
                 excluding Laboratory, Healthcare and 'Other' ventilation standard spaces, is %.0f cfm. 
                 This is less than the code minimum required ventilation air flow minus %.0f percent ( %.0f cfm ).
                 Increase design ventilation inputs so the total ventilation air delivered
                 to spaces is within %.0f percent of the code required flow.",
                 Name, VentFlowForBal, Proj:VentTolMinLimNonRes * 100, 
                 CodeVentFlowForBal * ( 1.0 - Proj:VentTolMinLimNonRes ), 
                 ( 1 - Proj:VentTolMinLimNonRes ) * 100)
    else if( CodeVentFlowForBalRat > ( 1.0 + Proj:VentTolMaxLimNonRes ) .AND. ExhVentMult = 1 )
    then // The BuildingStory proposed vent flow is > the upper tolerance limit
      PostWarning("The design ventilation air flow for nonresidential spaces on BuildingStory
                 '%s', excluding Laboratory, Healthcare and 'Other' ventilation standard spaces, is %.0f cfm.
                 This is greater than the code minimum required ventilation air flow plus %.0f percent ( %.0f cfm ).
                 The proposed design ventilation inputs will be scaled down in the
                 baseline design so the total ventilation air delivered to all applicable
                 spaces is within %.0f percent of the code required flow.",
                 Name, VentFlowForBal, Proj:VentTolMaxLimNonRes * 100, 
                 CodeVentFlowForBal * ( 1.0 + Proj:VentTolMaxLimNonRes ), 
                 ( 1.0 + Proj:VentTolMaxLimNonRes ) * 100)
    else if( VentFlowForBal > CodeExhFlowForBal * Proj:ExhVentMultLimNonRes .AND. ExhVentMult > 1 )
    then // The BuildingStory proposed vent flow is > make-up for exhaust air limit
      PostWarning("The design ventilation air flow for nonresidential spaces on BuildingStory
                 '%s', excluding Laboratory, Healthcare and 'Other' ventilation standard spaces, is %.0f cfm.
                 This is greater than the code minimum required exhaust air flow plus %.0f percent ( %.0f cfm ).
                 The proposed design ventilation inputs will be scaled down in the
                 baseline design so the total ventilation air delivered to all applicable
                 spaces is within %.0f percent of the code required exhaust air flow.",
                 Name, VentFlowForBal, ( Proj:ExhVentMultLimNonRes - 1 ) * 100, 
                 CodeExhFlowForBal * Proj:ExhVentMultLimNonRes, 
                 Proj:ExhVentMultLimNonRes * 100 )
    else UNCHANGED
    endif endif endif
ENDRULE

RULE NEW Story:CodeOtherVentMult
  DATATYPE
    Float
  LONGFORM
    CodeOtherVentilationMultiplier
  DESCRIPTION
    "The mutliplier used to adjust the proposed design ventilation air flows to
     be equal to the 'Other' code minimum required ventilation air flow.
     For nonresidential spaces only and does not include Laboratory or Healthcare spaces."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( CodeOtherVentFlowForBalRat > ( 1 + Proj:VentTolMaxLimNonRes ) )
    then CodeOtherVentFlowForBal * ( 1.0 + Proj:VentTolMaxLimNonRes ) / OtherVentFlowForBal
    else 1.0
    endif
  CHECKCODE
    if( OtherVentFlowForBal < CodeOtherVentFlowForBal * ( 1 - Proj:VentTolMinLimNonRes ) )
    then // The BuildingStory does not have enough ventilation air flow 
      PostError("The design ventilation air flow for 'Other' ventilation standard spaces on BuildingStory '%s',
                 is %.0f cfm. 
                 This is less than the code required ventilation air flow minus %.0f percent ( %.0f cfm ).
                 Increase design ventilation inputs so the total ventilation air delivered
                 to spaces is within %.0f percent of the code required flow.",
                 Name, OtherVentFlowForBal, Proj:VentTolMinLimNonRes * 100, 
                 CodeOtherVentFlowForBal * ( 1.0 - Proj:VentTolMinLimNonRes ),
                 ( 1 - Proj:VentTolMinLimNonRes ) * 100)
    else if( CodeOtherVentFlowForBalRat > ( 1.0 + Proj:VentTolMaxLimNonRes ) .AND. OtherExhVentMult = 1 )
    then // The BuildingStory proposed vent flow is > the upper tolerance limit
      PostWarning("The design ventilation air flow for 'Other' ventilation standard spaces on BuildingStory '%s',
                 is %.0f cfm.
                 This is greater than the code required ventilation air flow plus %.0f percent ( %.0f cfm ).
                 The proposed design ventilation inputs for 'Other' Spaces will be scaled down in the
                 baseline design so the total ventilation air delivered to all applicable
                 spaces is within %.0f percent of the code required flow.",
                 Name, OtherVentFlowForBal, Proj:VentTolMaxLimNonRes * 100, 
                 CodeOtherVentFlowForBal * ( 1.0 + Proj:VentTolMaxLimNonRes ), 
                 ( 1.0 + Proj:VentTolMaxLimNonRes ) * 100 )
    else if( OtherVentFlowForBal > CodeOtherExhFlowForBal * Proj:ExhVentMultLimNonRes .AND. OtherExhVentMult > 1 )
    then // The BuildingStory proposed vent flow is > make-up for exhaust air limit
      PostWarning("The design ventilation air flow for 'Other' ventilation standard spaces on BuildingStory '%s',
                 is %.0f cfm.
                 This is greater than the code required exhaust air flow plus %.0f percent ( %.0f cfm ).
                 The proposed design ventilation inputs for 'Other' Spaces will be scaled down in the
                 baseline design so the total ventilation air delivered to all applicable
                 spaces is within %.0f percent of the code required exhaust air flow.",
                 Name, OtherVentFlowForBal, ( Proj:ExhVentMultLimNonRes - 1 ) * 100, 
                 CodeOtherExhFlowForBal * Proj:ExhVentMultLimNonRes, 
                 Proj:ExhVentMultLimNonRes * 100 )
    else UNCHANGED
    endif endif endif
ENDRULE


// Old rule, pre-v3b
;RULE NEW Story:ExhVentMult
;  DATATYPE
;    Float
;  LONGFORM
;    ExhaustVentilationMultiplier
;  DESCRIPTION
;    "A multiplier used to increase the baseline ventilation air flow rate when
;     the proposed design includes additional ventilation air to make-up for
;     exhaust air flow."
;  INPUTCLASS 
;    NotInput
;  SIZING_PROPOSED
;    1.0
;  SIZING_BASELINE
;    if( Proj:IsNewMech .AND.
;        ExhFlowForBal > 0 .AND.
;        zb:VentFlowForBal < zp:VentFlowForBal .AND.
;        zp:VentExhBalRat > 1.0 )
;    then  // Design exhaust flow is > vent flow, caluclate the muliplier used to
;          //  uniformly increase the minimum standard ventilation rate up to 
;      ( Min( zp:VentFlowForBal , 1.2 * zp:ExhFlowForBal ) ) /
;      ( VentFlowForBal - CommKitVentFlow )
;// CommKitVentFlow is subtracted since the baseline CommKit vent air flow is the same proposed
;    else 1.0
;    endif    
;ENDRULE

RULE NEW Story:ExhVentMult
  DATATYPE
    Float
  LONGFORM
    ExhaustVentilationMultiplier
  DESCRIPTION
    "A multiplier used to increase the baseline ventilation air flow rate when
     the proposed design includes additional ventilation air to make-up for
     exhaust air flow. 
     For nonresidential spaces only and does not include Laboratory, Healthcare, or
     spaces that have the 'Other' ventilation standard specified."
  HELP
    "In cases where the design ventilation flow for the BuildingStory is less
     than the design exhaust flow, it is assumed the additional proposed design 
     ventilation is necessary for make-up air. In this case, the
     baseline ventilation rates are assumed the same as the proposed up to
     the value specified by ExhaustVentilationMultiplierLimit (ruleset dependent)." 
  INPUTCLASS 
    NotInput
; DEFAULT : T24N
;   if( ExhFlowForBal > 0 .AND.
;       CodeVentFlowForBal < VentFlowForBal .AND.
;       ( CodeVentFlowForBal - CommKitVentFlow ) > 0 .AND.
;       VentExhBalRat > 1.0 )
;   then  // Design exhaust flow is > vent flow, caluclate the muliplier used to
;         //  uniformly increase the minimum standard ventilation rate up to 
;     Min( VentFlowForBal - CommKitVentFlow, 
;          Proj:ExhVentMultLimNonRes * ExhFlowForBal - CommKitVentFlow ) 
;     / ( CodeVentFlowForBal - CommKitVentFlow )
;   // CommKitVentFlow is subtracted since the baseline CommKit vent air flow is the same proposed
;   else 1.0
;   endif
  DEFAULT
    if( ExhFlowForBal > CodeVentFlowForBal .AND.
        CodeVentFlowForBalRat > ( 1 + Proj:VentTolMaxLimNonRes ) )
    then // Design exhaust flow is greater than code and design/code vent is greater than over-vent limit
         // Calculate the multiplier used to uniformly increase the minimum 
         // standard ventilation rate up to the limit
      Max( Min( VentFlowForBal, CodeExhFlowForBal * Proj:ExhVentMultLimNonRes ) 
           / CodeVentFlowForBal / ( 1 + Proj:VentTolMaxLimNonRes ), 1 )
    else 1.0
    endif     
ENDRULE

RULE NEW Story:OtherExhVentMult
  DATATYPE
    Float
  LONGFORM
    OtherExhaustVentilationMultiplier
  DESCRIPTION
    "A multiplier used to increase the baseline 'Other' ventilation air flow rate when
     the proposed design includes additional ventilation air to make-up for
     exhaust air flow. 
     For nonresidential spaces only and does not include Laboratory or Healthcare spaces."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( OtherExhFlowForBal > CodeOtherVentFlowForBal .AND.
        CodeOtherVentFlowForBalRat > 1.0 )
    then // Design exhaust flow is > pressurization limit, calculate the multiplier used to
         //  uniformly increase the minimum standard ventilation rate up to the limit
      Min( OtherVentFlowForBal, OtherExhFlowForBal * Proj:ExhVentMultLimNonRes )
      / CodeOtherVentFlowForBal / ( 1 + Proj:VentTolMaxLimNonRes )
    else 1.0
    endif     
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:CodeVentMult
  DATATYPE
    Float
  LONGFORM
    CodeVentilationMultiplier
  DESCRIPTION
    "The mutliplier used to adjust the proposed design ventilation air flows to
     be equal to the code minimum required ventilation air flow.
     For muiltifamily common spaces only."
  HELP
    "This multiplier is used to uniformly adjust the proposed Space ventilation rates 
     down to equal the code minimum if the proposed ventilation rate is greater 
     than that required by the ventilation Standard. The check is performed and 
     adjustments to the proposed ventilation rates are applied on a ResidentialZoneGroup
     basis."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( CodeVentFlowForBalRat > ( 1.0 + Proj:VentTolMaxLimMFCom ) )
    then CodeVentFlowForBal * ( 1.0 + Proj:VentTolMaxLimMFCom ) / VentFlowForBal
    else 1.0
    endif
  CHECKCODE
    if( VentFlowForBal < CodeVentFlowForBal * ( 1.0 - Proj:VentTolMinLimMFCom ) )
    then // The ResidentialZoneGroup does not have enough ventilation air flow 
      PostError("The total design outdoor air flow provided to meet ventilation requirement
                 for multifamily common spaces on ResidentialZoneGroup '%s' is %.0f cfm. 
                 This is less than the code minimum required ventilation air flow minus %.0f percent ( %.0f cfm ).
                 Increase design ventilation inputs so the total ventilation air delivered
                 to spaces is within %.0f percent of the code required flow.
                 * Air transfered from adjacent zones doesn't count as outdoor air.",
                 Name, VentFlowForBal, Proj:VentTolMinLimMFCom * 100, 
                 CodeVentFlowForBal * ( 1.0 - Proj:VentTolMinLimMFCom ), 
                 ( 1 - Proj:VentTolMinLimMFCom ) * 100)
    else if( CodeVentFlowForBalRat > ( 1.0 + Proj:VentTolMaxLimMFCom ) .AND. ExhVentMult = 1 )
    then // The ResidentialZoneGroup proposed vent flow is > the upper tolerance limit
      PostWarning("The design ventilation air flow for multifamily common spaces on ResidentialZoneGroup '%s' is %.0f cfm.
                 This is greater than the code minimum required ventilation air flow plus %.0f percent ( %.0f cfm ).
                 The proposed design ventilation inputs will be scaled down in the
                 baseline design so the total ventilation air delivered to all applicable
                 spaces is within %.0f percent of the code required flow.",
                 Name, VentFlowForBal, Proj:VentTolMaxLimMFCom * 100, 
                 CodeVentFlowForBal * ( 1.0 + Proj:VentTolMaxLimMFCom ), 
                 ( 1.0 + Proj:VentTolMaxLimMFCom ) * 100)
    else if( VentFlowForBal > CodeExhFlowForBal * Proj:ExhVentMultLimMFCom .AND. ExhVentMult > 1 )
    then // The BuildingStory proposed vent flow is > make-up for exhaust air limit
      PostWarning("The design ventilation air flow for multifamily common spaces on ResidentialZoneGroup '%s' is %.0f cfm.
                 This is greater than the code minimum required exhaust air flow plus %.0f percent ( %.0f cfm ).
                 The proposed design ventilation inputs will be scaled down in the
                 baseline design so the total ventilation air delivered to all applicable
                 spaces is within %.0f percent of the code required exhaust air flow.",
                 Name, VentFlowForBal, ( Proj:ExhVentMultLimMFCom - 1 ) * 100, 
                 CodeExhFlowForBal * Proj:ExhVentMultLimMFCom, 
                 Proj:ExhVentMultLimMFCom * 100)
    else UNCHANGED
    endif endif endif
ENDRULE

RULE NEW ResZnGrp:ExhVentMult
  DATATYPE
    Float
  LONGFORM
    ExhaustVentilationMultiplier
  DESCRIPTION
    "A multiplier used to increase the baseline ventilation air flow rate when
     the proposed design includes additional ventilation air to make-up for
     exhaust air flow. 
     For muiltifamily common spaces only."
  HELP
    "In cases where the design ventilation flow for the ResidentialZoneGroup is less
     than the design exhaust flow, it is assumed the additional proposed design 
     ventilation is necessary for make-up air. In this case, the
     baseline ventilation rates are assumed the same as the proposed up to
     the value specified by ExhaustVentilationMultiplierLimit (ruleset dependent)." 
  INPUTCLASS 
    NotInput
  DEFAULT
    if( ExhFlowForBal > CodeVentFlowForBal .AND.
        CodeVentFlowForBalRat > ( 1 + Proj:VentTolMaxLimMFCom ) )
    then // Design exhaust flow is greater than code and design/code vent is greater than over-vent limit
         // Calculate the multiplier used to uniformly increase the minimum 
         // standard ventilation rate up to the limit
      Max( Min( VentFlowForBal, CodeExhFlowForBal * Proj:ExhVentMultLimMFCom ) 
           / CodeVentFlowForBal / ( 1 + Proj:VentTolMaxLimMFCom ), 1 )
    else 1.0
    endif     
ENDRULE

// ***************************************************************************
// Outside air/exhaust air balance calculation
RULE NEW Spc:MechOAFlow
  DATATYPE
    Float
  LONGFORM
    MechicalOutdoorAirFlow
  DESCRIPTION
    "The proposed design outdoor air mechanically supplied to the space"
  HELP
    "Does not include outside air induced directly into the space by an exhaust fan"
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    if( PropVentSysIsExh > 0 )
    then 0
    else
    if( PropExhSysIsBalanced > 0 )
    then ExhFlow
    else VentFlow
    endif endif
ENDRULE

RULE NEW ThrmlZn:VentSysExhToOAFlowRat
  DATATYPE
    Float
  LONGFORM
    VentilationSystemExhaustToOutdoorAirFlowRatio
  DESCRIPTION
    "The ratio of exhaust air to outside air delivered by a dedicated ventilation system." 
  HELP
    "Only applicable to 100% outside air ventilation systems."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    if( HasVentSys > 0 )
    then
      if( PropVentSysIsExh > 0 )
      then 0 // avoid double counting if ventilation system also serves as exhaust system
      else 
      if( VentSysRef:Type = "VentilationOnly" )
      then
        if( IfValidAnd( VentSysRef:ExhSysType = "SupplyOnly" ) )
        then 0
        else 1
        endif
      else 
      if( IfValidAnd( VentSysRef:IsAllOA > 0 ) )
      then ValidOr( VentSysRef:RetAirFlowRat, 0 )
      else 0
      endif endif endif 
    else 0
    endif
ENDRULE

RULE NEW Spc:TotExhFlow
  DATATYPE
    Float
  LONGFORM
    TotalExhaustFlow
  DESCRIPTION
    "The total proposed exhaust flow rate"
  HELP
    "Equal to the flow of exhaust-based ventilation systems, or the exhaust flow of
     dedicated outside air systems plus zone (general) exhaust systems."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    if( PropVentSysIsExh > 0 )
    then // VentSys is exhaust
      Max( VentFlow, ExhFlow )
    else
      VentFlow * ValidOr( ThrmlZnRef:VentSysExhToOAFlowRat, 0 ) + // Air exhaust by DOAS
      ExhFlow // Air exhausted by zone exhaust
    endif
ENDRULE

RULE NEW Spc:TotExhFlowForBal
  DATATYPE
    Float
  LONGFORM 
    TotalExhaustFlowForBalance
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( VentStd != "Other" ) )
    then TotExhFlow * IncludeInBal
    else 0
    endif
ENDRULE

RULE NEW Spc:OtherTotExhFlowForBal
  DATATYPE
    Float
  LONGFORM 
    OtherTotalExhaustFlowForBalance
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( VentStd = "Other" ) ) 
    then TotExhFlow * IncludeInBal
    else 0
    endif
ENDRULE

RULE NEW Spc:MakeupOAFlow
  DATATYPE
    Float
  LONGFORM
    MakeupOutdoorAirFlow
  DESCRIPTION
    "The amount of makeup outdoor air induced into the space to balance exhaust, after
     accounting for outdoor air ventilation supplied directly to the space."
  HELP
    "This amount of air will be simulated as direct infiltration to the space."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( ThrmlZnRef:ExhSrc = "DirectOutsideAir" ) )
    then Max( TotExhFlow - MechOAFlow, 0 )
    else 0
    endif
ENDRULE

RULE NEW Spc:TotOAFlow
  DATATYPE
    Float
  LONGFORM
    TotalOutdoorAirFlow
  DESCRIPTION
    "The total outdoor air brought directly into the space, either supplied mechanically or 
     induced from outside by exhaust fans." 
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    MechOAFlow + MakeupOAFlow
ENDRULE

RULE NEW Spc:TotOAFlowForBal
  DATATYPE
    Float
  LONGFORM 
    TotalOutdoorAirFlowForBalance
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( VentStd != "Other" ) ) 
    then TotOAFlow * IncludeInBal
    else 0
    endif
ENDRULE

RULE NEW Spc:OtherTotOAFlowForBal
  DATATYPE
    Float
  LONGFORM 
    OtherTotalOutdoorAirFlowForBalance
  INPUTCLASS 
    NotInput
  UNITS
    cfm
  DEFAULT
    if( IfValidAnd( VentStd = "Other" ) ) 
    then TotOAFlow * IncludeInBal
    else 0
    endif
ENDRULE

RULE NEW ThrmlZn:MakeupAirFlow
  DATATYPE
    Float
  LONGFORM
    MakeupAirFlow
  DESCRIPTION
    "The flow rate of makeup air to the zone for the extra exhaust flow."
  HELP
    "The make-up air can be the air directly from outside the building or the air transfered 
     from other zones."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
// This value is different than Spc:MakeupOAFlow because it is the difference between exhaust
// and mechanically supply OA.
    Max( SumRevRef( Spc:ThrmlZnRef, Spc:TotExhFlow ) - 
         SumRevRef( Spc:ThrmlZnRef, Spc:MechOAFlow ), 0 )
  CHECKCODE
    if( MakeupAirFlow > 0 .AND. 
        ExhSrc = "None" .AND.
        MechOAExhBalRat < ( 1.0 - Proj:BalancedVentTolNonRes ) )
    then 
      PostError("ThermalZone '%s' requires makeup air for exhaust, but ExhaustSource = 'None'.
                 Change ExhaustSource to 'DirectOutsideAir' or 'TransferFromAdjacentZones' based
                 the proposed design intent for makeup air.", Name) 
    else
      UNCHANGED
    endif
ENDRULE

RULE NEW ThrmlZn:MechOAExhBalRat
  DATATYPE
    Float
  LONGFORM
    MechanicalOutdoorAirExhaustBalanceRatio
  DESCRIPTION
    "The ratio of mechanically supplied outdoor air to total exhaust air for the ThermalZone."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    if( SumRevRef( Spc:ThrmlZnRef, Spc:TotExhFlow ) > 0 )
    then
      SumRevRef( Spc:ThrmlZnRef, Spc:MechOAFlow ) /
      SumRevRef( Spc:ThrmlZnRef, Spc:TotExhFlow ) 
    else 1
    endif
ENDRULE

RULE NEW ThrmlZn:MakeupAirLbl
  DATATYPE
    String
  LONGFORM
    MakeupAirLabel
  INPUTCLASS
    NotInput
  DEFAULT
    if( MakeupAirFlow > 0 .AND. ExhSrc = "DirectOutsideAir" )
    then Format( "*** %s CFM outdoor air is drawn by the exhaust", FltToStr( MakeupAirFlow, 1 ) )
    else if( MakeupAirFlow > 0 .AND. ExhSrc = "TransferFromAdjacentZones" )
    then Format( "*** %s CFM ventilation air is transfered from adjacent zones", FltToStr( MakeupAirFlow, 1 ) )
    else " "
    endif endif
ENDRULE

// Story
RULE NEW Story:TotOAFlow
  DATATYPE
    Float
  LONGFORM
    TotalOutdoorAirFlow
  DESCRIPTION
    "The total outdoor air brought directly to the BuildingStory."
  HELP
    "This flow is not necessary equal to the ventilation flow because not all the outdoor air supplied
     is for ventilation. For example, for spaces with exhaust, the ventilation air 
     serves as makeup air for the exhaust, and can't be transfered to other spaces for ventilation."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( Spc:TotOAFlow )
ENDRULE

RULE NEW Story:TotOAFlowForBal
  DATATYPE
    Float
  LONGFORM
    TotalOutdoorAirFlowForBalance
  DESCRIPTION
    "The total outdoor air brought directly to the BuildingStory included in the air flow balance."
  HELP
    "This flow is not necessary equal to the ventilation flow because not all the outdoor air supplied
     is for ventilation. For example, for spaces with exhaust, the ventilation air 
     serves as makeup air for the exhaust, and can't be transfered to other spaces for ventilation."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( Spc:TotOAFlowForBal )
ENDRULE

RULE NEW Story:OtherTotOAFlowForBal
  DATATYPE
    Float
  LONGFORM
    OtherTotalOutdoorAirFlowForBalance
  DESCRIPTION
    "The total outdoor air brought directly to the BuildingStory included in the 'Other' air flow balance."
  HELP 
    "This flow is not necessary equal to the ventilation flow because not all the outdoor air supplied
     is for ventilation. For example, for spaces with exhaust, the ventilation air 
     serves as makeup air for the exhaust, and can't be transfered to other spaces for ventilation."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( Spc:OtherTotOAFlowForBal )
ENDRULE

RULE NEW Story:TotExhFlow
  DATATYPE
    Float
  LONGFORM
    TotalExhaustFlow
  DESCRIPTION
    "The total air removed from the BuildingStory."
  HELP
    "This flow can be higher than the design exhaust flow because this includes the exhaust flow of 
     dedicated outside air systems with exhaust fans."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( Spc:TotExhFlow )
ENDRULE

RULE NEW Story:TotExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    TotalExhaustFlowForBalance
  DESCRIPTION
    "The total air removed from the BuildingStory included in the air flow balance."
  HELP
    "This flow can be higher than the design exhaust flow because this includes the exhaust flow of 
     dedicated outside air systems with exhaust fans."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( Spc:TotExhFlowForBal )
ENDRULE

RULE NEW Story:OtherTotExhFlowForBal
  DATATYPE
    Float
  LONGFORM
    OtherTotalExhaustFlowForBalance
  DESCRIPTION
    "The total air removed from the BuildingStory included in the 'Other' air flow balance." 
  HELP
    "This flow can be higher than the design exhaust flow because this includes the exhaust flow of 
     dedicated outside air systems with exhaust fans."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( Spc:OtherTotExhFlowForBal )
ENDRULE

RULE NEW Story:OAExhBalRat
  DATATYPE
    Float
  LONGFORM
    OutdoorAirExhaustBalanceRatio
  PREVIOUSNAMES
    VentExhBalRat VentilationExhaustBalanceRatio
  DESCRIPTION
    "The ratio of total outdoor air to total exhaust air provided to the BuildingStory.
     For nonresidential spaces only."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( TotOAFlowForBal > 0 .AND.
        TotExhFlowForBal > 0 )
    then TotOAFlowForBal / TotExhFlowForBal
    else 1.0 // Set ratio to 1 if there is no exhaust flow
    endif
  CHECKCODE : T24N_2016
    if( OAExhBalRat < ( 1.0 - Proj:BalancedVentTolNonRes ) )
    then 
      PostWarning("The ratio of minimum ventilation (outside) air to exhaust air flow for
                  BuildingStory '%s' is < %.2f, indicating there is a flow imbalance.
                  Review Space ventilation/exhaust air flow inputs for consistency.",
                  Name,  ( 1.0 - Proj:BalancedVentTolNonRes ) )
    else if( ExhFlowForBal > CodeVentFlowForBal * Proj:ExhVentMultLimNonRes )
    then 
      PostWarning("The exhaust air flow for BuildingStory '%s' is greater than
                  the code minimum total ventilation air flow. For zones with forced
                  supply ventilation, the baseline ventilation flow for 
                  spaces will be increased to be the same as the proposed up 
                  to %.2f times the exhaust air flow, whichever is smaller.", 
                  Name, Proj:ExhVentMultLimNonRes)
    else UNCHANGED
    endif endif 
  CHECKCODE
    if( OAExhBalRat < ( 1.0 - Proj:BalancedVentTolNonRes ) )
    then 
      PostWarning("The ratio of minimum ventilation (outside) air to exhaust air flow for
                  BuildingStory '%s' is < %.2f, indicating there is a flow imbalance.
                  Review Space ventilation/exhaust air flow inputs for consistency. 
                  If an exhaust systems is specified for a zone, 
                  infiltration to zone will be modeled.",
                  Name,  ( 1.0 - Proj:BalancedVentTolNonRes ) )
    else if( ExhFlowForBal > CodeVentFlowForBal * ( 1 + Proj:VentTolMaxLimNonRes ) )
    then 
      PostWarning("The exhaust air flow for BuildingStory '%s' is greater than
                  the code minimum total ventilation. For zones with forced supply 
                  ventilation, the baseline ventilation flow for spaces will be 
                  the same as proposed or %.2f times the code minimum exhaust air 
                  flow, whichever smaller.", 
                  Name, Proj:ExhVentMultLimNonRes )
    else UNCHANGED
    endif endif 
ENDRULE

RULE NEW Story:OtherOAExhBalRat
  DATATYPE
    Float
  LONGFORM
    OtherOutdoorAirExhaustBalanceRatio
  PREVIOUSNAMES
    OtherVentExhBalRat OtherVentilationExhaustBalanceRatio
  DESCRIPTION
    "The ratio of 'Other' total outdoor air to 'Other' total exhaust air provided to the BuildingStory.
     For nonresidential spaces only."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( OtherTotOAFlowForBal > 0 .AND.
        OtherTotExhFlowForBal > 0 )
    then OtherTotOAFlowForBal / OtherTotExhFlowForBal
    else 1.0 // Set ratio to 1 if there is no exhaust flow
    endif
  CHECKCODE
    if( OtherOAExhBalRat < ( 1.0 - Proj:BalancedVentTolNonRes )  )
    then 
      PostWarning("The ratio of minimum ventilation (outside) air to exhaust air flow for
                  BuildingStory '%s' is < %.2f, indicating there is a flow imbalance.
                  Review Space ventilation/exhaust air flow inputs for consistency.",
                  Name, ( 1.0 - Proj:BalancedVentTolNonRes ) )
    else if( OtherExhFlowForBal > CodeOtherVentFlowForBal * ( 1 + Proj:VentTolMaxLimNonRes ) )
    then 
      PostWarning("For 'Other' ventilation standard spaces, the exhaust air flow for 
                  BuildingStory '%s' is greater than the code minimum total ventilation 
                  air flow. For zones with forced supply ventilation, the baseline 
                  ventilation flow for 'Other' spaces will be the same as the proposed 
                  or %.2f times the code minimum exhaust air flow, whichever is smaller.", 
                  Name, Proj:ExhVentMultLimNonRes)
    else UNCHANGED
    endif endif 
ENDRULE

// ResZnGrp
RULE NEW ResZnGrp:TotOAFlow
  DATATYPE
    Float
  LONGFORM
    TotalOutdoorAirFlow
  DESCRIPTION
    "The total outdoor air brought directly to the BuildingStory."
  HELP
    "This flow is not necessary equal to the ventilation flow because not all the outdoor air supplied
     is for ventilation. For example, for spaces with exhaust, the ventilation air 
     serves as makeup air for the exhaust, and can't be transfered to other spaces for ventilation."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildren( ResOtherZn:TotalOACFMToZn )
ENDRULE

RULE NEW ResZnGrp:TotOAFlowForBal
  DATATYPE
    Float
  LONGFORM
    TotalOutdoorAirFlowForBalance
  DESCRIPTION
    "The total outdoor air brought directly to the BuildingStory included in the air flow balance."
  HELP
    "This flow is not necessary equal to the ventilation flow because not all the outdoor air supplied
     is for ventilation. For example, for spaces with exhaust, the ventilation air 
     serves as makeup air for the exhaust, and can't be transfered to other spaces for ventilation."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumChildrenIf( ResOtherZn:TotalOACFMToZn, ResOtherZn:Type = "Conditioned" )
ENDRULE

RULE NEW ResZnGrp:OAExhBalRat
  DATATYPE
    Float
  LONGFORM
    OutdoorAirExhaustBalanceRatio
  PREVIOUSNAMES
    VentExhBalRat VentilationExhaustBalanceRatio
  DESCRIPTION
    "The ratio of total outdoor air to total exhaust air provided to the ResidentialZoneGroup.
     For conditioned residential common spaces."
  INPUTCLASS 
    NotInput
  DEFAULT
    if( TotOAFlowForBal > 0 .AND.
        ExhFlowForBal > 0 )
    then TotOAFlowForBal / ExhFlowForBal
    else 1.0 // Set ratio to 1 if there is no exhaust flow
    endif
  CHECKCODE
    if( ExhFlowForBal > CodeVentFlowForBal * ( 1 + Proj:VentTolMaxLimMFCom ) )
    then 
      PostWarning("The exhaust air flow for BuildingStory '%s' is greater than
                  the code minimum total ventilation. For zones with forced 
                  supply ventilation, the baseline ventilation flow for spaces 
                  will be the same as the proposed or %.2f times the 
                  code minimum exhaust air flow, whichever is smaller.", 
                  Name, Proj:ExhVentMultLimMFCom )
    else UNCHANGED
    endif
ENDRULE

// ***************************************************************************
// Reporting properties
// Non-process vent/exhaust flow
RULE NEW Story:GenVentFlow
  DATATYPE
    Float
  LONGFORM
    GeneralVentilationFlow
  DESCRIPTION
    "The total general (non-process except Computer Room) ventilation air flow for the BuildingStory"
  INPUTCLASS 
    NotInput
  DEFAULT
    VentFlow - ( CommKitVentFlow + LabVentFlow + PrkgGarVentFlow )
  ANNUAL
    VentFlow - ( CommKitVentFlow + LabVentFlow + PrkgGarVentFlow )
ENDRULE

RULE NEW Bldg:GenVentFlow
  DATATYPE
    Float
  LONGFORM
    GeneralVentilationFlow
  DESCRIPTION
    "The total general (non-process except Computer Room) ventilation air flow for the Building"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:GenVentFlow )
  ANNUAL
    SumChildren( Story:GenVentFlow )
ENDRULE

RULE NEW Story:GenExhFlow
  DATATYPE
    Float
  LONGFORM
    GeneralExhaustFlow
  DESCRIPTION
    "The total general (non-process except Computer Room) exhaust air flow for the BuildingStory"
  INPUTCLASS 
    NotInput
  DEFAULT
    ExhFlow - ( CommKitExhFlow + LabExhFlow + PrkgGarExhFlow )
  ANNUAL
    ExhFlow - ( CommKitExhFlow + LabExhFlow + PrkgGarExhFlow )
ENDRULE

RULE NEW Bldg:GenExhFlow
  DATATYPE
    Float
  LONGFORM
    GeneralExhaustFlow
  DESCRIPTION
    "The total general (non-process except Computer Room) exhaust air flow for the Building"
  INPUTCLASS 
    NotInput
  DEFAULT
    SumChildren( Story:GenExhFlow )
  ANNUAL
    SumChildren( Story:GenExhFlow )
ENDRULE

// ***************************************************************************
// Check exhaust is greater than supply 
// This calculation includes all space types
// This is to prevent users taking credit from over exhaust to heat recovery unit

RULE NEW ThrmlZn:VentSysExhFlowWithMult
  DATATYPE
    Float
  LONGFORM
    VentilationSystemExhaustFlowWithMultiplier
  DESCRIPTION
    "The amount of ventilation air that is exhausted i.e. returned
     from the zone by the specified VentSysRef."
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( VentSysRef ) .AND. 
        IfValidAnd( VentFlow > 0 ) )
    then
      if( VentSysRef:Type = "VentilationOnly" )
      then
        if( VentSysRef:ExhSysType = "SupplyOnly" )
        then 0
        else VentFlowWithMult
        endif
      else
      if( VentSysRef:Type = "Exhaust" .AND.
          IfValidAnd( ExhSrc = "DirectOutsideAir" ) )
      then VentFlowWithMult
      else
      if( IfValidAnd( VentSysRef:IsAllOA = 1 ) )
      then VentFlowWithMult * ValidOr ( VentSysRef:RetAirFlowRat, 1 )
      else 0
      endif endif endif
    else 0
    endif
ENDRULE

RULE NEW ThrmlZn:ExhSysOAFlowWithMult
  DATATYPE
    Float
  LONGFORM
    ExhaustSystemOutdoorAirWithMultiplier
  DESCRIPTION
    "The amount of outdoor air brought into the zone directly
     from the outside by the exhaust system."
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalCompAssigned( VentSysRef ) = 0 .AND. 
        LocalCompAssigned( ExhSysRef ) .AND.
        IfValidAnd( ExhSrc = "DirectOutsideAir" ) )
    then ExhFlowWithMult
    else 0
    endif
ENDRULE

RULE NEW Story:SupOAFlow
  DATATYPE
    Float
  LONGFORM
    SupplyOutdoorAirFlow
  DESCRIPTION
    "The total amount of outdoor air supplied to zones on a Story."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumRevRef( ThrmlZn:StoryRef, ThrmlZn:OASupFlowWithMult )
ENDRULE

RULE NEW Story:HtRcvryExhFlow
  DATATYPE
    Float
  LONGFORM
    HeatRecoveryExhaustFlow
  DESCRIPTION
    "The total amount of exhaust air flow that is run through a heat recovery system."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  DEFAULT
    SumRevRef( ThrmlZn:StoryRef, ThrmlZn:HtRcvryExhFlowWithMult ) 
  CHECKSIM
    if( SupOAFlow * 1.01 < HtRcvryExhFlow )
    then
      PostError("For Story %s, the total heat recovery exhaust air flow is %.0f cfm. 
                 This is %.0f cfm greater than the total supply outdoor
                 air flow for the Story. Reduce the amount of air exhausted from
                 or increase the outside air provided to the Story.",
                 Name, HtRcvryExhFlow, HtRcvryExhFlow - SupOAFlow)
    else UNCHANGED
    endif
ENDRULE







