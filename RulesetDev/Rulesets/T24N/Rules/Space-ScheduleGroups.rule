// Space - Schedule Groups
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  



// Set flag for spaces that normally have process exhaust
RULE NEW Spc:IsProcExhSpc
  DATATYPE
    Integer
  LONGFORM
    IsProcessExhaustSpace
  DESCRIPTION
    "Flag that indicates the space usually requires a process exhaust system.
     Used to manage when 'HasProcessExhaust' can be specified in the UI."
  INPUTCLASS
    NotInput  
  DEFAULT : T24N_2016
    if( IfValidAnd( SpcFunc = "Kitchen, Commercial Food Preparation" ) .OR.
        IfValidAnd( SpcFunc = "Laboratory, Scientific" ) .OR.
        IfValidAnd( SpcFunc = "Laboratory, Equipment Room" ) .OR.
        IfValidAnd( SpcFunc = "Parking Garage Building, Parking Area" ) .OR.
        IfValidAnd( SpcFunc = "Parking Garage Area Dedicated Ramps" ) .OR. 
        IfValidAnd( SpcFunc = "Parking Garage Area Daylight Adaptation Zones" ) )
    then 1
    else 0
    endif
  DEFAULT : T24N_2019
    if( IfValidAnd( SpcFunc = "Kitchen/Food Preparation Area" ) .OR.
        IfValidAnd( SpcFunc = "Scientific Laboratory Area" ) .OR.
        IfValidAnd( SpcFunc = "Parking Garage Area (Parking Zone)" ) .OR.
        IfValidAnd( SpcFunc = "Parking Garage Area (Dedicated Ramps)" ) .OR. 
        IfValidAnd( SpcFunc = "Parking Garage Area (Daylight Adaptation Zones)" ) )
    then 1
    else 0
    endif
  DEFAULT : T24N
    if( IfValidAnd( SpcFunc = "Kitchen/Food Preparation Area" ) .OR.
        IfValidAnd( SpcFunc = "Laboratory, Scientific" ) .OR. ; JP 211130 space type name change (tic #3301)
        IfValidAnd( SpcFunc = "Parking Garage Area (Parking Zone and Ramps)" ) .OR.
        IfValidAnd( SpcFunc = "Parking Garage Area (Daylight Adaptation Zones)" ) )
    then 1
    else 0
    endif
ENDRULE

RULE Spc:HasProcExh
  DESCRIPTION
    "A flag that indicates the space is a process exhaust space, as defined by
     Standard."
  HELP
    "This is currently limited to the commercial kitchen, laboratory, and 
     parking garage space functions."
  INPUTCLASS
    Default
  RESETS
    ResetThisWhenTheFollowingIsModified
      Spc:SpcFunc
  DEFAULT : T24N
    if( IsProcExhSpc > 0 )
    then 1
    else 0
    endif
  DEFAULT : S901G ECBC
// TO DO: Need space function for 90.1
    1
  CHECKCODE
    if( HasProcExh > 0 .AND.
        ( IsProcExhSpc = 0 .OR. ExhFlow = 0 ) )
    then // Flag should not be checked, so post warning 
      PostWarning("Space '%s' is specified to have Process Exhaust, but either has
                   no exhuast flow or does not qualify for having Process Exhaust.
                   This input will be ignored.", Name)
    else UNCHANGED
    endif    
  SIZING
    if( HasProcExh > 0 .AND.
        IsProcExhSpc > 0 .AND.
        ExhFlow > 0 )
    then HasProcExh
    else 0
    endif
ENDRULE


// Heating/ventilation (HV) system exception 
// -----------------------------------------------------------------------------
RULE NEW Spc:HtgOnlySysArea
  DATATYPE
    Float
  LONGFORM
    HeatingOnlySystemArea
  INPUTCLASS 
    NotInput
  DEFAULT : S901G ECBC
// See GC issue 787
    if( LocalCompAssigned( ThrmlZnRef ) .AND. 
        ( IfValidAnd( SpcFunc = "Storage" ) .OR.
          IfValidAnd( SpcFunc = "Stairway" ) .OR.
          IfValidAnd( SpcFunc = "Electrical/Mechanical" ) .OR.
          IfValidAnd( SpcFunc = "Restrooms" ) .OR.
          IfValidAnd( SpcFunc = "Corridor/Transition" ) ) )
    then
      if( IfValidAnd( ThrmlZnRef:HasHtg = 1 ) .AND.
          IfValidAnd( ThrmlZnRef:HasClg = 0 ) )
      then CondFlrArea
      else 0
      endif
    else 0
    endif
  SIZING_PROPOSED : S901G ECBC
    u:HtgOnlySysArea
//SIZING_PROPOSED : T24N
// See ThermalZone-ScheduleGroups.rule
  SIZING_BASELINE
    zp:HtgOnlySysArea
ENDRULE

// Computer Room
// -----------------------------------------------------------------------------
RULE NEW Spc:CompRmArea
  DATATYPE
    Float
  LONGFORM
    ComputerRoomArea
  INPUTCLASS 
    NotInput
  DEFAULT : T24N
    if( IfValidAnd( SpcFunc = "Computer Room" ) )
    then CondFlrArea
    else 0
    endif
  DEFAULT : S901G ECBC
// TO DO: Need space function for 90.1
    0 
ENDRULE

// Laboratory
// -----------------------------------------------------------------------------
RULE NEW Spc:LabArea
  DATATYPE
    Float
  LONGFORM
    LaboratoryArea
  INPUTCLASS 
    NotInput
  DEFAULT : T24N_2016
    if( ( IfValidAnd( SpcFunc = "Laboratory, Scientific" ) .OR.
          IfValidAnd( SpcFunc = "Laboratory, Equipment Room" ) ) 
         .AND. HasProcExh > 0 )
    then CondFlrArea
    else 0
    endif
  DEFAULT : T24N_2019
    if( IfValidAnd( SpcFunc = "Scientific Laboratory Area" ) .AND. HasProcExh > 0 )
    then CondFlrArea
    else 0
    endif
  DEFAULT : T24N
    if( IfValidAnd( SpcFunc = "Laboratory, Scientific" ) .AND. HasProcExh > 0 ) ; JP 211130 space type name change (tic #3301)
    then CondFlrArea
    else 0
    endif
  DEFAULT : S901G ECBC
    if( IfValidAnd( SpcFunc = "Laboratory - For Classrooms" ) .OR.
        IfValidAnd( SpcFunc = "Laboratory - For Medical/Industrial/Research" ) )
    then CondFlrArea
    else 0
    endif
ENDRULE

// Commercial Kitchen
// -----------------------------------------------------------------------------
RULE NEW Spc:CommKitArea
  DATATYPE
    Float
  LONGFORM
    CommercialKitchenArea
  INPUTCLASS 
    NotInput
  DEFAULT : T24N_2016
    if( IfValidAnd( SpcFunc = "Kitchen, Commercial Food Preparation" ) 
         .AND. HasProcExh > 0 )
    then CondFlrArea
    else 0
    endif
  DEFAULT : T24N
    if( IfValidAnd( SpcFunc = "Kitchen/Food Preparation Area" ) .AND. HasProcExh > 0 )
    then CondFlrArea
    else 0
    endif
  DEFAULT : S901G ECBC
// TO DO: Need space function for 90.1
    0
ENDRULE

// Process Area ( CompRm, Lab, CommKit )
// -----------------------------------------------------------------------------
RULE NEW Spc:ProcArea
  DATATYPE
    Float
  LONGFORM
    ProcArea
  DESCRIPTION
    "The total (conditioned) space floor area classified as 'Process'." 
  INPUTCLASS
    NotInput
  UNITS 
    ft2    
  SIZING_PROPOSED
    CompRmArea + LabArea + CommKitArea
  SIZING_BASELINE
    zp:ProcArea
ENDRULE

// Parking Garage
// -----------------------------------------------------------------------------
RULE NEW Spc:PrkgGarArea
  DATATYPE
    Float
  LONGFORM
    ParkingGarageArea
  INPUTCLASS 
    NotInput
  DEFAULT : T24N_2016
    if( ( IfValidAnd( SpcFunc = "Parking Garage Building, Parking Area" ) .OR.
          IfValidAnd( SpcFunc = "Parking Garage Area Dedicated Ramps" ) .OR. 
          IfValidAnd( SpcFunc = "Parking Garage Area Daylight Adaptation Zones" ) )
         .AND. HasProcExh > 0 )
    then FlrArea
    else 0
    endif
  DEFAULT : T24N_2019
    if( IfValidAnd( SpcFunc = "Parking Garage Area (Parking Zone)" ) .OR.
        IfValidAnd( SpcFunc = "Parking Garage Area (Dedicated Ramps)" ) .OR. 
        IfValidAnd( SpcFunc = "Parking Garage Area (Daylight Adaptation Zones)" ) )
    then FlrArea
    else 0
    endif
  DEFAULT : T24N
    if( ( IfValidAnd( SpcFunc = "Parking Garage Area (Parking Zone and Ramps)" ) .OR. ; JP 211130 space type name change (tic #3301)
          IfValidAnd( SpcFunc = "Parking Garage Area (Daylight Adaptation Zones)" ) )
          .AND. HasProcExh > 0 )
    then FlrArea
    else 0
    endif
  DEFAULT : S901G ECBC
    if( IfValidAnd( SpcFunc = "Parking Garage - Garage Area" ) )
    then FlrArea
    else 0
    endif
ENDRULE

// Healthcare
// See ticket 2810
// -----------------------------------------------------------------------------
RULE NEW Spc:HlthCareEligible
  DATATYPE
    Integer
  LONGFORM
    HealthCareEligible
  DESCRIPTION
    "A flag that indicate the space can be specified as 'IsHlthCare'."
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2016 S901G
    0  
  DEFAULT : T24N
    if( HasUnknownHVAC > 0 .OR.
        HasNoInternalLds > 0 .OR.
        IsRes > 0 )
    then 0
    else SpaceFunctionData:HlthCareEligible( "FuncType", Spc:SpcFunc )
    endif
ENDRULE

RULE Spc:IsHlthCare
  DESCRIPTION
    "A flag that indicates the space is considered a 'Healthcare Facility',
     per the definition in Title 24 Part 6, and therefore is eligible for
     many Exceptions in the code."
  HELP
    "Healthcare facilities have special HVAC requirements, and therefore
     systems serving these spaces are modeled the same in both the proposed
     and standard design models. Spaces identified with this option cannot be
     combined into the same ThermalZone or served by the same HVAC system
     as non-healthcare spaces. HVAC systems serving healthcare spaces are not
     exempt from mandatory minimum equipment efficiency checks."
  INPUTCLASS : T24N_2016
    NotInput
  INPUTCLASS
    Optional
  DEFAULT : T24N_2016 S901G
    0
  DEFAULT : T24N
    if( HasUnknownHVAC = 1 )
    then 0
    else
    if( HlthCareEligible > 0 .AND. Proj:HlthCareFacility > 0 )
    then 1
    else
    if( IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Exam/Treatment Room)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Imaging Room)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Medical Supply Room)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Nursery)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Nurse's Station)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Operating Room)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Patient Room)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Physical Therapy Room)" ) .OR.
        IfValidAnd ( SpcFunc = "Healthcare Facility and Hospitals (Recovery Room)" ) )
    then 1
    else 0
    endif endif endif
  CHECKCODE : T24N
    if( IsHlthCare > 0 .AND. HlthCareEligible = 0 )
    then
      PostWarning("Space '%s' has 'IsHealthCare' checked, but it uses a SpaceFunction
                   or has process systems that make it ineligible for this option.
                   This input will be ignored.", Name)
    else
    if( HlthCareEligible > 0 .AND. Proj:HlthCareFacility > 0 .AND. IsHlthCare = 0  )
    then // Proj level option is selected, but space is not.
      PostError("The project level 'Healthcare Facility' option is selected, but
                 Space '%s' has the IsHealthCare option un-selected. This is not
                 a valid combination. Uncheck the project level option if only 
                 portions of the project meet this definition.", Name)
    else UNCHANGED
    endif endif
ENDRULE

RULE NEW Spc:HlthCareArea
  DATATYPE
    Float
  LONGFORM
    HealthCareArea
  INPUTCLASS 
    NotInput
  DEFAULT : T24N_2016
    0 // Healthcare exception does not apply to 2016
  DEFAULT
    if( IsHlthCare > 0 .AND. HlthCareEligible > 0 .AND. HasUnknownHVAC = 0 )
    then CondFlrArea
    else 0
    endif
ENDRULE

// Residential Common Area
// See ticket 3180
// -----------------------------------------------------------------------------
RULE NEW Spc:ResCommonEligible
  DATATYPE
    Integer
  LONGFORM
    ResidentialCommonEligible
  DESCRIPTION
    "A flag that indicate the space can be specified as 'Residential Common' area."
  HELP
    "Qualifying spaces will be assigned to the 'ResidentialCommon' space function
     group, rather than the predominant group for that floor."
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2016 S901G
    0  
  DEFAULT : T24N
    if( HasNoInternalLds > 0 .OR.
        HasProcExh > 0 .OR.
        IsRes > 0 .OR.
        SpcFunc = "Unleased Tenant Area" )
    then 0
    else 1
    endif
ENDRULE

RULE Spc:IsResCommon
  DESCRIPTION
    "A flag that indicates the space is 'Residential Common' area."
  HELP
    "'Residential Common' areas are spaces that are associated with residential spaces,
     such as corridors, stairwells, trash rooms, etc. They are assumed to be lighted,
     ventilated, and conditioned for all hours."
  INPUTCLASS : T24N_2016
    NotInput
  INPUTCLASS
    Optional
  CHECKCODE
    if( IfValidAnd( IsResCommon > 0 ) )
    then 
      if( ResCommonEligible = 0 )
      then // Space is not eligible for being ResCommon
        PostWarning("Space '%s' has 'IsResCommon' checked, but it uses a SpaceFunction
                     or has process systems that make it ineligible for this option.
                     This input will be ignored.", Name)
      else
      if( Story:IsResCommon = 0 )
      then
        PostWarning("Space '%s' has 'IsResCommon' checked, but is on a Story that
                     has a combination of this and other nonresidential space, which
                     is currently not supported. 
                     This input will be ignored.", Name)
      else UNCHANGED
      endif endif
    else UNCHANGED    
    endif
ENDRULE

RULE NEW Spc:ResCommonArea
  DATATYPE
    Float
  LONGFORM
    ResidentialCommonArea
  INPUTCLASS 
    NotInput
  UNITS
    ft2
  DEFAULT : T24N_2016
    0 // Not used for 2016
  DEFAULT
    if( IfValidAnd( IsResCommon > 0 ) .AND. ResCommonEligible = 1 )
    then CondFlrArea
    else 0
    endif
  SIZING_PROPOSED
    if( Spc:OverallAreaNew > 0 .AND.
        ResCommonArea > 0 .AND.
        Story:IsResCommon = 0 )
    then 0 // Set ResCommonArea to 0 since the Story is not eligible
    else ResCommonArea
    endif
  SIZING_BASELINE
    zp:ResCommonArea
ENDRULE

RULE NEW Story:ResCommonArea
  DATATYPE
    Float
  LONGFORM
    ResidentialCommonArea
  INPUTCLASS 
    NotInput
  UNITS
    ft2
  DEFAULT
    SumChildren( Spc:ResCommonArea )  
ENDRULE

RULE NEW Story:ResCommonAreaWithMult
  DATATYPE
    Float
  LONGFORM
    ResidentialCommonAreaWithMultiplier
  INPUTCLASS 
    NotInput
  UNITS
    ft2
  DEFAULT
    ValidOr( ResCommonArea, 0 ) * Mult
ENDRULE

RULE NEW Story:ResCommonAreaNew
  DATATYPE
    Float
  LONGFORM
    ResidentialCommonAreaNew
  INPUTCLASS 
    NotInput
  UNITS
    ft2
  DEFAULT
    SumChildrenIf( Spc:ResCommonArea, Spc:OverallAreaNew > 0 ) 
ENDRULE

RULE NEW Story:ResCommonAreaExisting
  DATATYPE
    Float
  LONGFORM
    ResidentialCommonAreaExisting
  INPUTCLASS 
    NotInput
  UNITS
    ft2
  DEFAULT
    SumChildrenIf( Spc:ResCommonArea, Spc:OverallAreaExisting > 0 ) 
ENDRULE

RULE NEW Story:ResCommonAreaAltered
  DATATYPE
    Float
  LONGFORM
    ResidentialCommonAreaAltered
  INPUTCLASS 
    NotInput
  UNITS
    ft2
  DEFAULT
    SumChildrenIf( Spc:ResCommonArea, Spc:OverallAreaAltered > 0 ) 
ENDRULE

RULE NEW Story:IsResCommon
  DATATYPE
    Integer
  LONGFORM
    IsResidentialCommon
  DESCRIPTION
    "A flag that indicate the qualifying nonresidential spaces on the Story are 
     considered as 'ResidentialCommon' area."
  HELP
    "Currently, if all nonresidential space on a Story, excluding qualifying process
     space (per 140.9) or space qualifying for a separate Retail baseline system, is
     specified as 'ResidentialCommon', it will use the 'ResidentialCommon' schedule set.
     However, if there is a mix of 'ResidentialCommon' and other nonresidential
     space, this criteria will be ignored."
  INPUTCLASS
    NotInput
  DEFAULT : T24N_2016 S901G
    0  
  DEFAULT : T24N
    if( IfValidAnd( ResCommonAreaNew > 0 ) .AND. 
        ( ValidOr( NonResFlrAreaNewWithMult, 0 ) / Mult -
          ValidOr( HlthCareArea, 0 ) -
          ValidOr( ProcAreaNew, 0 ) - // Lab, CompRm, CommKit
          ValidOr( RetailAreaNew, 0 ) ) < ValidOr( ResCommonAreaNew, 0 ) * 1.001 ) // Allow for small tol on diff
    then 1
    else 0
    endif
ENDRULE

// ********** Schedule Group ***************************************************
RULE Spc:FuncSchGrp
  DESCRIPTION
    "The schedule group for the Space." 
  HELP : T24N_2016
    "Currently there are 13 schedule groups defined in the ruleset library.
     A schedule group is a set of schedules that represent the houly and daily
     variation of design simulation parameters, such as occupancy, lighting, etc.
     Internal load schedules are coordinated with HVAC schedules, such as
     availability and thermostat setpoints.


     Upon initiation of compliance analysis, rules determine the predominant
     schedule group, based on floor area, for each BuildingStory. For T24
     compliance, this determination is prescribed."
  HELP
    "Currently there are 13 schedule groups defined in the ruleset library.
     A schedule group is a set of schedules that represent the houly and daily
     variation of design simulation parameters, such as occupancy, lighting, etc.
     Internal load schedules are coordinated with HVAC schedules, such as
     availability and thermostat setpoints.


     Upon initiation of compliance analysis, rules determine the predominant
     schedule group, based on floor area, for each BuildingStory. Exceptions to
     to the predominant determination are Lab, Data, Parking and 
     ResidentialCommon functions, which are assigned thier respective schedule 
     groups regardless of the the BuildingStory predominant group. For T24
     compliance, the schedule groups and corresponding schedules prescribed."
  REFERENCE 
    NACM Section 2.3.3
    NACM Section 5.4.1
    Appendix 5.4A
  INPUTCLASS
// DR: was previously defined as Precribed. Changed to NotInput for v3d.
// Ticket 3142: Changed to Optional to allow users to edit the FuncSchGrp for 
// select SpcFunc identified in TABLE SpaceFunctionData:FuncSchGrpIsEditable
    Optional
// OPTION list defined in BEMEnums.txt to facilitate Building:FuncClassMthd & CompleteBldgFunc dependencies
  DEFAULT : T24N_2016
    if( HasNoInternalLds )
    then UNDEFINED
    else SpaceFunctionData:FuncSchGrp("FuncType", SpcFunc)
    endif
  DEFAULT
    if( HasNoInternalLds )
    then UNDEFINED
    else
    if( HlthCareArea > 0 )
    then "Health" // Revise FunchGrp to Health for schedule rules
    else
    if( ResCommonArea > 0 )
    then "ResidentialCommon"
    else 
    if( LocalCompAssigned( SpcFuncDefaultsRef ) .AND. LocalStatus( SpcFunc ) = 4 )
    then SpcFuncDefaultsRef:FuncSchGrp 
    else SpaceFunctionData:FuncSchGrp("FuncType", SpcFunc)
    endif endif endif endif
// See below for SIZING
  SIZING_PROPOSED
    if( Spc:OverallAreaNew > 0 .AND.
        ResCommonArea > 0 .AND.
        Story:IsResCommon = 0 )
    then // Reset FuncSchGrp to what would be default for ResCommonArea
      SpaceFunctionData:FuncSchGrp("FuncType", SpcFunc)
    else FuncSchGrp
    endif
ENDRULE

// Set the Presribed FuncSchGrp for reference
RULE NEW Spc:PrescribedFuncSchGrp
  DATATYPE
    String
  LONGFORM
   PrescribedFunctionScheduleGroup
  INPUTCLASS
    NotInput
  DEFAULT
    if( HasNoInternalLds )
    then "- specify -"
    else
    if( HlthCareArea > 0 )
    then "Health" // Revise FunchGrp to Health for schedule rules
    else
    if( ResCommonArea > 0 )
    then "ResidentialCommon"
    else SpaceFunctionData:FuncSchGrp("FuncType", SpcFunc)
    endif endif endif
ENDRULE

// Set flag as to whether to include space in Predominant schedule determination
RULE NEW Spc:ExcludeSpcFromPredominantCalc
  DATATYPE
    Integer
  LONGFORM
    ExcludeSpcFromPredominantCalculation
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( LocalStatus( SpcFunc ) > 0 .AND. SpcFunc != "- specify -" )
    then SpaceFunctionData:ExcludeFromPredominantCalc("FuncType", SpcFunc )
    else 0
    endif
ENDRULE

// Set flag as to whether tthe FuncSchGrp can be edited
; mod to ensure SpaceFunctionData:* not looked up when SpcFunc = "- specify -" - SAC 08/23/21
RULE NEW Spc:FuncSchGrpIsEditable
  DESCRIPTION
    "The schedule group for the space is editable"
  DATATYPE
    Integer
  LONGFORM
    FunctionScheduleGroupIsEditable
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalStatus( SpcFunc ) > 0 .AND. SpcFunc != "- specify -" )
    then SpaceFunctionData:FuncSchGrpIsEditable("FuncType", SpcFunc)
    else 0
    endif
  CHECKCODE
//   Adding CHECKCODE to stop analysis if user edits FuncSchGrp when not allowed
    if( FuncSchGrpIsEditable = 0 .AND.
        LocalStatus( FuncSchGrp ) > 0 .AND.
        IfValidAnd( FuncSchGrp != PrescribedFuncSchGrp ) )
    then 
      PostError("Space '%s' has a FunctionScheduleGroup that differs from what is
                 prescribed for this ruleset. Please remove this user input or
                 change to the value that is prescribed.", Name)
    else UNCHANGED
    endif                   
ENDRULE

// ********** Predominant Schedule Group For Story *******************************
// A primary FuncSchGroup is determined for each floor based on the predominant 
// FuncSchGrp of directly conditioned (DC) or indirectly conditioned (IC) spaces.

// Step 1: Calculate function group conditioned area for Story
RULE NEW Spc:FlrAreaForPredominantCalc
  DATATYPE
    Float
  LONGFORM
    FloorAreaForPredominantCalculation
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    if( IfValidAnd( ExcludeSpcFromPredominantCalc > 0 ) )
    then 0
    else CondFlrAreaWithMult
    endif
ENDRULE

RULE NEW Story:FuncGrpAreaAssembly
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaAssembly
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Assembly" )
  SIZING_BASELINE
    zp:FuncGrpAreaAssembly
  ANNUAL
    z:FuncGrpAreaAssembly
ENDRULE
RULE NEW Story:FuncGrpAreaData
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaData
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Data" )
  SIZING_BASELINE
    zp:FuncGrpAreaData
  ANNUAL
    z:FuncGrpAreaData
ENDRULE
RULE NEW Story:FuncGrpAreaHealth
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaHealth
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Health" )
  SIZING_BASELINE
    zp:FuncGrpAreaHealth
  ANNUAL
    z:FuncGrpAreaHealth
ENDRULE
RULE NEW Story:FuncGrpAreaLab
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaLab
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Lab" )
  SIZING_BASELINE
    zp:FuncGrpAreaLab
  ANNUAL
    z:FuncGrpAreaLab
ENDRULE
RULE NEW Story:FuncGrpAreaManufacturing
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaManufacturing
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Manufacturing" )
  SIZING_BASELINE
    zp:FuncGrpAreaManufacturing
  ANNUAL
    z:FuncGrpAreaManufacturing
ENDRULE
RULE NEW Story:FuncGrpAreaOffice
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaOffice
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Office" )
  SIZING_BASELINE
    zp:FuncGrpAreaOffice
  ANNUAL
    z:FuncGrpAreaOffice
ENDRULE
RULE NEW Story:FuncGrpAreaParking
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaParking
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
// Sum CondFlrArea
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Parking" )
  SIZING_BASELINE
    zp:FuncGrpAreaParking
  ANNUAL
    z:FuncGrpAreaParking
ENDRULE
RULE NEW Story:FuncGrpAreaResidentialCommon
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaResidentialCommon
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "ResidentialCommon" )
  SIZING_BASELINE
    zp:FuncGrpAreaResidentialCommon
  ANNUAL
    z:FuncGrpAreaResidentialCommon
ENDRULE
RULE NEW Story:FuncGrpAreaResidentialLiving
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaResidentialLiving
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "ResidentialLiving" )
  SIZING_BASELINE
    zp:FuncGrpAreaResidentialLiving
  ANNUAL
    z:FuncGrpAreaResidentialLiving
ENDRULE
RULE NEW Story:FuncGrpAreaRestaurant
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaRestaurant
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Restaurant" )
  SIZING_BASELINE
    zp:FuncGrpAreaRestaurant
  ANNUAL
    z:FuncGrpAreaRestaurant
ENDRULE
RULE NEW Story:FuncGrpAreaRetail
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaRetail
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Retail" )
  SIZING_BASELINE
    zp:FuncGrpAreaRetail
  ANNUAL
    z:FuncGrpAreaRetail
ENDRULE
RULE NEW Story:FuncGrpAreaSchool
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaSchool
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "School" )
  SIZING_BASELINE
    zp:FuncGrpAreaSchool
  ANNUAL
    z:FuncGrpAreaSchool
ENDRULE
RULE NEW Story:FuncGrpAreaWarehouse
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaWarehouse
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildrenIf( Spc:FlrAreaForPredominantCalc, Spc:FuncSchGrp = "Warehouse" )
  SIZING_BASELINE
    zp:FuncGrpAreaWarehouse
  ANNUAL
    z:FuncGrpAreaWarehouse
ENDRULE

// Step 2:  Calculate the FuncSchGrp classification with the most area on each Story
RULE NEW Story:MaxFuncGrpArea
  DATATYPE
    Float
  LONGFORM
    MaxFunctionGroupArea
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
// Old rule before adding IsResCommon
// Exclude process spaces Laboratory, Data, and ParkingGarage from consideration
;   Max(Max(Max(FuncGrpAreaAssembly,
;               FuncGrpAreaHealth),
;           Max(Max(FuncGrpAreaManufacturing,
;                   FuncGrpAreaOffice),
;                   FuncGrpAreaResidentialCommon)),
;       Max(Max(FuncGrpAreaRestaurant,
;               FuncGrpAreaRetail),            
;           Max(FuncGrpAreaSchool,
;               FuncGrpAreaWarehouse)))
// New rule after adding IsResCommon, see ticket 3180
// Exclude process spaces Laboratory, Data, ResidentialCommon and ParkingGarage from consideration
    Max(Max(Max(FuncGrpAreaAssembly,
                FuncGrpAreaHealth),
            Max(FuncGrpAreaManufacturing,
                FuncGrpAreaOffice)),
        Max(Max(FuncGrpAreaRestaurant,
                FuncGrpAreaRetail),            
            Max(FuncGrpAreaSchool,
                FuncGrpAreaWarehouse)))
  SIZING_BASELINE
    zp:MaxFuncGrpArea
  ANNUAL  
    z:MaxFuncGrpArea
ENDRULE

// Step 3a: Determine the Story:FuncGrpAreaXXXX that corresponds to the 
//         Story:MaxFuncGrpArea, and use to specify the PredominantFuncGrp 
//         for the Story
//         mod: replaced 'Residential Common' w/ 'ResidentialCommon' - SAC 08/23/21
RULE NEW Story:PredominantFuncGrp
  DATATYPE
    String
  LONGFORM
    PredominantFunctionGroup
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
// Exclude process spaces Laboratory, Data, and ParkingGarage from consideration
    if( MaxFuncGrpArea = 0)
    then if( Story:ResFlrAreaNewWithMult > 0 ) 
         then "ResidentialCommon" // for apartment/hotel
         else if( Story:LabArea > 0 )
         then "Laboratory" // for laboratory
         else "Office" // for other cases where MaxFuncGrpArea = 0, such as data and parking
         endif endif
    else if( MaxFuncGrpArea = FuncGrpAreaAssembly )
    then "Assembly"
    else if( MaxFuncGrpArea = FuncGrpAreaHealth )
    then "Health"
    else if( MaxFuncGrpArea = FuncGrpAreaManufacturing )
    then "Manufacturing"
    else if( MaxFuncGrpArea = FuncGrpAreaOffice )
    then "Office"
    else if( MaxFuncGrpArea = FuncGrpAreaResidentialCommon )
    then "ResidentialCommon"
    else if( MaxFuncGrpArea = FuncGrpAreaRestaurant )
    then "Restaurant"
    else if( MaxFuncGrpArea = FuncGrpAreaRetail )
    then "Retail"
    else if( MaxFuncGrpArea = FuncGrpAreaSchool )
    then "School"
    else if( MaxFuncGrpArea = FuncGrpAreaWarehouse )
    then "Warehouse"
    else "Office" // Default predominant group to be used if not other is determined
    endif endif endif endif endif
    endif endif endif endif endif
  SIZING_BASELINE
    zp:PredominantFuncGrp
  ANNUAL  
    z:PredominantFuncGrp
ENDRULE


// Step 3b: Determine the Bldg:FuncGrpAreaXXXX based on total building FuncGrpArea
// Ticket 3330/3304: Added to support defining 2022 systems based on Bldg type - DR 2/10/22
RULE NEW Bldg:FuncGrpAreaAssembly
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaAssembly
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaAssembly )
  SIZING_BASELINE
    zp:FuncGrpAreaAssembly
  ANNUAL
    z:FuncGrpAreaAssembly
ENDRULE
RULE NEW Bldg:FuncGrpAreaData
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaData
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaData )
  SIZING_BASELINE
    zp:FuncGrpAreaData
  ANNUAL
    z:FuncGrpAreaData
ENDRULE
RULE NEW Bldg:FuncGrpAreaHealth
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaHealth
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaHealth )
  SIZING_BASELINE
    zp:FuncGrpAreaHealth
  ANNUAL
    z:FuncGrpAreaHealth
ENDRULE
RULE NEW Bldg:FuncGrpAreaLab
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaLab
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaLab )
  SIZING_BASELINE
    zp:FuncGrpAreaLab
  ANNUAL
    z:FuncGrpAreaLab
ENDRULE
RULE NEW Bldg:FuncGrpAreaManufacturing
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaManufacturing
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaManufacturing )
  SIZING_BASELINE
    zp:FuncGrpAreaManufacturing
  ANNUAL
    z:FuncGrpAreaManufacturing
ENDRULE
RULE NEW Bldg:FuncGrpAreaOffice
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaOffice
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaOffice )
  SIZING_BASELINE
    zp:FuncGrpAreaOffice
  ANNUAL
    z:FuncGrpAreaOffice
ENDRULE
RULE NEW Bldg:FuncGrpAreaParking
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaParking
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
// Sum CondFlrArea
    SumChildren( Story:FuncGrpAreaParking )
  SIZING_BASELINE
    zp:FuncGrpAreaParking
  ANNUAL
    z:FuncGrpAreaParking
ENDRULE
RULE NEW Bldg:FuncGrpAreaResidentialCommon
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaResidentialCommon
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaResidentialCommon )
  SIZING_BASELINE
    zp:FuncGrpAreaResidentialCommon
  ANNUAL
    z:FuncGrpAreaResidentialCommon
ENDRULE
RULE NEW Bldg:FuncGrpAreaResidentialLiving
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaResidentialLiving
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaResidentialLiving )
  SIZING_BASELINE
    zp:FuncGrpAreaResidentialLiving
  ANNUAL
    z:FuncGrpAreaResidentialLiving
ENDRULE
RULE NEW Bldg:FuncGrpAreaRestaurant
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaRestaurant
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaRestaurant )
  SIZING_BASELINE
    zp:FuncGrpAreaRestaurant
  ANNUAL
    z:FuncGrpAreaRestaurant
ENDRULE
RULE NEW Bldg:FuncGrpAreaRetail
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaRetail
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaRetail )
  SIZING_BASELINE
    zp:FuncGrpAreaRetail
  ANNUAL
    z:FuncGrpAreaRetail
ENDRULE
RULE NEW Bldg:FuncGrpAreaSchool
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaSchool
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaSchool )
  SIZING_BASELINE
    zp:FuncGrpAreaSchool
  ANNUAL
    z:FuncGrpAreaSchool
ENDRULE
RULE NEW Bldg:FuncGrpAreaWarehouse
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaWarehouse
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    SumChildren( Story:FuncGrpAreaWarehouse )
  SIZING_BASELINE
    zp:FuncGrpAreaWarehouse
  ANNUAL
    z:FuncGrpAreaWarehouse
ENDRULE

// Step 3c:  Calculate the FuncSchGrp classification with the most area for the Building
RULE NEW Bldg:MaxFuncGrpArea
  DATATYPE
    Float
  LONGFORM
    MaxFunctionGroupArea
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
// Exclude process spaces Laboratory, Data, ResidentialCommon and ParkingGarage from consideration
    Max(Max(Max(FuncGrpAreaAssembly,
                FuncGrpAreaHealth),
            Max(FuncGrpAreaManufacturing,
                FuncGrpAreaOffice)),
        Max(Max(FuncGrpAreaRestaurant,
                FuncGrpAreaRetail),            
            Max(FuncGrpAreaSchool,
                FuncGrpAreaWarehouse)))
  SIZING_BASELINE
    zp:MaxFuncGrpArea
  ANNUAL  
    z:MaxFuncGrpArea
ENDRULE

// Step 3d: Determine the Bldg:FuncGrpAreaXXXX that corresponds to the 
//         Bldg:MaxFuncGrpArea, and use to specify the PredominantFuncGrp 
//         for the Building
RULE NEW Bldg:PredominantFuncGrp
  DATATYPE
    String
  LONGFORM
    PredominantFunctionGroup
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
// Exclude process spaces Laboratory, Data, and ParkingGarage from consideration
    if( MaxFuncGrpArea = 0)
    then if( Bldg:ResFlrAreaNew > 0 ) 
         then "ResidentialCommon"  // for apartment/hotel
         else if( Bldg:LabArea > 0 )
         then "Laboratory" // for laboratory
         else "Office" // for other cases where MaxFuncGrpArea = 0, such as data and parking
         endif endif
    else if( MaxFuncGrpArea = FuncGrpAreaAssembly )
    then "Assembly"
    else if( MaxFuncGrpArea = FuncGrpAreaHealth )
    then "Health"
    else if( MaxFuncGrpArea = FuncGrpAreaManufacturing )
    then "Manufacturing"
    else if( MaxFuncGrpArea = FuncGrpAreaOffice )
    then "Office"
    else if( MaxFuncGrpArea = FuncGrpAreaResidentialCommon )
    then "ResidentialCommon"
    else if( MaxFuncGrpArea = FuncGrpAreaRestaurant )
    then "Restaurant"
    else if( MaxFuncGrpArea = FuncGrpAreaRetail )
    then "Retail"
    else if( MaxFuncGrpArea = FuncGrpAreaSchool )
    then "School"
    else if( MaxFuncGrpArea = FuncGrpAreaWarehouse )
    then "Warehouse"
    else "Office" // Default predominant group to be used if not other is determined
    endif endif endif endif endif
    endif endif endif endif endif
  SIZING_BASELINE
    zp:PredominantFuncGrp
  ANNUAL  
    z:PredominantFuncGrp
ENDRULE

// Step 4: Specify the Spc:FuncSchGrp to be the Story:PredominantFuncGrp
// First store value before setting to Predominant
RULE NEW Spc:OriginalFuncSchGrp
  DATATYPE
    String
  LONGFORM
    OriginalFunctionScheduleGroup
  SIZING
    ValidOr( FuncSchGrp, "Office" )
ENDRULE

RULE Spc:FuncSchGrp
  SIZING_PROPOSED
    if( CondgType = "Plenum" ) 
    then UNDEFINED // See Issue 1848.  A default is needed for other HasNoInternalLds cases
    // The following are exceptions to using the Story:PredominantFuncGrp
    else if( IsRes > 0 )
    then "ResidentialLiving"
    else if( CompRmArea > 0 )
    then "Data"
    else if( LabArea > 0 )
    then "Laboratory"
    else if( CommKitArea > 0 )
    then "Restaurant"
    else if( PrkgGarArea > 0 )
    then "Parking"
    else if( ResCommonArea > 0 )
    then "ResidentialCommon"
    // For all other cases, use Story:PredominantFuncGrp
    else Story:PredominantFuncGrp
    endif endif endif endif 
    endif endif endif
  SIZING_BASELINE
    zp:FuncSchGrp
  ANNUAL
    z:FuncSchGrp
ENDRULE

// Step 5: Specify Spc:FuncGrpAreaXXXX, based on predominant Story condition.  
//         Used to determine internal load, thermal zone thermostat
//         and HVAC availability schedules  
RULE NEW Spc:FuncGrpAreaAssembly
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaAssembly
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Assembly" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaAssembly
  ANNUAL
    z:FuncGrpAreaAssembly
ENDRULE
RULE NEW Spc:FuncGrpAreaData
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaData
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Data" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaData
  ANNUAL
    z:FuncGrpAreaData
ENDRULE
RULE NEW Spc:FuncGrpAreaHealth
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaHealth
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Health" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaHealth
  ANNUAL
    z:FuncGrpAreaHealth
ENDRULE
RULE NEW Spc:FuncGrpAreaLab
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaLab
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Laboratory" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaLab
  ANNUAL
    z:FuncGrpAreaLab
ENDRULE
RULE NEW Spc:FuncGrpAreaManufacturing
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaManufacturing
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Manufacturing" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaManufacturing
  ANNUAL
    z:FuncGrpAreaManufacturing
ENDRULE
RULE NEW Spc:FuncGrpAreaOffice
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaOffice
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Office" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaOffice
  ANNUAL
    z:FuncGrpAreaOffice
ENDRULE
RULE NEW Spc:FuncGrpAreaParking
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaParking
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Parking" )
    then CondFlrAreaWithMult + FlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaParking
  ANNUAL
    z:FuncGrpAreaParking
ENDRULE
RULE NEW Spc:FuncGrpAreaResidentialCommon
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaResidentialCommon
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "ResidentialCommon" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaResidentialCommon
  ANNUAL
    z:FuncGrpAreaResidentialCommon
ENDRULE
RULE NEW Spc:FuncGrpAreaResidentialLiving
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaResidentialLiving
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "ResidentialLiving" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaResidentialLiving
  ANNUAL
    z:FuncGrpAreaResidentialLiving
ENDRULE
RULE NEW Spc:FuncGrpAreaRestaurant
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaRestaurant
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Restaurant" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaRestaurant
  ANNUAL
    z:FuncGrpAreaRestaurant
ENDRULE
RULE NEW Spc:FuncGrpAreaRetail
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaRetail
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Retail" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaRetail
  ANNUAL
    z:FuncGrpAreaRetail
ENDRULE
RULE NEW Spc:FuncGrpAreaSchool
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaSchool
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "School" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaSchool
  ANNUAL
    z:FuncGrpAreaSchool
ENDRULE
RULE NEW Spc:FuncGrpAreaWarehouse
  DATATYPE
    Float
  LONGFORM
    FunctionGroupAreaWarehouse
  INPUTCLASS 
    NotInput
  SIZING_PROPOSED
    if( FuncSchGrp = "Warehouse" )
    then CondFlrAreaWithMult
    else 0
    endif
  SIZING_BASELINE
    zp:FuncGrpAreaWarehouse
  ANNUAL
    z:FuncGrpAreaWarehouse
ENDRULE

// Retail
// -----------------------------------------------------------------------------
RULE NEW Bldg:IsRetailBldg
  DATATYPE
    Integer
  LONGFORM
    IsRetailBuilding
  DESCRIPTION
    "A flag that indicates the predominant function schedule group for the 
     building is 'Retail'. This is for reference only."
  INPUTCLASS
    NotInput
  DEFAULT
    0
  SIZING_PROPOSED
    if( IfValidAnd( PredominantFuncGrp = "Retail" ) .AND.
        IfValidAnd( AboveGrdStoryCnt <= 3 ) )
    then 1 // Building is Retail, <= 3 stories
    else 0
    endif
  SIZING_BASELINE
   zp:IsRetailBldg
ENDRULE

RULE NEW Spc:RetailArea
  DATATYPE
    Float
  LONGFORM
    RetailArea
  DESCRIPTION
    "The (conditioned) space floor area that qualifies
     for a 'Retail' building standard design system." 
  INPUTCLASS
    NotInput
  UNITS 
    ft2     
  DEFAULT
    0 
  SIZING : T24N_2016
    0 // 2016 does not have separate Retail system
  SIZING_PROPOSED : T24N_2019
    if( IfValidAnd( Story:PredominantFuncGrp = "Retail" ) .AND.
        IfValidAnd( Bldg:AboveGrdStoryCnt <= 2 ) )
    then CondFlrArea
    else 0
    endif
  SIZING_PROPOSED
    if( IfValidAnd( Story:PredominantFuncGrp = "Retail" ) .AND.
        IfValidAnd( Bldg:AboveGrdStoryCnt <= 3 ) )
    then CondFlrArea
    else 0
    endif  
  SIZING_BASELINE
    zp:RetailArea
ENDRULE

// School
// -----------------------------------------------------------------------------
RULE NEW Bldg:IsSchoolBldg
  DATATYPE
    Integer
  LONGFORM
    IsSchoolBuilding
  INPUTCLASS
    NotInput
  DESCRIPTION
    "A flag that indicates the predominant function schedule group for the 
     building is 'School'. This is for reference only."
  DEFAULT
    0
  SIZING_PROPOSED
    if( IfValidAnd( PredominantFuncGrp = "School" ) .AND.
        IfValidAnd( AboveGrdStoryCnt <= 3 ) )
    then 1 // Building is School, <= 3 stories
    else 0
    endif
  SIZING_BASELINE
   zp:IsSchoolBldg
ENDRULE

RULE NEW Spc:SchoolArea
  DATATYPE
    Float
  LONGFORM
    SchoolArea
  DESCRIPTION
    "The (conditioned) space floor area that qualifies
     for a 'School' building standard design system." 
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  DEFAULT
    0
  SIZING : T24N_2016 T24N_2019
    0 // 2016/2019 does not have separate School system
  SIZING_PROPOSED
    if( IfValidAnd( Story:PredominantFuncGrp = "School" ) .AND.
        IfValidAnd( Bldg:AboveGrdStoryCnt <= 3 ) )
    then CondFlrArea
    else 0
    endif     
  SIZING_BASELINE
    zp:SchoolArea
ENDRULE

// Office
// -----------------------------------------------------------------------------
RULE NEW Bldg:IsOfficeBldg
  DATATYPE
    Integer
  LONGFORM
    IsOfficeBuilding
  INPUTCLASS
    NotInput
  DESCRIPTION
    "A flag that indicates the predominant function schedule group for the 
     building is 'Office'. This is for reference only."
  DEFAULT
    0
  SIZING_PROPOSED
    if( IfValidAnd( PredominantFuncGrp = "Office" ) .AND.
        IfValidAnd( AboveGrdStoryCnt <= 3 ) )
    then 1 // Building is Office, <= 3 stories
    else 0
    endif
  SIZING_BASELINE
   zp:IsOfficeBldg
ENDRULE

RULE NEW Spc:OfficeArea
  DATATYPE
    Float
  LONGFORM
    OfficeArea
  DESCRIPTION
    "The (conditioned) space floor area that qualifies
     for a 'Office' building standard design system." 
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  DEFAULT
    0
  SIZING : T24N_2016 T24N_2019
    0 // 2016/2019 does not have separate Office system
  SIZING_PROPOSED
    if( IfValidAnd( Story:PredominantFuncGrp = "Office" ) .AND.
        IfValidAnd( Bldg:AboveGrdStoryCnt <= 3 ) )
    then CondFlrArea
    else 0
    endif     
  SIZING_BASELINE
    zp:OfficeArea
ENDRULE

// Warehouse
// -----------------------------------------------------------------------------
RULE NEW Bldg:IsWarehouseBldg
  DATATYPE
    Integer
  LONGFORM
    IsWarehouseBuilding
  DESCRIPTION
    "A flag that indicates the predominant function schedule group for the 
     building is 'Warehouse'. This is to determine if the 'Office in 
     warehouse/manufacturing buildings' system type is applicable."
  INPUTCLASS
    NotInput
  DEFAULT
    0
  SIZING_PROPOSED
    if( IfValidAnd( PredominantFuncGrp = "Warehouse" ) .AND.
        IfValidAnd( AboveGrdStoryCnt <= 3 ) )
    then 1 // Building is Warehouse, <= 3 stories
    else 0
    endif
  SIZING_BASELINE
   zp:IsWarehouseBldg
ENDRULE
RULE NEW Spc:WarehouseOfficeArea
  DATATYPE
    Float
  LONGFORM
    WarehouseOfficeArea
  DESCRIPTION
    "The total (conditioned) space floor area for a building that qualifies
     for a 'Office in warehouse/manufacturing buildings' system type."
  INPUTCLASS
    NotInput
  UNITS 
    ft2
  DEFAULT
    0
  SIZING : T24N_2016 T24N_2019
    0 // 2016/2019 does not have separate Office system
  SIZING_PROPOSED
    if( IfValidAnd( Bldg:IsWarehouseBldg > 0 ) .AND.
        IfValidAnd( OriginalFuncSchGrp = "Office" ) )
    then CondFlrArea
    else 0
    endif     
  SIZING_BASELINE
    zp:WarehouseOfficeArea
ENDRULE

// ---------- Section 2.3.3 - Space Use Classifications ------------------------
// Calculate space internal loads
RULE NEW Spc:CombinedInternalLds
  DATATYPE
    Float
  LONGFORM
    CombinedInternalLoads
  DESCRIPTION
    "The combined lighting, receptacle, and process equipment power density for
     a space."  
  HELP
    "The combined lighting (regulated and nonregulated), receptacle, and 
     process equipment power density is used to as the primary criteria for 
     combining spaces into thermal zones."  
  REFERENCE 
    NACM Section 2.3.3
  INPUTCLASS
    NotInput
;  MINIMUM 
;    0
;  COMMONMINIMUM
;    0.1
;  COMMONMAXIMUM
;    10
;  MAXIMUM 
;    100
  UNITS 
    W/ft2
  SIZING_PROPOSED
    ( ValidOr( IntLPDRegSim, 0 ) * ( ValidOr( IntLtgRegHtGnSpcFrac, 0 ) + ValidOr( IntLtgRegHtGnRadFrac, 0 ) ) +
      ValidOr( IntLPDNonRegSim, 0 ) * ( ValidOr( IntLtgNonRegHtGnSpcFrac, 0 ) + ValidOr( IntLtgNonRegHtGnRadFrac, 0 ) ) ) +
    ValidOr( RecptPwrDens, 0 ) +
    ( ValidOr( GasEqpPwrDens, 0 ) * ( 1 - ValidOr( GasEqpLostFrac, 0 ) ) / 3.412 ) +
    ValidOr( ProcElecPwrDens, 0 ) + 
    ( ValidOr( ProcGasPwrDens, 0 ) * ( 1- ValidOr( ProcGasLostFrac, 0 ) ) / 3.412 )
  SIZING_BASELINE
    zp:CombinedInternalLoads
  ANNUAL 
    z:CombinedInternalLoads
ENDRULE
