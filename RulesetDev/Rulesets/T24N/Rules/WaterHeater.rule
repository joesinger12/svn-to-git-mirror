
// Water Heating
// For all Space Types with Hot Water Heating Rates
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//



// -------------- SHW Fluid System Status --------------------
RULE NEW FluidSys:IsNewSHW
  DATATYPE
    Integer
  LONGFORM
    IsNewServiceHotWater
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "ServiceHotWater" .AND. ( Status = "New" .OR. Status = "Altered") ) 
    then 1 
    else 0 
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW FluidSys:IsExistingSHW
  DATATYPE
    Integer
  LONGFORM
    IsExistingServiceHotWater
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "ServiceHotWater" .AND. Status = "Existing" ) 
    then 1 
    else 0 
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW FluidSys:InBldgSHW
  DATATYPE
    Integer
  LONGFORM
    InBuildingServiceHotWater
  DESCRIPTION
    "This is used to count the number of SHW Fluid Systems in the building."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IsNewSHW .OR. IsExistingSHW ) then 1 else 0 endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW FluidSys:IsComboSpcWtrHtgSys
  DATATYPE
    Integer
  LONGFORM
    IsCombinedSpaceWaterHeatingSystem
  DESCRIPTION
    "A flag to identify whether the FluidSystem is a combined space and water heating
     system."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "ServiceHotWater" .AND.
        SumRevRef( CoilHtg:FluidSysRef, CoilHtg:CapHydronic ) > 0 )
    then 1
    else 0
    endif
ENDRULE

RULE NEW FluidSeg:IsComboSpcWtrHtgSys
  DATATYPE
    Integer
  LONGFORM
    IsCombinedSpaceWaterHeatingSystem
  DESCRIPTION
    "A flag to identify whether the FluidSystem is a combined space and water heating
     system."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IsSecSeg > 0 .AND.
        FluidSys:IsComboSpcWtrHtgSys > 0 )
    then 1
    else 0
    endif
  CHECKCODE
// Add checks to ensure combo space/water heating systems have a fluid segments
// and pump for each heating coil. This is how it needs to be translated for E+.
// Previously OS translator would create branches and branch pumps
// See Ticket 3291
    if( IsComboSpcWtrHtgSys > 0 )
    then  
      if( CountRefs( CoilHtg:FluidSegInRef ) > 1 )
      then // FluidSeg is referenced by more than one coil
        PostError("FluidSeg '%s' is part of a combined space/water heating system,
                   and is referenced by more than one CoilHtg object. Every CoilHtg
                   object must be connected to its own FluidSeg with a child Pump.", 
                   Name)
      else
      if( Type = "SecondarySupply" .AND.
          ChildCount( Pump ) < 1 )
      then // FluidSeg for heating coil does not have a pump
        PostError("FluidSeg '%s' is the secondary segment of a combined 
                   space/water heating system, but does not have a Pump. Every CoilHtg
                   object must be connected to its own FluidSeg with a child Pump.", 
                   Name) 
      else UNCHANGED
      endif endif
    else UNCHANGED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW FluidSeg:IsResAndCombo
  DATATYPE
    Integer
  LONGFORM
    IsResidentialAndComboDHWHeating
  DESCRIPTION
    "A flag to identify fluid segments that are part of a residential 
     combination space and water heating system."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Parent(Type) = "ServiceHotWater" )
    then
      SumRevRef(Spc:SHWFluidSegRef, Spc:IsResAndCombo)
    else if( Parent(Type) <> "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif endif
  SIZING
    if( Parent(Type) = "ServiceHotWater" )
    then
      SumRevRef(Spc:SHWFluidSegRef, Spc:IsResAndCombo)
    else if( Parent(Type) <> "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif endif
  ANNUAL
    z:IsResAndCombo
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW FluidSys:IsResAndCombo
  DATATYPE
    Integer
  LONGFORM
    IsResidentialAndComboDHWHeating
  DESCRIPTION
    "A flag to identify fluid systems that are part of a residential 
     combination space and water heating system."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( SumAll(FluidSeg:IsResAndCombo) > 0 )
      then 1
      else 0
      endif
    else if( Type <> "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif endif
  SIZING
    if( Type = "ServiceHotWater" )
    then
      if( SumAll(FluidSeg:IsResAndCombo) > 0 )
      then 1
      else 0
      endif
    else if( Type <> "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif endif
  ANNUAL
    z:IsResAndCombo
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:IsResAndCombo
  DATATYPE
    Integer
  LONGFORM
    IsResidentialAndComboDHWHeating
  DESCRIPTION
    "A flag to identify water heaters that are part of a residential 
     combination space and water heating system."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Parent(IsResAndCombo) )
    then 1
    else 0
    endif
  SIZING
    if( Parent(IsResAndCombo) )
    then 1
    else 0
    endif
  ANNUAL
    z:IsResAndCombo
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:FluidSysHtg
  DESCRIPTION
    "A flag indicating whether or not the parent FluidSys is of Type HotWater or CondenserWater."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( FluidSys:Type = "HotWater" ) .OR. IfValidAnd( FluidSys:Type = "CondenserWater" ) )
    then 1
    else 0
    endif
//  CHECKCODE
//    if( FluidSysHtg = 1 )
//    then
//      PostError("Water Heater '%s' is assigned to a HotWater or CondenserWater 
//                 fluid system.  Water heaters are only allowed on 
//                 ServiceHotWater fluid systems.  Use a conventional boiler to 
//                 provide space heating.", Name )
//    else UNCHANGED
//	  endif
  SIZING
    if( IfValidAnd( FluidSys:Type = "HotWater" ) .OR. IfValidAnd( FluidSys:Type = "CondenserWater" ) )
    then 1
    else 0
    endif
  ANNUAL
    if( IfValidAnd( FluidSys:Type = "HotWater" ) .OR. IfValidAnd( FluidSys:Type = "CondenserWater" ) )
    then 1
    else 0
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:FluidSysSHW
  DESCRIPTION
    "A flag indicating whether or not the parent FluidSys is of Type ServiceHotWater."
  DATATYPE
    Integer
  LONGFORM
    FluidSystemServiceHotWater
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( FluidSys:Type = "ServiceHotWater" ) )
    then 1
    else 0
    endif
  SIZING
    if( IfValidAnd( FluidSys:Type = "ServiceHotWater" ) )
    then 1
    else 0
    endif
  ANNUAL
    if( IfValidAnd( FluidSys:Type = "ServiceHotWater" ) )
    then 1
    else 0
    endif
ENDRULE

// -------------- Water Heater Status --------------------
RULE WtrHtr:Status
  DESCRIPTION
    "The status of the system or component, used for additions and alterations."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Required
  DEFAULT              
    if ( FluidSysSHW = 1 )
    then
    if( Parent(IsNewSHW) ) 
    then 
      "New" 
    else 
      "Existing" 
    endif             
	  else if ( FluidSysSHW = 0 )  
	  then
	    if( Parent(FluidSys:Status) = "New" ) 
	    then 
	      "New" 
	    else 
	      "Existing" 
	    endif           
	  else
	    "New"
	  endif endif
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 0 )
    then
	    if( ( Parent( IsNew ) = 1 .AND. Status != "New" ) .OR.
	        ( Parent( IsExisting ) = 1 .AND. Status = "New" ) )
	    then
	      PostError("Water Heater '%s' has a Status of '%s', but the fluid system has a status of '%s'.
	                 Please change the status of the fluid system or the water heater to be similar
	                 for compliance analysis.", Name, Status, Parent (Status) )
	    else UNCHANGED
	    endif
	  else 
	    UNCHANGED
	  endif  
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:IsNew
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysHtg = 1 ) then
      if( Status = "New" .OR. Proj:IsNewMech ) then 1 else 0 endif
    else UNCHANGED 
    endif
  SIZING
    if( FluidSysHtg = 1 ) then
      if( Status = "New" .OR. Proj:IsNewMech ) then 1 else 0 endif
    else UNCHANGED 
    endif
  ANNUAL
    if( FluidSysHtg = 1 ) then
      if( Status = "New" .OR. Proj:IsNewMech ) then 1 else 0 endif
    else UNCHANGED 
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:IsExisting
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysHtg = 1 ) then
      if( IsNew ) then 0 else 1 endif
    else 0 
    endif
  SIZING
    if( FluidSysHtg = 1 ) then
      if( IsNew ) then 0 else 1 endif
    else 0 
    endif
  ANNUAL
    if( FluidSysHtg = 1 ) then
      if( IsNew ) then 0 else 1 endif
    else 0 
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:IsNewSHW
  DATATYPE
    Integer
  LONGFORM
    IsNewServiceHotWater
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "New" ) then 1 else 0 endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:IsExistingSHW
  DATATYPE
    Integer
  LONGFORM
    IsExistingServiceHotWater
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Existing" ) then 1 else 0 endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:InBldgSHW
  DATATYPE
    Integer
  LONGFORM
    InBuildingServiceHotWater
  DESCRIPTION
    "This is used to count the number of Water Heaters in the building."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IsNewSHW .OR. IsExistingSHW ) then 1 else 0 endif
ENDRULE


// ---------- Any SHW Fluid Systems in the Building Are New --------------
RULE NEW Proj:IsNewSHW
  DATATYPE
    Integer
  LONGFORM
    IsNewServiceHotWater
  DESCRIPTION
    "This is the boolean for yes(1) all SHW fluid systems are new
     or no (0), not all of the SHW fluid systems are new."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumAll(FluidSys:IsNewSHW) = SumAll(FluidSys:InBldgSHW) )
    then 1
    else 0
    endif
ENDRULE

// ---------- Any SHW Fluid Systems in the Building Are Existing --------------
RULE NEW Proj:IsExistingSHW
  DATATYPE
    Integer
  LONGFORM
    IsExistingServiceHotWater
  DESCRIPTION
    "This is the boolean for yes(1) all SHW fluid systems are existing
     or no (0), not all of the SHW fluid systems are existing."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumAll(FluidSys:IsExistingSHW) = SumAll(FluidSys:InBldgSHW) )
    then 1
    else 0
    endif
ENDRULE



// ---------- All Water Heaters in the building are New --------------
RULE NEW Proj:IsNewWtrHtrSHW
  DATATYPE
    Integer
  LONGFORM
    IsNewWaterHeaterServiceHotWater
  DESCRIPTION
    "This is the boolean for yes(1) all water heaters on the fluid system are new
     or no (0), not all of the water heaters on the fluid system are new."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumAll(WtrHtr:IsNewSHW) = SumAll(WtrHtr:InBldgSHW) )
    then 1
    else 0
    endif
ENDRULE


// ---------- Any SHW Fluid Systems in the Building Are Existing --------------
RULE NEW Proj:IsNewSHWFluidSys
  DATATYPE
    Integer
  LONGFORM
    IsNewServiceHotWaterFluidSystem
  DESCRIPTION
    "This is the boolean for yes(1) one SHW Fluid Systems in the building is new
     or no (0), none of the SHW Fluid Systems in the building are new."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:IsNewSHW > 0 .OR. Proj:IsNewWtrHtrSHW > 0 ) // Remove condition for IsNewWtrHtrSHW
    then 1
    else 0
    endif
ENDRULE


// ---------- Count Fluid Systems of Type Service Hot Water --------------
RULE NEW FluidSys:SHWOnOff
  DATATYPE
    Integer
  LONGFORM
    ServiceHotWaterOnOff
  DESCRIPTION
    "This changes the Fluid System of Type - Service Hot Water 
     to an On(1) or Off(0)."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then 1
    else 0
    endif
ENDRULE

// ---------- Count Fluid Systems of Type Service Hot Water --------------
RULE NEW ResDHWSys:DHWOnOff
  DATATYPE
    Integer
  LONGFORM
    DomesticHotWaterOnOff
  DESCRIPTION
    "This changes the Fluid System of Type - Service Hot Water 
     to an On(1) or Off(0)."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "New" .OR. Status = "Existing" )
    then 1
    else 0
    endif
ENDRULE

// ---------- Count Fluid Systems of Type Service Hot Water --------------
RULE NEW Proj:DHWFluidSysCnt
  DATATYPE
    Integer
  LONGFORM
    DomesticHotWaterFluidSystemCount
  DESCRIPTION
    "This is the count of the fluid systems of type Service Hot Water."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren(ResDHWSys:DHWOnOff)
ENDRULE

// ---------- Count Fluid Systems of Type Service Hot Water --------------
RULE NEW Proj:SHWFluidSysCnt
  DATATYPE
    Integer
  LONGFORM
    ServiceHotWaterFluidSystemCount
  DESCRIPTION
    "This is the count of the fluid systems of type Service Hot Water."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildren(FluidSys:SHWOnOff)
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:Name
  SIZING_PROPOSED
    Name
  SIZING_BASELINE
    Name
  ANNUAL_PROPOSED
    Name
  ANNUAL_BASELINE
    Name
ENDRULE

// -------------- Duplicate Water Heater Count ---------------------------------
RULE WtrHtr:Cnt
  DESCRIPTION
    "This is the number of duplicate water heaters."
  HELP
    "This duplication number is only applicable for multiple water heaters
     that are identical in every way and in the same space or zone location."
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Default
  MINIMUM
    1
  MAXIMUM
    1000
  REPORTPRECISION
    0
  DEFAULT
    1
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:Cnt
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:Cnt
      else if( Proj:SHWBothBaseline )
      then
        1        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      1
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:Cnt
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          1
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:Cnt
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        1
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
 ANNUAL_PROPOSED
    zp:Cnt
  ANNUAL_BASELINE
    zb:Cnt
ENDRULE


// -------------- Duplicate Water Heater Count at Water Heater --------------------
RULE WtrHtr:CmbdMult
  DESCRIPTION
    "This is the total number of water heaters including fluid system 
     multipliers."
  DEFAULT
    if( FluidSysSHW = 1 )
    then( Parent(Cnt) * Cnt )
    else if( FluidSysHtg = 1 )
    then 1
    else UNDEFINED
    endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:CmbdMult
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:CmbdMult
      else if( Proj:SHWBothBaseline )
      then
        1        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      1
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:CmbdMult
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          1
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:CmbdMult
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        1
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      1
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:CmbdMult
  ANNUAL_BASELINE
    zb:CmbdMult
ENDRULE


// -------------- Project has res spaces that use combo system -----------------
RULE NEW Proj:ResAndComboWtrHtrCntCheck
  DATATYPE
    Integer
  LONGFORM
    ResidentialAndComboDHWHeatingWaterHeaterCountCheck
  INPUTCLASS
    NotInput
  DEFAULT
    SumChildrenIf(WtrHtr:CmbdMult, WtrHtr:IsResAndCombo = 1)
  CHECKCODE
    if( ResAndComboWtrHtrCntCheck <> IsResAndComboUnitCnt )
    then
      PostError("The building has '%g' combo space and water heaters 
                 serving '%g' residential living units.  Combination space 
                 and water heating systems must serve individual residential 
                 living units, so the number of water heaters and living units 
                 must match.", ResAndComboWtrHtrCntCheck, IsResAndComboUnitCnt )
    else UNCHANGED
    endif
ENDRULE

// -------------- Water Heater Hot Water Heating Schedule Reference -----------
RULE FluidSys:AvailSchRef
  DESCRIPTION
    "Availability of the Fluid System for Water Heaters is set to ON."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Default
  SIZING
    if( Type = "ServiceHotWater" ) 
    then RuleLibrary(Schedule, ("On"))
    else  UNCHANGED
    endif
  ANNUAL
    z:AvailSchRef
ENDRULE


// -------------- Service Hot Water System Count --------------------
RULE FluidSys:SHWSysCnt
  DESCRIPTION
    "This is the number of unique water heaters on one Fluid System."
  HELP
    "This number is used to distribute proposed loads from the Space level
     across multiple Water Heaters on the same Fluid System."
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "FluidSys:SHWSysCnt removed prior to release of 2016.3.0"
  MINIMUM
    0
  MAXIMUM
    100 
  REPORTPRECISION
    0
  DEFAULT
    if( Type = "ServiceHotWater" )
    then ChildCount(WtrHtr)
    else UNDEFINED
    endif
  CHECKSIM
    if( Proj:ExcludeWtrHtg = 1 )
    then UNCHANGED
    else
	    if( Type = "ServiceHotWater" .AND. IfValidAnd( SHWSysCnt > 0 )==0 ) then
	      PostError("ServiceHotWater fluid system '%s' has no water heaters 
	                 assigned.  Water heaters are required.", Name )
	    else UNCHANGED
	    endif
	  endif  
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )  
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        ChildCount(WtrHtr)
      else if( Proj:SHWBothBaseline )
      then
        1        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )  
    then
      if( Proj:SHWPropOnly )
      then
        ChildCount(WtrHtr)
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        1               
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else UNDEFINED
    endif
  ANNUAL_PROPOSED
    zp:SHWSysCnt
  ANNUAL_BASELINE
    zb:SHWSysCnt
ENDRULE
    
// -------------- Water Heater Type --------------------
RULE WtrHtr:Type
  DESCRIPTION
    "Water heater type - conventional, packaged heat pump or split heat pump."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Default
;  OPTION      - SAC 2/14/17 - ported to BEMEnums to enable backward compat for 2016.2.0 -> 2016.2.2
;    Conventional
;    HeatPumpPackaged
;    HeatPumpSplit
  DEFAULT
    if( FluidSysSHW = 1 )  
    then
      Conventional
//      if (Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 .AND. FuelSrc = "Electricity")
//      then HeatPumpSplit
//      else Conventional
//      endif
    else if( Parent(Type) = "HotWater" )
    then
      HeatPumpSplit
    else if( Parent(Type) = "CondenserWater" )
    then
      HeatPumpSplit
    else Conventional
    endif endif endif
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 )
    then UNCHANGED
    else
	    if( FuelSrc != "Electricity" .AND. Type <> "Conventional" )
	    then
	      PostError("Heat pump water heaters must be electric, please revise
	                 the fuel source or type for water heater '%s'.", Name)
	    else UNCHANGED
	    endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:Type
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:Type
      else if( Proj:SHWBothBaseline )
      then
        "Conventional"        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:Type
        else if( Proj:ResComboDHWUserAndBaseline )
        then
          "Conventional"
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:Type
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
        then
          "HeatPumpSplit"
        else
        "Conventional"               
        endif             
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:Type
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:Type
  ANNUAL_BASELINE  
    zb:Type
ENDRULE


// -------------- Water Heater Fuel Source --------------------
RULE WtrHtr:FuelSrc
  DESCRIPTION
    "This is the selection of the Water Heater Fuel Source."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Required
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      "Gas"
    else if( FluidSysHtg = 1 )
    then
      "Electricity"
    else UNDEFINED
    endif endif
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 )
    then UNCHANGED
    else
	    if( Proj:GasType = "None" .AND. FuelSrc = "Gas" .AND. Proj:ExcludeWtrHtg = 0 )
	    then
	      PostError("Water heater '%s' is gas fired but the project 
	                 gas type is specified as none.  Change the fuel source 
	                 for the water heater or the project gas type.", Name)
	    else UNCHANGED
	    endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:FuelSrc
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:FuelSrc
      else if( Proj:SHWBothBaseline )
      then
        UNCHANGED      
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:FuelSrc
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          "Gas"
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:FuelSrc
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        UNCHANGED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:FuelSrc
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:FuelSrc
  ANNUAL_BASELINE
    zb:FuelSrc
ENDRULE


// -------------- Water Heater Fuel Source Report --------------
RULE WtrHtr:FuelSrcRpt
  DESCRIPTION
    "Translates FuelSrc to FuelSrcRpt."
  INPUTCLASS
    NotInput
  OPTION
    Electricity
    Fuel Oil #1
    Natural Gas
    Propane Gas
  ANNUAL_PROPOSED
    if( Fuelsrc = "Electricity" )
    then 
      "Electricity"
    else if( Fuelsrc = "FuelOil#1" )
      then 
        "Fuel Oil #1"
    else if( Fuelsrc = "Gas" .AND. Proj:GasType = "NaturalGas" )
      then 
        "Natural Gas"
    else if( Fuelsrc = "Gas" .AND. Proj:GasType = "Propane"  )
      then 
        "Propane Gas"
    else 
      UNDEFINED
    endif endif endif endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -------------- Water Heater Ignition Type --------------------
RULE WtrHtr:ElecIgnit
  DESCRIPTION
    "Does the water heater have an electrical ignition?"
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  DEFAULT
    0
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:ElecIgnit
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:ElecIgnit
      else if( Proj:SHWBothBaseline )
      then
        0        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:Cnt
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          0
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:ElecIgnit
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        0               
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:ElecIgnit
  ANNUAL_BASELINE
    zb:ElecIgnit
ENDRULE


// -------------- Water Heater Is UEF Rated --------------------
RULE WtrHtr:IsUEFRtd
  DESCRIPTION
    "A flag to indicate whether UEF is used to describe the water heater 
     efficiency."
  HELP
    "The water heater has a UEF efficiency rating.  The UEF input box only appears 
      if the input rating and volume fit into a standards classification that uses UEF."  
  REFERENCE 
    ACM-5.9.1 Water Heating
  DEFAULT
    0
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:IsUEFRtd
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:IsUEFRtd
      else if( Proj:SHWBothBaseline )
      then
        0        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:IsUEFRtd
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          0
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:IsUEFRtd
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
			  if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
			  then 1
			  else UNDEFINED
			  endif            
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      0
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:IsUEFRtd
  ANNUAL_BASELINE
    zb:IsUEFRtd
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:BaseHtOutput
  DATATYPE
    Float
  LONGFORM
    BaselineHeatOutput
  DESCRIPTION
    "The amount of heat output needed by the baseline water heater.  The storage
     portion (40%) of the water heater capacity is not included.  Considers 
     capacity of proposed design water heaters for the baseline in the 
     SHWUserAndBaseline case."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      ValidOr( Parent(BaseNonResWtrHtrTotCap),0 ) * 0.60 / CmbdMult
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        UNDEFINED
      else if( Proj:SHWBothBaseline )
      then 
        if( IfValidAnd( Name = "NonResBaseElecWaterHeater"   ) .OR.
            IfValidAnd( Name = "NonResBaseHtPumpWaterHeater" ) )
        then
          Parent(BaseNonResWtrHtrTotCap) * 0.60 * ( 1 - Bldg:NonResHotWtrGasFrac )
        else if( IfValidAnd( Name = "NonResBaseGasWaterHeater" ) )
        then
          Parent(BaseNonResWtrHtrTotCap) * 0.60 * Bldg:NonResHotWtrGasFrac 
        else UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline )
      then 
        if( FuelSrc = "Electricity" )
        then
          min( Parent(BaseNonResWtrHtrTotCap), Proj:PropNonResWtrHtrTotCap )
          * 0.60 * ( 1 - Bldg:NonResHotWtrGasFrac )
        else if( FuelSrc = "Gas" )
        then
          min( Parent(BaseNonResWtrHtrTotCap), Proj:PropNonResWtrHtrTotCap )
          * 0.60 * Bldg:NonResHotWtrGasFrac 
        else UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then 
        u:InpPwr
      else if( Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Electricity" )
        then
          Parent(BaseNonResWtrHtrTotCap) * 0.60 * ( 1 - Bldg:NonResHotWtrGasFrac )
        else if( FuelSrc = "Gas" )
        then
          Parent(BaseNonResWtrHtrTotCap) * 0.60 * Bldg:NonResHotWtrGasFrac 
        else UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE


// The following tables are referenced for determing the Max and Min UA
TABLE BaseHtPumpWtHtrTankLossTbl
  StorCapRng  BaseHtPumpWtrHtrTankLoss  
  <=45        778.1066667
  <=57        895.0416   
  <=65        1089.349333
  <=79        1244.970667
  >79         1556.213333
ENDTABLE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:BaseHtPumpWtrHtrTankLoss
  DATATYPE
    FLoat
  LONGFORM
    BaselineHeatPumpWaterHeaterTankLoss
  DESCRIPTION
    "Baseline heat-pump water heater tank loss calculated based on storage capacity"
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( LocalStatus( StorCap ) > 0 )
        then 
          BaseHtPumpWtHtrTankLossTbl:BaseHtPumpWtrHtrTankLoss("StorCapRng", StorCap)
      else UNDEFINED
      endif    
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" )
    then
      if( LocalStatus( StorCap ) > 0 )
        then 
          BaseHtPumpWtHtrTankLossTbl:BaseHtPumpWtrHtrTankLoss("StorCapRng", StorCap)
      else UNDEFINED
      endif    
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    z:BaseHtPumpWtrHtrTankLoss
ENDRULE



// -----------------------------------------------------------------------------
RULE NEW WtrHtr:BaseEngyInput
  DATATYPE
    FLoat
  LONGFORM
    BaselineEnergyInput
  DESCRIPTION
    "The amount of energy input (in Btuh) needed by the baseline water heater
     to generate BaseHtOutput."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( FuelSrc = "Gas" )
      then
        if( IfValidAnd( ThrmlEff >0 ) == 0 )
        then 
         BaseHtOutput / 0.80
        else
         BaseHtOutput / ValidOr( ThrmlEff, 0.80 )
        endif
      else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
      then
        BaseHtOutput
      else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" )
      then
        ( BaseHtOutput - ValidOr(TankLoss,0) ) / ValidOr( HtPumpEF, 3 )
      else UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        UNDEFINED
      else if( Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Gas" )
        then
          BaseHtOutput / ValidOr(ThrmlEff, 0.80)
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          BaseHtOutput
        else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" )
        then
          ( BaseHtOutput - BaseHtPumpWtrHtrTankLoss)  / 1.94778   // 1.94778 - Calculated HtPumpEF based on a UEF 2.15
        else UNDEFINED
        endif endif endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Gas" )
        then
          BaseHtOutput / ValidOr(ThrmlEff, 0.80)
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          BaseHtOutput
        else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" )
        then
         ( BaseHtOutput - IfValidAnd(BaseHtPumpWtrHtrTankLoss >0 ) )  / 1.94778   // 1.94778 - Calculated HtPumpEF based on a UEF 2.15
        else UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then 
        u:InpPwr
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE



// -------------- Heat Pump Water Heater Fan Power ----------------------
RULE NEW WtrHtr:IsCommHtPumpWtrHtr
  DATATYPE
    Float
  LONGFORM
    IsCommercialHeatPumpWaterHeater
  DESCRIPTION
    "Is the heat-pump water heater commercial storage"
  INPUTCLASS
    NotInput
  DEFAULT
    if( FuelSrc = "Electricity" .AND. Type <> "Conventional" .AND. ( IfValidAnd(InpPwr > 12) .OR. IfValidAnd(StorCap > 120) )  )
    then 1
    else 0
    endif
  CHECKCODE
    if( IsCommHtPumpWtrHtr = 1 .AND. IsResandCombo = 1 )
    then
      PostError("Water heater '%s' is a commerical heat pump water heater 
                 being modeled for residential application which is not allowed.  
                 Please select a different water heater.", Name)
    else UNCHANGED
    endif
   SIZING_BASELINE
     if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
     then 0
     else UNCHANGED
     endif
   ANNUAL_BASELINE
    zb:IsCommHtPumpWtrHtr
ENDRULE

// -------------- Baseline Heat Pump Water Heater COP ----------------------
// Based on 80 gallon Heat-Pump water, UEF 2.15 and Input Rating of 4.5
RULE NEW WtrHtr:BaseHtPumpWtrHtrCOP
  DATATYPE
    Float
  LONGFORM
    BaselineHeatPumpWaterHeaterCOP
  DESCRIPTION
    "Baseline heat pump water heater COP"
  INPUTCLASS
    NotInput
  DEFAULT
    1.94778 + ( 1556.213333 / ( 3412 * 4.5 ) )
  SIZING_BASELINE
    1.94778 + ( 1556.213333 / ( 3412 * 4.5 ) )
  ANNUAL_BASELINE
    z:BaseHtPumpWtrHtrCOP
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:HtPumpSubType
  DESCRIPTION
    "Shows whether a heat pump water heater is a singlepass or multipass unit. For space heating application only multipass options are available"
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then 
      if( FluidSysHtg = 0 )
      then
        "R134a_SinglePass"
      else if (FluidSysHtg = 1 )
      then
        "R134a_MultiPass"
      else UNDEFINED
      endif endif
    else UNDEFINED
	  endif
  CHECKSIM
    if( IfValidAnd( Type <> "Conventional" ) .AND. FluidSysHtg = 1 .AND. 
        ( IfValidAnd(HtPumpSubType = "- specify -") .OR. LocalStatus(HtPumpSubType) < 1 ) )
    then
      PostError("Please select the heat-pump water heater sub-type for
                 water heater '%s'", Name)
    else if ( IfValidAnd( Type <> "Conventional" ) .AND. FluidSysHtg = 1 .AND. IfValidAnd(HtPumpSubType = "R134a_SinglePass") )
    then
      PostError("Single Pass heat-pump water heater '%s' cannot be used for
                 space heating. Please select a multipass sub-type", Name)
    else UNCHANGED
    endif endif
  SIZING
    if( IfValidAnd( Type <> "Conventional" ) )
    then 
      if( IsBaseSys  )
      then
        "R134a_SinglePass"
      else 
        HtPumpSubType
      endif
    else UNDEFINED
	  endif
  ANNUAL
    if( IfValidAnd( Type <> "Conventional" ) )
    then 
      if( IsBaseSys )
      then
        "R134a_SinglePass"
      else 
        HtPumpSubType
      endif
    else UNDEFINED
	  endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:IsMultipass
  DESCRIPTION
    "Shows whether a heat pump water heater is a multipass unit, commonly used 
     for space heating applications."
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:IsMultipass removed in transition from 2019.2.1 to 2019.2.2"
  DEFAULT
    0
//  CHECKCODE
//    if( IfValidAnd( Type <> "Conventional" ) )
//    then
//      if( IsMultipass = 1 .AND. IsCommHtPumpWtrHtr = 0 .AND. FluidSysHtg = 0 )
//      then
//        PostError("Multipass is only allowed for commerical heat pump water heaters.
//                   Water Heater '%s' is not a commercial heat pump water heater.", Name )
//      else if( IsMultipass = 1 .AND. FluidSysHtg = 0 )
//      then
//        PostError("Multipass is only allowed for space heating application.
//                   Water Heater '%s' is part of a service hot water application.", Name )
//      else UNCHANGED
//	    endif endif
//	 else UNCHANGED
//    endif
  SIZING
    0
  ANNUAL
    0
ENDRULE





// -----------------------------------------------------------------------------
RULE NEW WtrHtr:StdEvapInletAirDBTemp
  DATATYPE
    Float
  LONGFORM
    StandardEvaporatorInletAirDrybulbTemperature
  DESCRIPTION
    "The standard temperature at which the performance curves equal 1."
  INPUTCLASS
    NotInput
  UNITS
    F
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        41
      else if ( HtPumpSubType = "R410a_MultiPass")
      then
        UNDEFINED
      else
        67.5
      endif endif
    else UNDEFINED
    endif
  SIZING
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        41
      else if ( HtPumpSubType = "R410a_MultiPass")
      then
        UNDEFINED
      else
        67.5
      endif endif
    else UNDEFINED
    endif
  ANNUAL
   z:StdEvapInletAirDBTemp
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:RtdEvapInletAirDBTemp
  INPUTCLASS
    NotInput
  DESCRIPTION
    ""
  RESETS
    ResetThisWhenTheFollowingIsModified
      HtPumpSubType
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        41
      else if ( HtPumpSubType = "R410a_MultiPass")
      then
        UNDEFINED
      else
        67.5
      endif endif
    else UNDEFINED
    endif
  SIZING
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        41
      else if ( HtPumpSubType = "R410a_MultiPass")
      then
        UNDEFINED
      else
        67.5
      endif endif
    else UNDEFINED
    endif
  ANNUAL
   z:RtdEvapInletAirDBTemp  
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:StdEvapInletAirWBTemp
  DATATYPE
    Float
  LONGFORM
    StandardEvaporatorInletAirWetbulbTemperature
  DESCRIPTION
    "The standard temperature at which the performance curves equal 1."
  INPUTCLASS
    NotInput
  UNITS
    F
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType <> "R410a_MultiPass") )
    then
      UNDEFINED // 56.3
    else  if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType = "R410a_MultiPass") )
    then
      41    
    else 
      UNDEFINED
    endif endif
  SIZING
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType <> "R410a_MultiPass") )
    then
      UNDEFINED // 56.3
    else  if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType = "R410a_MultiPass") )
    then
      41    
    else 
      UNDEFINED
    endif endif
  ANNUAL
   z:StdEvapInletAirWBTemp
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:RtdEvapInletAirWBTemp
  INPUTCLASS
    NotInput
  DESCRIPTION
    ""
  RESETS
    ResetThisWhenTheFollowingIsModified
      HtPumpSubType
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType <> "R410a_MultiPass") )
    then
      UNDEFINED // 56.3
    else  if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType = "R410a_MultiPass") )
    then
      41
    else
      UNDEFINED
    endif endif
ENDRULE



// -----------------------------------------------------------------------------
RULE NEW WtrHtr:StdCondInletWtrTemp
  DATATYPE
    Float
  LONGFORM
    StandardCondenserInletWaterTemperature
  DESCRIPTION
    "The standard temperature at which the performance curves equal 1."
  INPUTCLASS
    NotInput
  UNITS
    F
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        120
      else if( HtPumpSubType = "R410a_MultiPass" )
      then
        110
      else
        135.5
      endif endif
    else UNDEFINED
    endif
  SIZING
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        120
      else if( HtPumpSubType = "R410a_MultiPass" )
      then
        110
      else
        135.5
      endif endif
    else UNDEFINED
    endif
  ANNUAL
   z:StdCondInletWtrTemp
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:RtdCondInletWtrTemp
  INPUTCLASS
    NotInput
  DESCRIPTION
    ""
  RESETS
    ResetThisWhenTheFollowingIsModified
      HtPumpSubType
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd(HtPumpSubType <> "- specify -") )
    then
      if( HtPumpSubType = "R134a_MultiPass" )
      then
        120
      else if( HtPumpSubType = "R410a_MultiPass" )
      then
        110
      else
        135.5
      endif endif
    else UNDEFINED
    endif
ENDRULE



// -----------------------------------------------------------------------------
RULE WtrHtr:RtdEvapInletAirDBTempF
  PREVIOUSNAMES
    RtdEvapInletAirDBTempF  
  INPUTCLASS
    CondRequired
  DESCRIPTION
    "The temperature at which the rated performance was determined."
  RESETS
    ResetThisWhenTheFollowingIsModified
      HtPumpSubType
  DEFAULT
    if( Proj:AutoHardSize = 1 .AND. Type <> "Conventional" )
      then 
        StdEvapInletAirDBTemp
    else if ( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 1 )
    then
      StdEvapInletAirDBTemp
    else
     UNDEFINED
    endif endif
  CHECKSIM
    if( Proj:AutoHardSize = 1 )
    then
      UNCHANGED
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) .AND. IfValidAnd(HtPumpSubType <> "R410a_MultiPass") )
    then
      if ( IfValidAnd( RtdEvapInletAirDBTempF > 32 ) .AND. 
           IfValidAnd( RtdEvapInletAirDBTempF < 200 ) )
      then UNCHANGED
      else 
	      PostError("Rated evaporator inlet air drybulb temperature is a required input 
	                 for heat pump water heater '%s'.  Please enter the 
	                 temperature (> 32F) which will be used to determine the capacity 
	                 and efficiency.", Name )
	    endif
    else UNCHANGED
    endif endif
  SIZING_BASELINE
    if( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 .AND. Type <> "Conventional" )
      then 
        StdEvapInletAirDBTemp
    else 
      UNDEFINED
    endif
  ANNUAL_BASELINE
   zb:RtdEvapInletAirDBTempF
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:RtdEvapInletAirWBTempF
  INPUTCLASS
    CondRequired
  DESCRIPTION
    "The temperature at which the rated performance was determined."
  RESETS
    ResetThisWhenTheFollowingIsModified
      HtPumpSubType
  DEFAULT
    if( Proj:AutoHardSize = 1 .AND. Type <> "Conventional" )
    then 
      StdEvapInletAirWBTemp
    else if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 1 )
    then 
      StdEvapInletAirWBTemp    
    else UNDEFINED
    endif endif
  CHECKSIM
    if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) .AND. IfValidAnd(HtPumpSubType = "R410a_MultiPass") )
    then
      if ( IfValidAnd( RtdEvapInletAirWBTempF > -21 ) .AND. 
           IfValidAnd( RtdEvapInletAirWBTempF < 200 ) )
      then UNCHANGED
      else 
	      PostError("Rated evaporator inlet air wetbulb temperature is a required input 
	                 for heat pump water heater '%s'.  Please enter the 
	                 temperature used to determine the capacity and 
	                 efficiency.", Name )
	    endif
    else UNCHANGED
    endif
  SIZING_BASELINE
    if( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 .AND. Type <> "Conventional" )
      then 
        StdEvapInletAirWBTemp
    else 
      UNDEFINED
    endif
  ANNUAL_BASELINE
   zb:RtdEvapInletAirWBTempF
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:RtdCondInletWtrTempF
  INPUTCLASS
    CondRequired
  DESCRIPTION
    "The temperature at which the rated performance was determined."
  RESETS
    ResetThisWhenTheFollowingIsModified
      HtPumpSubType
  DEFAULT
    if( Proj:AutoHardSize = 1 .AND. Type <> "Conventional" )
    then 
      StdCondInletWtrTemp
    else if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 1 )
    then 
      StdCondInletWtrTemp    
    else 
      UNDEFINED
    endif endif
  CHECKSIM
    if( Proj:AutoHardSize = 1 )
    then
      UNCHANGED
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) )
    then
      if ( IfValidAnd( RtdCondInletWtrTempF > 32 ) .AND. 
           IfValidAnd( RtdCondInletWtrTempF < 200 ) )
      then UNCHANGED
      else 
	      PostError("Rated condenser inlet water temperature is a required input 
	                 for heat pump water heater '%s'.  Please enter the 
	                 temperature used to determine the capacity and 
	                 efficiency.", Name )
	    endif
    else UNCHANGED
    endif endif
  SIZING_BASELINE
    if( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 .AND. Type <> "Conventional" )
      then StdCondInletWtrTemp
    else UNDEFINED
    endif
  ANNUAL_BASELINE
   zb:RtdCondInletWtrTempF
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:RtdEvapInletAirDBTempC
  DATATYPE
    FLoat
  LONGFORM
    RatedEvaporatorInletAirDrybulbTemperatureCelsius
  DESCRIPTION
    "The temperature at which the rated performance was determined."
  DEFAULT
    if( LocalStatus( RtdEvapInletAirDBTempF ) > 0 )
    then ( RtdEvapInletAirDBTempF - 32 ) * 5 / 9 
    else UNDEFINED //UNCHANGED
    endif
  SIZING
    if( LocalStatus( RtdEvapInletAirDBTempF ) > 0 )
    then ( RtdEvapInletAirDBTempF - 32 ) * 5 / 9 
    else UNDEFINED // UNCHANGED
    endif
  ANNUAL
   z:RtdEvapInletAirDBTempC
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:RtdEvapInletAirWBTempC
  DATATYPE
    FLoat
  LONGFORM
    RatedEvaporatorInletAirWetbulbTemperatureCelsius
  DESCRIPTION
    "The temperature at which the rated performance was determined."
  DEFAULT
    if( LocalStatus( RtdEvapInletAirWBTempF ) > 0 )
    then ( RtdEvapInletAirWBTempF - 32 ) * 5 / 9 
    else UNDEFINED // UNCHANGED
    endif
  SIZING
    if( LocalStatus( RtdEvapInletAirWBTempF ) > 0 )
    then ( RtdEvapInletAirWBTempF - 32 ) * 5 / 9 
    else UNDEFINED // UNCHANGED
    endif
  ANNUAL
   z:RtdEvapInletAirWBTempC
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:RtdCondInletWtrTempC
  DATATYPE
    FLoat
  LONGFORM
    RatedCondenserInletAirDrybulbTemperatureCelsius
  DESCRIPTION
    "The temperature at which the rated performance was determined."
  DEFAULT
    if( LocalStatus( RtdCondInletWtrTempF ) > 0 )
    then ( RtdCondInletWtrTempF - 32 ) * 5 / 9 
    else UNCHANGED
    endif
  SIZING
    if( LocalStatus( RtdCondInletWtrTempF ) > 0 )
    then ( RtdCondInletWtrTempF - 32 ) * 5 / 9 
    else UNCHANGED
    endif
  ANNUAL
   z:RtdCondInletWtrTempC
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvType
  DATATYPE
    String
  LONGFORM
    CapacityFunctionofTemperatureCurveType
  DESCRIPTION
    "The curve type used to adjust heating capacity of heat pump water heaters 
     as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )              //Heat Pump
    then
      "CrvDblQuad"
    else 
      UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" )              //Heat Pump
    then
      "CrvDblQuad"
    else 
      UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvType
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvType
  DATATYPE
    String
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveType
  DESCRIPTION
    "The curve type used to adjust efficiency of heat pump water heaters 
     as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )              //Heat Pump
    then
      "CrvDblQuad"
    else 
      UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" )              //Heat Pump
    then
      "CrvDblQuad"
    else 
      UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvType
ENDRULE

// -----------------------------------------------------------------------------
// 
TABLE CapfTempCrvCoefTbl
  HtPumpSubTypeRng       CapfTempCrvCoef1   CapfTempCrvCoef2      CapfTempCrvCoef3      CapfTempCrvCoef4      CapfTempCrvCoef5      CapfTempCrvCoef6
  "R134a_SinglePass"     0.563000           0.043700              0.000039              0.005500              -0.000148             -0.000145
  "R134a_MultiPass"      0.922987           0.027986              0.000115              -0.000500             -2.18399E-07          -0.000144
  "R410a_MultiPass"      1.278389           0.017135              0.000443              -0.018320             0.000209              0.000053
ENDTABLE


// -----------------------------------------------------------------------------
// 
TABLE COPfTempCrvCoefTbl
  HtPumpSubTypeRng       COPfTempCrvCoef1   COPfTempCrvCoef2      COPfTempCrvCoef3      COPfTempCrvCoef4      COPfTempCrvCoef5      COPfTempCrvCoef6
  "R134a_SinglePass"     1.133200           0.063000              -0.000098             -0.009720             -0.000021             -0.000686
  "R134a_MultiPass"      2.015359           0.045001              0.000048              -0.036416             0.000270              -0.000516
  "R410a_MultiPass"      2.261666           0.033176              0.000436              -0.046724             0.000350              -0.000376
ENDTABLE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvCoef1
  DATATYPE
    Float
  LONGFORM
    CapacityFunctionofTemperatureCurveCoefficient1
  DESCRIPTION
    "Coefficient 1 of the curve used to adjust heating capacity of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef1("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef1("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvCoef1
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvCoef2
  DATATYPE
    Float
  LONGFORM
    CapacityFunctionofTemperatureCurveCoefficient2
  DESCRIPTION
    "Coefficient 2 of the curve used to adjust heating capacity of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef2("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef2("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvCoef2
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvCoef3
  DATATYPE
    Float
  LONGFORM
    CapacityFunctionofTemperatureCurveCoefficient3
  DESCRIPTION
    "Coefficient 3 of the curve used to adjust heating capacity of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef3("HtPumpSubTypeRng", HtPumpSubType)    
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef3("HtPumpSubTypeRng", HtPumpSubType)    
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvCoef3  
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvCoef4
  DATATYPE
    Float
  LONGFORM
    CapacityFunctionofTemperatureCurveCoefficient4
  DESCRIPTION
    "Coefficient 4 of the curve used to adjust heating capacity of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef4("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef4("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvCoef4
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvCoef5
  DATATYPE
    Float
  LONGFORM
    CapacityFunctionofTemperatureCurveCoefficient5
  DESCRIPTION
    "Coefficient 5 of the curve used to adjust heating capacity of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef5("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef5("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvCoef5
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapfTempCrvCoef6
  DATATYPE
    Float
  LONGFORM
    CapacityFunctionofTemperatureCurveCoefficient6
  DESCRIPTION
    "Coefficient 6 of the curve used to adjust heating capacity of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef6("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      CapfTempCrvCoefTbl:CapfTempCrvCoef6("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CapfTempCrvCoef6
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvCoef1
  DATATYPE
    Float
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveCoefficient1
  DESCRIPTION
    "Coefficient 1 of the curve used to adjust heating efficiency of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef1("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef1("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvCoef1
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvCoef2
  DATATYPE
    Float
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveCoefficient2
  DESCRIPTION
    "Coefficient 2 of the curve used to adjust heating efficiency of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef2("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef2("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvCoef2
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvCoef3
  DATATYPE
    Float
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveCoefficient3
  DESCRIPTION
    "Coefficient 3 of the curve used to adjust heating efficiency of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef3("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef3("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvCoef3
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvCoef4
  DATATYPE
    Float
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveCoefficient4
  DESCRIPTION
    "Coefficient 4 of the curve used to adjust heating efficiency of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef4("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef4("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvCoef4
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvCoef5
  DATATYPE
    Float
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveCoefficient5
  DESCRIPTION
    "Coefficient 5 of the curve used to adjust heating efficiency of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef5("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef5("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvCoef5
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPfTempCrvCoef6
  DATATYPE
    Float
  LONGFORM
    CoefficientofPerformanceFunctionofTemperatureCurveCoefficient1
  DESCRIPTION
    "Coefficient 6 of the curve used to adjust heating efficiency of heat pump 
     water heaters as a function of air and water temperatures."
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef6("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" .AND. IfValidAnd( HtPumpSubType <> "- specify -" ) )              //Heat Pump
    then
      COPfTempCrvCoefTbl:COPfTempCrvCoef6("HtPumpSubTypeRng", HtPumpSubType)
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COPfTempCrvCoef6
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:CapRtdAdjFac
  DATATYPE
    Float
  LONGFORM
    CapacityRatedAdjustmentFactor
  DESCRIPTION
    "The capacity adjustment factor for non-standard rating conditions."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  DEFAULT
    if( Type <> "Conventional" .AND. ( IfValidAnd(HtPumpSubType = "R134a_SinglePass" ) .OR. IfValidAnd(HtPumpSubType = "- specify -") ) )
    then 
      1
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) .AND. IfValidAnd(HtPumpSubType = "R134a_MultiPass") )
    then
        // x = RtdEvapInletAirDBTempC
        // y = RtdCondInletWtrTempC
      if( CapfTempCrvType = "CrvDblQuad" .AND.
          IfValidAnd( RtdEvapInletAirDBTempC > -999 ) .AND.
          IfValidAnd( RtdCondInletWtrTempC   > -999 ) )
        // z = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ y + C5 ∗ y2 + C6 ∗ xy
      then
        CapfTempCrvCoef1 + 
        CapfTempCrvCoef2 * RtdEvapInletAirDBTempC + 
        CapfTempCrvCoef3 * RtdEvapInletAirDBTempC**2 + 
        CapfTempCrvCoef4 * RtdCondInletWtrTempC + 
        CapfTempCrvCoef5 * RtdCondInletWtrTempC**2 + 
        CapfTempCrvCoef6 * RtdEvapInletAirDBTempC * RtdCondInletWtrTempC 
      else if( CapfTempCrvType = "CrvCubic" .AND.
               IfValidAnd( RtdEvapInletAirDBTempC > -999 ) )
        // y = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ x3
      then
        CapfTempCrvCoef1 + 
        CapfTempCrvCoef2 * RtdEvapInletAirDBTempC + 
        CapfTempCrvCoef3 * RtdEvapInletAirDBTempC**2 + 
        CapfTempCrvCoef4 * RtdEvapInletAirDBTempC**3 
      else 1
      endif endif
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) .AND. IfValidAnd(HtPumpSubType = "R410a_MultiPass") )
    then
        // x = RtdEvapInletAirWBTempC
        // y = RtdCondInletWtrTempC
      if( CapfTempCrvType = "CrvDblQuad" .AND.
          IfValidAnd( RtdEvapInletAirWBTempC > -999 ) .AND.
          IfValidAnd( RtdCondInletWtrTempC   > -999 ) )
        // z = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ y + C5 ∗ y2 + C6 ∗ xy
      then
        CapfTempCrvCoef1 + 
        CapfTempCrvCoef2 * RtdEvapInletAirWBTempC + 
        CapfTempCrvCoef3 * RtdEvapInletAirWBTempC**2 + 
        CapfTempCrvCoef4 * RtdCondInletWtrTempC + 
        CapfTempCrvCoef5 * RtdCondInletWtrTempC**2 + 
        CapfTempCrvCoef6 * RtdEvapInletAirWBTempC * RtdCondInletWtrTempC 
      else if( CapfTempCrvType = "CrvCubic" .AND.
               IfValidAnd( RtdEvapInletAirWBTempC > -999 ) )
        // y = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ x3
      then
        CapfTempCrvCoef1 + 
        CapfTempCrvCoef2 * RtdEvapInletAirWBTempC + 
        CapfTempCrvCoef3 * RtdEvapInletAirWBTempC**2 + 
        CapfTempCrvCoef4 * RtdEvapInletAirWBTempC**3 
    else 1
      endif endif
   else 1
    endif endif endif
  CHECKSIM
    if( Type <> "Conventional" )
    then
      if( IfValidAnd( CapRtdAdjFac > 0 ) )
      then UNCHANGED
      else
	      PostError("A valid capacity adjustment factor for water heater '%s' 
	                 has not been determined.  Check that rated temperatures 
	                 have been entered.", Name)
      endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:CapRtdAdjFac
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        u:CapRtdAdjFac
      else if( Proj:SHWBothBaseline )
      then 
        1
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:CapRtdAdjFac
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:CapRtdAdjFac
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        1
      else if( Proj:SHWBothBaseline )
      then 
        1
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      if( IsExisting )
      then zp:CapRtdAdjFac
      else 1
      endif
    else UNDEFINED
    endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:COPRtdAdjFac
  DATATYPE
    Float
  LONGFORM
    CoefficientOfPerformanceRatedAdjustmentFactor
  DESCRIPTION
    "The efficiency adjustment factor for non-standard rating conditions."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  DEFAULT
    if( Type <> "Conventional" .AND. ( IfValidAnd(HtPumpSubType = "R134a_SinglePass") .OR. IfValidAnd(HtPumpSubType = "- specify -") ) )
    then 
      1
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) .AND. IfValidAnd(HtPumpSubType = "R134a_MultiPass") )
    then
        // x = RtdEvapInletAirDBTempC
        // y = RtdCondInletWtrTempC
      if( COPfTempCrvType = "CrvDblQuad" .AND.
          IfValidAnd( RtdEvapInletAirDBTempC > -999 ) .AND.
          IfValidAnd( RtdCondInletWtrTempC   > -999 ) )
        // z = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ y + C5 ∗ y2 + C6 ∗ xy
      then
        COPfTempCrvCoef1 + 
        COPfTempCrvCoef2 * RtdEvapInletAirDBTempC + 
        COPfTempCrvCoef3 * RtdEvapInletAirDBTempC**2 + 
        COPfTempCrvCoef4 * RtdCondInletWtrTempC + 
        COPfTempCrvCoef5 * RtdCondInletWtrTempC**2 + 
        COPfTempCrvCoef6 * RtdEvapInletAirDBTempC * RtdCondInletWtrTempC 
      else if( COPfTempCrvType = "CrvCubic" .AND.
               IfValidAnd( RtdEvapInletAirDBTempC > -999 ) )
        // y = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ x3
      then
        COPfTempCrvCoef1 + 
        COPfTempCrvCoef2 * RtdEvapInletAirDBTempC + 
        COPfTempCrvCoef3 * RtdEvapInletAirDBTempC**2 + 
        COPfTempCrvCoef4 * RtdEvapInletAirDBTempC**3 
      else 1
      endif endif
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) .AND. IfValidAnd(HtPumpSubType = "R410a_MultiPass") )
    then
        // x = RtdEvapInletAirWBTempC
        // y = RtdCondInletWtrTempC
      if( COPfTempCrvType = "CrvDblQuad" .AND.
          IfValidAnd( RtdEvapInletAirWBTempC > -999 ) .AND.
          IfValidAnd( RtdCondInletWtrTempC   > -999 ) )
        // z = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ y + C5 ∗ y2 + C6 ∗ xy
      then
        COPfTempCrvCoef1 + 
        COPfTempCrvCoef2 * RtdEvapInletAirWBTempC + 
        COPfTempCrvCoef3 * RtdEvapInletAirWBTempC**2 + 
        COPfTempCrvCoef4 * RtdCondInletWtrTempC + 
        COPfTempCrvCoef5 * RtdCondInletWtrTempC**2 + 
        COPfTempCrvCoef6 * RtdEvapInletAirWBTempC * RtdCondInletWtrTempC 
      else if( COPfTempCrvType = "CrvCubic" .AND.
               IfValidAnd( RtdEvapInletAirWBTempC > -999 ) )
        // y = C1 + C2 ∗ x + C3 ∗ x2 + C4 ∗ x3
      then
        COPfTempCrvCoef1 + 
        COPfTempCrvCoef2 * RtdEvapInletAirWBTempC + 
        COPfTempCrvCoef3 * RtdEvapInletAirWBTempC**2 + 
        COPfTempCrvCoef4 * RtdEvapInletAirWBTempC**3 
      else 1
      endif endif
    else 1
    endif endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:COPRtdAdjFac
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        u:COPRtdAdjFac
      else if( Proj:SHWBothBaseline )
      then 
        1
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:COPRtdAdjFac
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:COPRtdAdjFac
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        1
      else if( Proj:SHWBothBaseline )
      then 
        1
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      if( IsExisting )
      then zp:COPRtdAdjFac
      else 1
      endif
    else UNDEFINED
    endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:InpPwr
  DESCRIPTION
    "The rated electrical input of an electric resistance or 
     heat pump water heater."
  HELP
    ""
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  UNITS
    kW
  REPORTPRECISION
    1
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:InpPwr
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Electricity" .AND. LocalStatus( BaseEngyInput ) > 0 )
        then
          BaseEngyInput / 3412
        else UNDEFINED 
        endif
      else if( Proj:SHWPropOnly )
      then 
        u:InpPwr
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:InpPwr
    else UNDEFINED
    endif endif
ENDRULE



// -------------- Water Heater Capacity Rated --------------
RULE WtrHtr:CapRtd
  DESCRIPTION
    "This is the water heater's rated heating energy consumption for 
     conventional water heaters, and the heat output for heat pump 
     water heaters."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  UNITS
    Btu/hr
  REPORTPRECISION
    -3
  DEFAULT
    if( FluidSysSHW = 1 )
    then 
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( FuelSrc = "Electricity" .AND. LocalStatus(InpPwr) > 0 )
      then
        if( Type = "Conventional" .AND. IfValidAnd(InpPwr > 0 ) )
        then
          InpPwr * 3412
        else if( IsCommHtPumpWtrHtr = 1 .AND. IfValidAnd( COP > 1 ) .AND. IfValidAnd(InpPwr > 0 ) )   // check for Commercial Storage HPWtrHtr and change formula to use COP
        then
          ( InpPwr * COP * 3412 )
        else if ( IfValidAnd(InpPwr > 0 ) )
        then
          ( InpPwr * ValidOr(HtPumpEF,3) * 3412 ) + ValidOr(TankLoss,0)
        else 
          UNDEFINED
        endif endif endif
      else if( Proj:AutoHardSize = 1 )
      then
        if( FuelSrc = "Gas" )
        then
          BaseEngyInput 
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" .AND. IfValidAnd(InpPwr > 0 ) )
        then
          InpPwr * 3412
        else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" )
        then
          BaseHtOutput
        else UNDEFINED
        endif endif endif
      else UNDEFINED
      endif endif endif
    else if( FluidSysHtg = 1 )
    then
      if( Proj:AutoHardSize = 1 .AND. LocalCompAssigned(FluidSegInRef).AND. LocalStatus(InpPwr) < 5 ) 
      then           // For PROPOSED AutoHardSizing only
        if( Parent(Type) = "HotWater" ) 
        then
          ( FluidSegOutRef:CoilHtgCapHydronic / Parent(BlrCnt) ) * CapRtdAdjFac   
        else if( Parent(Type) = "CondenserWater" ) then
          ( FluidSegOutRef:CoilHtExtractionLd / Parent(BlrCnt) ) * CapRtdAdjFac
        else UNDEFINED
        endif endif  
      else if( LocalStatus (InpPwr) > 6 .AND. IfValidAnd(COP > 0) ) 
      then
        InpPwr * COP * 3412
      else if ( Proj:AutoHardSize = 1 .AND. LocalStatus (InpPwr) > 6 .AND. LocalStatus (COP) < 5 )
      then
        InpPwr * 3 * 3412
      else UNDEFINED
      endif endif endif
    else UNDEFINED
    endif endif
  CHECKSIM
    if( Proj:ExcludeWtrHtg = 1 .AND. FluidSysSHW = 1 )
    then UNCHANGED
    else
	    if( LocalStatus(CapRtd) > 6 .AND. LocalStatus(InpPwr) > 6 .AND. 
	        ( IfValidAnd(InpPwr > 0) * 3412 < IfValidAnd(CapRtd > 0) * 0.99 .OR. IfValidAnd(InpPwr > 0) * 3412 > IfValidAnd(CapRtd > 0) * 1.01 ) )
	    then
	      PostError("Water heater '%s' has user inputs for Input Rate specified 
	                 in both Btu/hr and kW, and the values are inconsistent.  
	                 Please delete one of these values.", Name)
	    else if( (LocalStatus(CapRtd) < 1 .OR. CapRtd = 0 ).AND. FluidSysSHW = 1 .AND.
	         Type = "Conventional" .AND. FuelSrc = "Gas" )
	    then
	      PostError("All water heaters require a rated capacity.  Check input for 
	                 water heater '%s'.", Name)
	    else if( ( LocalStatus(CapRtd) < 1 .OR. CapRtd = 0 ) .AND. ( LocalStatus(InpPwr) < 1 .OR. InpPwr = 0 ) .AND. Type <> "Conventional" )
	    then
	      PostError("All heat-pump water heaters require a rated capacity or an input power.
	                 Check input for water heater '%s'.", Name)
	    else UNCHANGED
	    endif endif endif
	  endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
          then
            InpPwr * 3412
          else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" )
          then
             ( InpPwr * ValidOr(HtPumpEF,3) * 3412 ) + ValidOr(TankLoss,0)
          else
            u:CapRtd
          endif endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        CapRtd
      else if( Proj:SHWBothBaseline )
      then 
        if( Type = "Conventional" )
        then
          BaseEngyInput 
        else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" .AND. IfValidAnd (InpPwr > 0) )
        then
		      InpPwr * BaseHtPumpWtrHtrCOP * 3412  // BaseHtOutput
        else UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED                                         // no DHW modeled
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:CapRtd
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
          then
            InpPwr * 3412
          else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" )
          then
            ( InpPwr * ValidOr(HtPumpEF,3) * 3412 ) + ValidOr(TankLoss,0)
          else
            u:CapRtd
          endif endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          200000
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        if( Type = "Conventional" )
        then
          BaseEngyInput 
        else if( FuelSrc = "Electricity" .AND. Type <> "Conventional" .AND. IfValidAnd( InpPwr > 0 ) )
        then
          InpPwr * BaseHtPumpWtrHtrCOP * 3412 // BaseHtOutput       
	      else
	        BaseEngyInput 
	      endif endif
      else if( Proj:SHWPropOnly )
      then 
        if( Type = "Conventional" .AND. FuelSrc = "Gas" )
        then
          CapRtd
        else if( Type = "Conventional" .AND. FuelSrc = "Electricity" )
        then
          InpPwr * 3412
        else if( Type <> "Conventional" )              //Heat Pump
        then
            if( IsCommHtPumpWtrHtr = 1 .AND. IfValidAnd( COP > 1 ) )   // check for Commercial Storage HPWtrHtr and change formula to use COP
            then
             ( InpPwr * COP * 3412 ) 
            else 
             ( InpPwr * ValidOr(HtPumpEF,3) * 3412 ) + ValidOr(TankLoss,0)
            endif
        else UNDEFINED                   
        endif endif endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED                                      // no DHW modeled
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif    
  ANNUAL
    CapRtd
ENDRULE


// -------------- Water Heater Capacity Rated --------------
RULE WtrHtr:CapRtdSim
  DESCRIPTION
    "The rated capacity adjusted for multiple units and for non-standard 
     rating conditions."
  REPORTPRECISION
    -3
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( CapRtd > 0 ) .AND.
        IfValidAnd( CapRtdAdjFac != 0 ) )
    then
      CapRtd * CmbdMult / CapRtdAdjFac    // SHW
    else if ( FluidSysHtg = 1 )
    then
	    if( Proj:AutoHardSize = 1 .AND. LocalCompAssigned(FluidSegInRef) .AND. LocalStatus(InpPwr) < 5 .AND. LocalStatus(CapRtd) < 5   )    // For PROPOSED AutoHardSizing only
	    then           
	      if( Parent(Type) = "HotWater" )   // Space Heating
	      then
	        FluidSegOutRef:CoilHtgCapHydronic / Parent(BlrCnt)     // Non-coincident total capacity of all heating coils over BlrCnt (includes boilers and water heaters)
	      else if( Parent(Type) = "CondenserWater" ) 
        then
	        FluidSegOutRef:CoilHtExtractionLd / Parent(BlrCnt)
	      else UNDEFINED
	       endif endif  
	    else if( ( LocalStatus(InpPwr) > 6 .OR. LocalStatus(CapRtd) > 6 ) .AND. LocalCompAssigned(FluidSegInRef) )   
	    then        
	      if( IfValidAnd( CapRtd > 0 ) .AND. IfValidAnd( CapRtdAdjFac != 0 ) )
    then
	        ( CapRtd * CmbdMult ) / CapRtdAdjFac      
	      else 
	        UNDEFINED         
	      endif
	    else
	      UNDEFINED
	    endif endif
    else UNDEFINED
    endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 .AND. IfValidAnd( CapRtd > 0 ) )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          CapRtd * CmbdMult / CapRtdAdjFac
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        CapRtd * CmbdMult / CapRtdAdjFac
      else if( Proj:SHWBothBaseline )
      then 
        CapRtd / CapRtdAdjFac
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:CapRtdSim
//      CapRtd / CapRtdAdjFac
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          CapRtd * CmbdMult
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          CapRtd * Proj:IsResAndComboUnitCnt
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        zb:CapRtd
      else if( Proj:SHWPropOnly )
      then 
        zp:CapRtdSim
      else if( Proj:SHWNone )
      then 
        UNDEFINED                                   // no DHW modeled
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      if( IsExisting )
      then zp:CapRtdSim
      else CapRtd
      endif
    else UNDEFINED
    endif endif    
  ANNUAL
    CapRtdSim
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:InpPwr
  DESCRIPTION
    "The rated electrical input of an electric resistance or 
     heat pump water heater."
  HELP
    ""
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  UNITS
    kW
  REPORTPRECISION
    1
//  RESETS
//    ResetThisWhenTheFollowingIsModified
//      FuelSrc
  DEFAULT
    if( FluidSysSHW = 1 )
    then 
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:AutoHardSize = 1 )
      then 
        if( LocalStatus(CapRtd) > 6 )
        then 
          CapRtd / 3412
        else if( FuelSrc = "Electricity" .AND. LocalStatus( BaseEngyInput ) > 0 )
        then
          BaseEngyInput / 3412
        else UNDEFINED
        endif endif
      else
        if(FuelSrc = "Gas" )
        then
          UNDEFINED
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" .AND. 
                 LocalStatus(CapRtd) > 0  .AND. LocalStatus(InpPwr) < 6 )
        then
          CapRtd / 3412
        else
          UNDEFINED
        endif endif
      endif endif
    else if( FluidSysHtg = 1 )
    then
//      if( Proj:AutoHardSize = 1 )
//      then 
        if ( IfValidAnd(CapRtd > 0 ) .AND. IfValidAnd(COP > 0) )
      then
          CapRtd / 3412 / COP
        else if( Proj:AutoHardSize = 1 )
    then
          CapRtd / 3412 / 3
        else
          UNDEFINED
        endif endif
//      else UNDEFINED
//      endif
    else UNDEFINED
    endif endif
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 .AND. FluidSysSHW = 1 )
    then UNCHANGED
    else		
	    if( FuelSrc != "Electricity" )
	    then
	      UNCHANGED
//	    else if( (LocalStatus(InpPwr) < 1 ) .AND. FluidSysSHW = 1 )
	    else if( (LocalStatus(InpPwr) < 1 ) .AND. FluidSysHtg = 0 )
	    then
	      PostError("All electric water heaters require a rated input.
	                 Check values for water heater '%s'.", Name)
	    else if( InpPwr <= 0 )
	    then
	      PostError("All electric water heaters require a nonzero rated input.  
	                 Check values for water heater '%s'.", Name)
	//    else if( InpPwr > 12 .AND. IfValidAnd( Type <> "Conventional") )
	//    then
	//      PostError("The rated electrical input of the heat-pump water heater 
	//                 should be <= 12 kW. 
	//                Check values for water heater '%s'.", Name)
	    else UNCHANGED
	    endif endif endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:InpPwr
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        u:InpPwr
      else if( Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Electricity" .AND. LocalStatus( BaseEngyInput ) > 0 )
        then
          BaseEngyInput / 3412
        else UNDEFINED 
        endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:InpPwr
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Electricity" .AND. LocalStatus( BaseEngyInput ) > 0 )
        then
          BaseEngyInput / 3412
        else UNDEFINED 
        endif
      else if( Proj:SHWPropOnly )
      then 
        u:InpPwr
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:InpPwr
    else UNDEFINED
    endif endif
  ANNUAL    
    InpPwr
ENDRULE

// -------------- Boiler Water Flow --------------------------------------------
RULE WtrHtr:WtrFlowCap
  DESCRIPTION
    "The water flow rate for a water heater used in space heating."
  HELP
    ""
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gpm
  REPORTPRECISION
    1
  DEFAULT
    if( FluidSysHtg = 1 ) then
      if( IfValidAnd( CapRtd > 0 ) .AND.
          IfValidAnd( ParentValid( DsgnSupWtrDelT ) > 0 ) ) then
          // gpm = Btuh / 8.3365 (lb/gal) / 60 (min/hr) / Design loop dT
        CapRtd/500.19/Parent(DsgnSupWtrDelT)
      else UNDEFINED
      endif
    else UNDEFINED
    endif
  SIZING
    if( IsBaseSys .OR. FluidSysHtg = 0 ) 
    then
      UNDEFINED   // AutoSize
    else
      u:WtrFlowCap
    endif
  ANNUAL
    if( IsBaseSys .OR. FluidSysHtg = 0 ) 
    then
      UNDEFINED
    else
      z:WtrFlowCap
    endif
ENDRULE


// -------------- Boiler Water Flow --------------------------------------------
RULE WtrHtr:WtrFlowCapSim
  DESCRIPTION
    "The water flow rate for a water heater used in space heating."
  HELP
    ""
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gpm
  REPORTPRECISION
    1
  DEFAULT
    if( FluidSysHtg = 1 ) then
      if( IfValidAnd( CapRtd > 0 ) .AND. IfValidAnd( ParentValid( DsgnSupWtrDelT ) > 0 ) ) 
      then
        WtrFlowCap / CapRtdAdjFac 
      else UNDEFINED
      endif
    else UNDEFINED
    endif
  SIZING
    if( IsBaseSys .OR. FluidSysHtg = 0 ) 
    then
      UNDEFINED   // AutoSize
    else
      u:WtrFlowCapSim
    endif
  ANNUAL
    if( IsBaseSys .OR. FluidSysHtg = 0 ) 
    then
      UNDEFINED
    else
      z:WtrFlowCapSim
    endif
ENDRULE


// ---------- Water Heater Outlet Fluid Segment Reference Check --------------
RULE WtrHtr:FluidSegOutRef
  DESCRIPTION
    "Checking that the water heater outlet fluid segment is referenced 
     correctly."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  CHECKSIM
    if( Proj:ExcludeWtrHtg = 1 .AND. FluidSysSHW = 1 )
    then UNCHANGED
    else
	    if( LocalStatus( FluidSegOutRef ) < 1 )
	    then
	      PostError("The outlet fluid segment of water heater '%s' must be assigned to a 
	                 Service Hot Water system", Name)
	    else if( FluidSysSHW = 1
	             .AND. FluidSegOutRef:ParentFluidSysType != "ServiceHotWater" )
	    then
	      PostError("The outlet fluid segment of water heater '%s' must belong to a 
	                 Service Hot Water system", Name)
	    else if( Parent(Type) = "HotWater"
	             .AND. FluidSegOutRef:ParentFluidSysType != "HotWater" )
	    then
	      PostError("The outlet fluid segment of water heater '%s' must belong to a 
	                 Hot Water system", Name)
	    else if( Parent(Type) = "CondenserWater"
	             .AND. FluidSegOutRef:ParentFluidSysType != "CondenserWater" )
	    then
	      PostError("The outlet fluid segment of water heater '%s' must belong to a 
	                 Condenser Water system", Name)
	    else UNCHANGED
	    endif endif endif endif
    endif
ENDRULE

// ---------- Water Heater Makeup Fluid Segment Reference Check --------------
RULE WtrHtr:FluidSegMakeupRef
  DESCRIPTION
    "Checking that the water heater makeup fluid segment is referenced 
     correctly."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  CHECKSIM
    if( Proj:ExcludeWtrHtg = 1 .AND. FluidSysSHW = 1 )
    then UNCHANGED
    else if( Parent(Type) <> "ServiceHotWater" .AND. LocalStatus( FluidSegMakeupRef ) > 0 )
    then
	    PostError( "Water heater '%s' is not assigned to a Service Hot Water 
	                system and should not have a Makeup fluid segment assigned but 
	                should have an inlet fluid segment assigned instead.", Name )
    else if( Parent(Type) = "ServiceHotWater" .AND. LocalStatus( FluidSegMakeupRef ) < 1 )
    then
	    PostError("The water heater '%s' must have a makeup fluid segment assigned", Name)
//    else if( FluidSegMakeupRef:ParentFluidSysType != "ServiceHotWater" )
//    then
//	    PostError("The makeup fluid segment of water heater '%s' must belong to a 
//	               Service Hot Water system", Name)
	  else UNCHANGED
	  endif endif endif // endif
ENDRULE


// ---------- Water Heater Inlet Fluid Segment Reference Check --------------
RULE WtrHtr:FluidSegInRef
  DESCRIPTION
    "Checking that the water heater inlet fluid segment is referenced 
     correctly for water heaters not doing Service Water Heating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  CHECKSIM
    if( FluidSysSHW = 1 .AND. LocalStatus( FluidSegInRef ) > 0 )
    then
	    PostError( "Water heater '%s' is assigned to a Service Hot Water 
	                system and should have a Makeup fluid segment assigned but 
	                has an inlet fluid segment assigned instead.", Name )
	  else if( FluidSysHtg = 1 .AND. LocalStatus( FluidSegInRef ) < 1 )
	  then
	    PostError( "Water heater '%s' must have an inlet fluid segment 
	                assigned", Name )
	  else UNCHANGED
	  endif endif
ENDRULE


// ---------- Water Heater Inlet Fluid Segment Reference Check --------------
RULE WtrHtr:FluidSegInRefSim
  DESCRIPTION
    "Water heaters can have either a makeup fluid segment connection or an inlet
     fluid segment.  This variable passes either one to simulation using a 
     single XML name."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  SIZING
    if( FluidSysSHW = 1 )
    then FluidSegMakeupRef
    else if( FluidSysHtg = 1 )
    then FluidSegInRef
    else UNCHANGED
    endif endif
ENDRULE


// -------------- Fluid Segment Water Heater Storage Capacity --------------------
RULE NEW FluidSeg:WtrHtrInstantChk
  DATATYPE
    Float
  LONGFORM
    WaterHeaterInstantaneousCheck
  DESCRIPTION
    "Checks the number of instantaneous water heaters on each service water 
     heating fluid segment."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  DEFAULT
    if( Parent(Type) = "ServiceHotWater" )
    then
      SumRevRef( WtrHtr:FluidSegOutRef, WtrHtr:IsInstant)
    else UNDEFINED
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:StorCap
  DESCRIPTION
    "This is the water heater's storage capacity."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  UNITS
    gal
  REPORTPRECISION
    2
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:StorCap
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:AutoHardSize = 1 )
      then 
        BaseHtOutput / 0.60 * 0.40 / ( ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877 ) 
      else
        UNDEFINED
      endif endif
    else if( FluidSysHtg = 1 )
    then
      if( Proj:AutoHardSize = 1 .AND. LocalCompAssigned(FluidSegInRef) ) 
      then            // For PROPOSED AutoHardSizing only
	      if( IfValidAnd( InpPwr > 0 ) )
	      then 
	        InpPwr         // If user specifies StorCap = 0 , simulate a StorCap with asummption of 1 gal/kW
	      else
	        0
        endif
	    else
	      UNDEFINED
      endif
    else UNDEFINED
    endif endif
  CHECKCODE
    if( (Proj:ExcludeWtrHtg = 1 .AND. FluidSysSHW = 1 ) .OR. ( FluidSysHtg = 1 ) )
    then UNCHANGED
    else
	    if( LocalStatus( StorCap ) < 1 )
	    then
	      PostError("All Water Heaters require a storage capacity.  Check input for 
	                 water heater '%s'.", Name)
	    else
	      if( StorCap = 0 )
	      then
	        PostError("All Water Heaters require a non-zero storage capacity.  Check input for 
	                   water heater '%s'.", Name)     
	      else UNCHANGED
	      endif
	    endif
	  endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:StorCap
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        StorCap
      else if( Proj:SHWBothBaseline )
      then
        BaseHtOutput / 0.60 * 0.40 / ( ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877 ) 
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      StorCap
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:StorCap
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          1
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        StorCap
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019)
        then
          max(BaseHtOutput / 0.60 * 0.40 / ( ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877 ), 30)
//         int( (BaseHtOutput / 0.60 * 0.40 / ( ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877 )) / 80 + 0.5 ) * 80
        else
        BaseHtOutput / 0.60 * 0.40 / ( ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877 ) 
        endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      StorCap
    else UNDEFINED
    endif endif 
  ANNUAL
    z:StorCap
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:BaseHtPumpWtrHtrTankLoss
  DATATYPE
    FLoat
  LONGFORM
    BaselineHeatPumpWaterHeaterTankLoss
  DESCRIPTION
    "Baseline heat-pump water heater tank loss calculated based on storage capacity"
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( LocalStatus( StorCap ) > 0 )
        then 
          BaseHtPumpWtHtrTankLossTbl:BaseHtPumpWtrHtrTankLoss("StorCapRng", StorCap)
      else UNDEFINED
      endif    
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type <> "Conventional" )
    then
      if( LocalStatus( StorCap ) > 0 )
        then 
          BaseHtPumpWtHtrTankLossTbl:BaseHtPumpWtrHtrTankLoss("StorCapRng", StorCap)
      else UNDEFINED
      endif    
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    z:BaseHtPumpWtrHtrTankLoss
ENDRULE

// -----------------------------------------------------------------------------
RULE NEW WtrHtr:BaseEngyInput
  SIZING_BASELINE
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        if( FuelSrc = "Gas" )
        then
          BaseHtOutput / ValidOr(ThrmlEff, 0.80)
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          BaseHtOutput
        else if( FuelSrc = "Electricity" .AND. Type <> "Conventional"  )
        then
         ( BaseHtOutput - BaseHtPumpWtrHtrTankLoss )  / 1.94778   // 1.94778 - Calculated HtPumpEF based on a UEF 2.15
        else UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then 
        u:InpPwr
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE


// ----------------------------------------
RULE NEW WtrHtr:BaseHtPumpCnt
  LONGFORM
    BaselineHeatPumpCount
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  SIZING
    int ( (ValidOr(StorCap,80) / 80) + 0.5 )
ENDRULE

// -------------- Water Heater --------------
RULE WtrHtr:StorCapSim
  DESCRIPTION
    "The water heater storage volume used for simulation including multipliers."
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then
      ( ValidOr( StorCap, 0 ) * CmbdMult )
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          StorCap * u:CmbdMult
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        zp:StorCap * u:CmbdMult
      else if( Proj:SHWBothBaseline )
      then
        zp:StorCap
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      if( IfValidAnd( StorCap > 0 ) )
      then 
      StorCap
      else 
        InpPwr  // If user specifies StorCap = 0 , simulate a StorCap with asummption of 1 gal/kW
      endif
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          StorCap * u:CmbdMult
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          1
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        zb:StorCap * u:CmbdMult
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        zb:StorCap
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      StorCap
    else UNDEFINED
    endif endif 
  ANNUAL
    StorCapSim
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:IsWtrHtrNewEffDesignation
 DATATYPE
    Integer
  LONGFORM
    IsWaterHeaterNewEfficiencyDesignation
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "Existing" .AND. IfValidAnd( IsUEFRtd = 1 )  )
    then 
      0        // Do not change modeling inputs
    else if( Status = "Existing" .AND. IfValidAnd( IsUEFRtd = 0 )  )
    then
      1       // Do not change modeling inputs
    else if( Status = "New" .AND. IfValidAnd( IsUEFRtd = 1 )  )  
    then
      0        // Do not change modeling inputs
    else if( Status = "New" .AND. IfValidAnd( IsUEFRtd = 0 )  ) 
    then
      2
    else
      2
    endif endif endif endif
//  CHECKCODE
//    if( IfValidAnd( IsUEFRtd = 1 ) .AND. IfValidAnd( UEFRtdVal = 0) )
//    then
//      PostWarning("Water heater '%s' has the flag set to indicate that 
//                   it is UEF rated, but the volume and input ratings do 
//                   not fall into a classification which uses UEF ratings.
//                   The flag should be unchecked, or the inputs should be 
//                   verified to ensure accuracy.",Name)
//    else UNCHANGED
//    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:IsWtrHtrNewEffDesignation
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:IsWtrHtrNewEffDesignation
      else if( Proj:SHWBothBaseline )
      then
        0        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:IsWtrHtrNewEffDesignation
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then
        u:IsWtrHtrNewEffDesignation
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        UNDEFINED               
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:IsWtrHtrNewEffDesignation
  ANNUAL_BASELINE
    zb:IsWtrHtrNewEffDesignation
ENDRULE



// -----------------------------------------------------------------------------
RULE NEW WtrHtr:UEFRtdVal
  DATATYPE
    Integer
  LONGFORM
    UniformEnergyFactorRatedValue
  DESCRIPTION
    "A flag value to indicate that the user has indicated that the water heater
     has a UEF efficiency rating and that the characteristics of the water
     heater allow a code minimum UEF to be determined."
  INPUTCLASS
    NotInput
  DEFAULT
//   if( IfValidAnd( IsUEFRtd = 0 ) )
    if( IfValidAnd( IsWtrHtrNewEffDesignation = 1) )
    then 0
   else if( FuelSrc = "Gas" )
      then
        if( IfValidAnd( StorCap >= 20 ) .AND. IfValidAnd( StorCap <= 100 ) .AND. 
            IfValidAnd( CapRtd <= 75000 ) )
        then
          10  // Consumer Gas-Fired Storage Water Heater
        else if( IfValidAnd( StorCap >= 0 ) .AND. IfValidAnd( StorCap < 2 ) .AND.
                 IfValidAnd( CapRtd > 50000 ) .AND. IfValidAnd( CapRtd <= 200000 ) )
        then 
          20  // Consumer Intantaneous Gas-Fired Water Heater
        else if( IfValidAnd( StorCap >= 20 ) .AND. IfValidAnd( StorCap <= 120 ) .AND. 
                 IfValidAnd( CapRtd > 75000 ) .AND. IfValidAnd( CapRtd <= 105000 )  .AND. IsUEFRtd = 1 )
//                 .AND. CapRtd / Max( StorCap, 1)  < 4000 )
        then 
          30  // Residential-Duty Commercial Gas-Fired Storage
        else 0
        endif endif endif
    else if( FuelSrc = "Electricity" )
    then
        if( Type = "Conventional" .AND. IfValidAnd( StorCap >= 20 ) .AND. IfValidAnd( StorCap <= 120 ) .AND.
            IfValidAnd( InpPwr <= 12 ) )
        then
          40      // Consumer Electric Storage Water Heater
//        else if(  Type <> "Conventional" .AND.  ( IfValidAnd( StorCap > 120 ) .OR. IfValidAnd( InpPwr > 12 ) ) )
//        then
//          45      // Commerical Electric Storage Heat-Pump Water Heater
        else if(  Type <> "Conventional" .AND. IfValidAnd( StorCap >= 20 ) .AND. IfValidAnd( StorCap <= 120 ) .AND.
            IfValidAnd( InpPwr <= 12 ) .AND. IsUEFRtd = 1 )
        then
          50      // Consumer Electric Storage Heat-Pump Water Heater
        else if( Type = "Conventional" .AND. IfValidAnd( StorCap >= 0 ) .AND. IfValidAnd( StorCap < 2 ) .AND.
                 IfValidAnd( InpPwr <= 12 )  )
        then 
          60      // Consumer Instantaneous Electric Water Heater
        else if( Type = "Conventional" .AND. IfValidAnd( StorCap >= 0 ) .AND. IfValidAnd( StorCap <= 2 ) .AND.
                 IfValidAnd( InpPwr > 12 ) .AND. IfValidAnd( InpPwr <= 58.6 ) .AND. IsUEFRtd = 1 )
        then 
          70     // Residential-Duty Commercial Electric Instantaneous Water Heater
        else 0
        endif endif endif endif
    else
      0
    endif endif endif
  CHECKCODE
//    if( IfValidAnd( IsUEFRtd = 1 ) .AND. IfValidAnd( UEFRtdVal = 0) )
    if( Proj:ExcludeWtrHtg = 1 .AND. FluidSysSHW = 1 )
    then UNCHANGED
    else
      if( IfValidAnd( IsWtrHtrNewEffDesignation = 0 ) .AND. IfValidAnd( UEFRtdVal = 0) )
      then
      PostWarning("Water heater '%s' has the flag set to indicate that 
                   it is UEF rated, but the volume and input ratings do 
                   not fall into a classification which uses UEF ratings.
                   The flag should be unchecked, or the inputs should be 
                   verified to ensure accuracy.",Name)
      else UNCHANGED
      endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:UEFRtdVal
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:UEFRtdVal
      else if( Proj:SHWBothBaseline )
      then
        0        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:UEFRtdVal
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then
        u:UEFRtdVal
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
				if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
				then 50
				else UNDEFINED
				endif             
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:UEFRtdVal
  ANNUAL_BASELINE
    zb:UEFRtdVal
ENDRULE

// -------------- Water Heater SubType --------------------
RULE WtrHtr:SubType
  DESCRIPTION
    "Conventional water heaters are instantaneous or storage."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  OPTION
    Instantaneous
    Storage
  DEFAULT
    if( IfValidAnd( UEFRtdVal < 10 ) )
    then
        if( IfValidAnd( Type <> "Conventional" ) )
        then
          "Storage"   // previously undefined
        else if( IfValidAnd( CapRtd > 0 ) .AND. IfValidAnd( StorCap >= 0 ) )
        then
          if( StorCap < 2 )               // Covers the Consumer Gas/Electric and RDC Electric 
          then "Instantaneous"
          else if( FuelSrc = "Gas" )
          then
              if( CapRtd / StorCap < 4000 )
              then "Storage"
              else "Instantaneous"              
              endif 
          else if( FuelSrc = "Electricity" )
          then
              if( (InpPwr * 3412) / StorCap < 4000 )
              then "Storage"
              else "Instantaneous"
              endif         
          else
            UNDEFINED
          endif endif endif
        else UNDEFINED
        endif endif
     else  if( IfValidAnd( UEFRtdVal >= 10 ) )
    then
        switch ( UEFRtdVal  )
          case 10:  // Consumer Gas-Fired Storage Water Heater
            "Storage"
          case 20:  // Consumer Intantaneous Gas-Fired Water Heater
            "Instantaneous"
          case 30:  // Residential-Duty Commercial Gas-Fired Storage
            "Storage"
          case 40:  // Consumer Electric Storage Water Heater
            "Storage"
          case 50:  // Consumer Electric Storage Heat-Pump Water Heater
            "Storage"
          case 60:  // Consumer Instantaneous Electric Water Heater
            "Instantaneous"
          case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
            "Instantaneous"            
          default:
            UNDEFINED    
        endswitch        
    else 
      UNDEFINED
   endif endif
  CHECKSIM    
    if( FluidSysSHW = 1 )
    then
      if( ChildCount(Pump) > 0 )
      then
      PostError("The water heater '%s' should not have a pump.  Currently, water main
                 pressure is used to deliver water to fixtures for both the standard
                 and proposed design.",Name)
      else UNCHANGED
      endif
    else if( FluidSysHtg = 1 )
    then
      UNCHANGED
    else UNCHANGED
    endif endif
  SIZING_PROPOSED
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      SubType
    else if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          SubType
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        SubType
      else if( Proj:SHWBothBaseline )
      then
        "Storage"        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      if ( Bldg:IsSchoolBldgForWtrHtr = 1 )
      then "Storage"
      else UNCHANGED // UNDEFINED
      endif
    else if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          SubType
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          "Instantaneous"
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        SubType
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        "Storage"
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif endif
  ANNUAL_PROPOSED
    zp:SubType
  ANNUAL_BASELINE  
    zb:SubType
ENDRULE


// ---------- Water Heater Subtype is Instantaneous --------------
RULE NEW WtrHtr:IsInstant
  DATATYPE
    Integer
  LONGFORM
    IsInstantaneous
  DESCRIPTION
    "This is a boolean to check if a Water Heater is Instantaneous or Other."
  HELP
    ""
  REFERENCE
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( SubType = "Instantaneous" )
      then 1
      else 0
      endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE

// -------------- Water Heater Size --------------------
RULE WtrHtr:Size
  DESCRIPTION
    "This determines the size of the water heater, either Large or Small
     based on the rated capacity in BTU/h."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( Type <> "Conventional" )    // Heat pump
      then UNDEFINED
      else if( FuelSrc = "Electricity" .AND. 
               ( IfValidAnd(WtrHtr:InpPwr > 12) .OR. IfValidAnd(WtrHtr:StorCap > 120) ) )
      then "Large"
      else if( FuelSrc = "Gas" .AND. SubType = "Storage" .AND. 
               IfValidAnd(WtrHtr:CapRtd > 75000) )
      then "Large"
      else if( FuelSrc = "Gas" .AND. SubType = "Instantaneous" .AND. 
               IfValidAnd(WtrHtr:CapRtd > 200000) )
      then "Large"
      else if( FuelSrc = "FuelOil#1" .AND. SubType = "Storage".AND. 
               IfValidAnd(CapRtd > 105000) )
      then "Large"
      else if( FuelSrc = "FuelOil#1" .AND. SubType = "Instantaneous" .AND. 
               IfValidAnd(CapRtd > 210000) )
      then "Large"
      else "Small"
      endif endif endif endif endif endif
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( Type <> "Conventional" )
          then UNDEFINED
          else if( (CapRtdSim / CmbdMult) > 40944 .AND. u:FuelSrc = "Electricity" ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 75000 .AND. u:SubType = "Storage" .AND. (u:FuelSrc = "Gas") ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 200000 .AND. u:SubType = "Instantaneous" .AND. (u:FuelSrc = "Gas") ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 105000 .AND. u:SubType = "Storage" .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 210000 .AND. u:SubType = "Instantaneous" .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
          else "Small"
          endif endif endif endif endif endif      
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( Type <> "Conventional" )
        then UNDEFINED
        else if( (CapRtdSim / CmbdMult) > 40944 .AND. u:FuelSrc = "Electricity" ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 75000 .AND. u:SubType = "Storage" .AND. (u:FuelSrc = "Gas") ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 200000 .AND. u:SubType = "Instantaneous" .AND. (u:FuelSrc = "Gas") ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 105000 .AND. u:SubType = "Storage" .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 210000 .AND. u:SubType = "Instantaneous" .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
        else "Small"
        endif endif endif endif endif endif      
      else if( Proj:SHWBothBaseline )
      then
        if( Type <> "Conventional" )
        then UNDEFINED
        else
          if( FuelSrc = "Gas" )
          then
            if( (CapRtdSim ) > 75000 ) 
            then "Large"
            else if( CapRtdSim <= 75000 ) 
            then "Small"
            else UNDEFINED
            endif endif
          else if( FuelSrc = "Electricity" )
          then
            if( CapRtdSim > 40944 )   // 40944 Btuh = 12 kW
            then "Large"
            else if( CapRtdSim / Cnt <= 40944 ) 
            then "Small"
            else UNDEFINED
            endif endif
          else
            UNDEFINED
          endif endif         
        endif     
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( Type <> "Conventional" )
          then UNDEFINED
          else if( (CapRtdSim / CmbdMult) > 40944 .AND. u:FuelSrc = "Electricity" ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 75000 .AND. u:SubType = "Storage" .AND. (u:FuelSrc = "Gas") ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 200000 .AND. u:SubType = "Instantaneous" .AND. (u:FuelSrc = "Gas") ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 105000 .AND. u:SubType = "Storage"  .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
          else if( (CapRtdSim / CmbdMult) > 210000 .AND. u:SubType = "Instantaneous" .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
          else "Small"
          endif endif endif endif endif endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          "Small"
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if( Type <> "Conventional" )
        then UNDEFINED
        else
          if( FuelSrc = "Gas" )
          then
            if( (CapRtdSim ) > 75000 ) 
            then "Large"
            else if( CapRtdSim <= 75000 ) 
            then "Small"
            else UNDEFINED
            endif endif
          else if( FuelSrc = "Electricity" )
          then
            if( CapRtdSim > 40944 )   // 40944 Btuh = 12 kW
            then "Large"
            else if( CapRtdSim / Cnt <= 40944 ) 
            then "Small"
            else UNDEFINED
            endif endif
          else
            UNDEFINED
          endif endif         
        endif     
      else if( Proj:SHWPropOnly )
      then
        if( Type <> "Conventional" )
        then UNDEFINED
        else if( (CapRtdSim / CmbdMult) > 40944 .AND. u:FuelSrc = "Electricity" ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 75000 .AND. u:SubType = "Storage" .AND. (u:FuelSrc = "Gas") ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 200000 .AND. u:SubType = "Instantaneous" .AND. (u:FuelSrc = "Gas") ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 105000 .AND. u:SubType = "Storage"  .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
        else if( (CapRtdSim / CmbdMult) > 210000 .AND. u:SubType = "Instantaneous" .AND. u:FuelSrc = "FuelOil#1" ) then "Large"
        else "Small"
        endif endif endif endif endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif    
  ANNUAL_PROPOSED
    zp:Size
  ANNUAL_BASELINE
    zb:Size
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:SizeFuelType
  DATATYPE
    String
  LONGFORM
    SizeFuelType
  DESCRIPTION
    "A label describing the size (large or small), fuel (gas or electric), and
     subtype (storage or instantaneous)."
  HELP
    ""
  REFERENCE
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( Type <> "Conventional" )
      then UNDEFINED
      else if( FuelSrc = "Gas" .AND. SubType = "Instantaneous" )
      then
        if( Size = "Small" )
        then
          "SmallGasInstant"
        else
          "LargeGasInstant"
        endif
      else if( FuelSrc = "Gas" .AND. SubType = "Storage" )
      then
        if( Size = "Small" )
        then
          "SmallGasStorage"
        else
          "LargeGasStorage"
        endif
      else if( FuelSrc = "Electricity" .AND. SubType = "Instantaneous" )
      then
        if( Size = "Small" )
        then
          "SmallElectricInstant"
        else
          "LargeElectricInstant"
        endif
      else if( FuelSrc = "Electricity" .AND. SubType = "Storage" )
      then
        if( Size = "Small" )
        then
          "SmallElectricStorage"
        else
          "LargeElectricStorage"
        endif
      else "Other"
      endif endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEF
  DESCRIPTION
    "Uniform Energy Factor (UEF) is the newest measure of water heater 
    overall efficiency. UEF is determined by the Department of Energy’s 
    test method outlined in 10 CFR Part 430, Subpart B, Appendix E"
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  MINIMUM
    0.20
  MAXIMUM
    4
  REPORTPRECISION
    3
  INPUTCLASS
    CondRequired
  DEFAULT
    if( Proj:AutoEffInput = 1 )
    then 
      if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal >=10 ) )
      then
        switch ( UEFRtdVal  )
        case 10:          // Consumer Gas-Fired Storage Water Heater
          0.56
        case 20:          // Consumer Intantaneous Gas-Fired Water Heater
          0.81
        case 30:          // Residential-Duty Commercial Gas-Fired Storage
          0.61
        case 40:          // Consumer Electric Storage Water Heater
          0.92
        case 50:         // Consumer Electric Storage Heat-Pump Water Heater
          2
        case 60:         // Consumer Instantaneous Electric Water Heater
          0.92
        case 70:        // Residential-Duty Commercial Electric Instantaneous Water Heater
          0.8
        default:
          0.90
        endswitch
      else 
        0.56
      endif  
    else 
     UNDEFINED
    endif   
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 .OR. IfValidAnd( UEFRtdVal < 10 ) )
    then
      UNCHANGED
    else 
        if( FluidSys:Type = "ServiceHotWater" .AND. LocalStatus(UEF) < 1 .AND. 
            IfValidAnd( UEFRtdVal >= 10 ) )
        then 
          PostError("A Uniform Energy Factor (UEF) is required for water heater '%s'.", Name)
        else if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal >= 10 ) )
        then 
          switch ( UEFRtdVal  )
          case 10:          // Consumer Gas-Fired Storage Water Heater
            if( IfValidAnd( UEF < 0.24 ) .OR. IfValidAnd( UEF >= 1 ) .AND. Status = "New" )
            then
              PostError("The Uniform Energy Factor for consumer storage gas 
                         water heater '%s' must be >=0.24 and < 1", Name)
            else UNCHANGED
            endif
          case 20:          // Consumer Intantaneous Gas-Fired Water Heater
            if( IfValidAnd( UEF < 0.81 ) .OR. IfValidAnd( UEF > 0.99 ) .AND. Status = "New"  )
            then
              PostError("The Uniform Energy Factor for consumer instantaneous gas 
                         water heater '%s' must be > 0.8 and < 0.99", Name)
            else UNCHANGED  
            endif          
          case 30:          // Residential-Duty Commercial Gas-Fired Storage
            if( IfValidAnd( UEF < 0.24 ) .OR. IfValidAnd( UEF >= 1 ) .AND. Status = "New" )
            then
              PostError("The Uniform Energy Factor for residential-duty commercial
                         storage gas water heater '%s' must be >=0.24 and < 1", Name)
            else UNCHANGED
            endif
          case 40:          // Consumer Electric Storage Water Heater
            if( IfValidAnd( UEF < 0.92 ) .OR. IfValidAnd( UEF > 0.94 ) .AND. Status = "New"  )
            then
              PostError("The Uniform Energy Factor for consumer storage electric 
                         water heater '%s' must be >=0.92 and <= 0.94", Name)
            else UNCHANGED
            endif
          case 50:         // Consumer Electric Storage Heat-Pump Water Heater
            if( IfValidAnd( UEF < 2 ) .OR. IfValidAnd( UEF > 4 ) .AND. Status = "New"  )
            then
              PostError("The Uniform Energy Factor (UEF) for heat-pump  
                         water heater '%s' must be >=2 and <= 4", Name)
            else UNCHANGED
            endif         
          case 60:         // Consumer Instantaneous Electric Water Heater
            if( IfValidAnd( UEF < 0.92 ) .OR. IfValidAnd( UEF >= 1 ) .AND. Status = "New"  )
            then
              PostError("The Uniform Energy Factor for consumer instantaneous electric 
                         water heater '%s' must be >=0.92 and < 1", Name)
            else UNCHANGED
            endif
          case 70:        // Residential-Duty Commercial Electric Instantaneous Water Heater
            if( IfValidAnd( UEF < 0.8 ) .OR. IfValidAnd( UEF >= 1 )  .AND. Status = "New" )
            then
              PostError("The Uniform Energy Factor (UEF) for residential-duty commercial 
                          instantaneous electric water heater '%s' must be >=0.8 and < 1", Name)
            else UNCHANGED
            endif           
          default:
            UNCHANGED
          endswitch  
        else UNCHANGED
        endif endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            UEF
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          UEF
        else
          UNDEFINED
        endif
      else if( Proj:SHWBothBaseline )
      then
        UNDEFINED
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            UEF
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          UEF
        else
          UNDEFINED
        endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
          if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
          then 2.15
          else UNDEFINED
          endif               
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:UEF
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:FlowRt
  DESCRIPTION
    "Flow rate for water heater"
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  MAXIMUM
    20
  REPORTPRECISION
    0
  INPUTCLASS
    CondRequired
  DEFAULT
    if( Proj:AutoEffInput = 1 )
    then 
      if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal >=10 ) )
      then
        switch ( UEFRtdVal  )
        case 10:          // Consumer Gas-Fired Storage Water Heater
          UNDEFINED
        case 20:          // Consumer Intantaneous Gas-Fired Water Heater
          8
        case 30:          // Residential-Duty Commercial Gas-Fired Storage
          UNDEFINED
        case 40:          // Consumer Electric Storage Water Heater
          UNDEFINED
        case 50:         // Consumer Electric Storage Heat-Pump Water Heater
          UNDEFINED
        case 60:         // Consumer Instantaneous Electric Water Heater
          2
        case 70:        // Residential-Duty Commercial Electric Instantaneous Water Heater
          5
        default:
          0
        endswitch  
      else 
        0
      endif  
    else 
     UNDEFINED
    endif   
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 .OR. IfValidAnd( UEFRtdVal < 10 ) )
    then
      UNCHANGED
    else
      if( FluidSys:Type = "ServiceHotWater" .AND. WtrHtr:SubType = "Instantaneous" .AND.
          LocalStatus(FlowRt) < 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) )
      then
        PostError("Instantaneous water heaters require a flow rate. Check input for 
                   water heater '%s'.", Name)
      else UNCHANGED
      endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            FlowRt
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          FlowRt
        else
          UNDEFINED
        endif
      else if( Proj:SHWBothBaseline )
      then
        UNDEFINED
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then 
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            FlowRt
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          FlowRt
        else
          UNDEFINED
        endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        UNDEFINED                    
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:FlowRt
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:FirstHrRating
  DESCRIPTION
    "This is the water heater's first hour rating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  UNITS
    gal
  MINIMUM
    0
  MAXIMUM
    250
  REPORTPRECISION
    0
  DEFAULT
    if( Proj:AutoEffInput = 1 )
    then 
      if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal >=10 ) )
      then
        switch ( UEFRtdVal  )
        case 10:          // Consumer Gas-Fired Storage Water Heater
          80
        case 20:          // Consumer Intantaneous Gas-Fired Water Heater
          UNDEFINED
        case 30:          // Residential-Duty Commercial Gas-Fired Storage
          120
        case 40:          // Consumer Electric Storage Water Heater
          60
        case 50:         // Consumer Electric Storage Heat-Pump Water Heater
          66
        case 60:         // Consumer Instantaneous Electric Water Heater
          UNDEFINED
        case 70:        // Residential-Duty Commercial Electric Instantaneous Water Heater
          UNDEFINED
        default:
          0
        endswitch  
      else 
        0
      endif  
    else 
     UNDEFINED
    endif   
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 .OR. IfValidAnd( UEFRtdVal < 10 ) )
    then
      UNCHANGED
    else
      if( FluidSys:Type = "ServiceHotWater" .AND. WtrHtr:SubType = "Storage" .AND.
          LocalStatus(FirstHrRating) < 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) )
      then
        PostError("Storage water heater require a First Hour Rating. Check input for 
                   water heater '%s'.", Name)
      else
        if( WtrHtr:SubType = "Storage" .AND. IfValidAnd( UEFRtdVal = 10 ) .AND. 
            IfValidAnd( FirstHrRating >150 ) .AND. Status = "New" )
        then
          PostError("Consumer storage water heater '%s' should have a 
                      first hour rating <= 150.",Name)
        else if( WtrHtr:SubType = "Storage" .AND. IfValidAnd( UEFRtdVal = 30 ) .AND. 
                 IfValidAnd( FirstHrRating >250 ) .AND. Status = "New"  )
        then
          PostError("Residential-duty commercial storage water heater '%s' 
                     should have a first hour rating <= 250.",Name)
//        else if( WtrHtr:SubType = "Storage" .AND. IfValidAnd( UEFRtdVal = 40 ) .AND. 
//                 IfValidAnd( FirstHrRating >100 ) )
//        then
//          PostError("Consumer storage water heater '%s' should have a 
//                     first hour rating <= 100.",Name)
//        else if( WtrHtr:SubType = "Storage" .AND. IfValidAnd( UEFRtdVal = 50 ) .AND. 
//                 IfValidAnd( FirstHrRating >100 ) )
//        then
//          PostError("Heat-pump water heater '%s' should have a first hour rating <= 100.",Name)
        else 
         UNCHANGED
        endif endif
      endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:FirstHrRating
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:FirstHrRating
      else if( Proj:SHWBothBaseline )
      then
       UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
    then 75
    else UNDEFINED
    endif
  ANNUAL_PROPOSED
    zp:FirstHrRating
  ANNUAL_BASELINE
    zb:FirstHrRating    
ENDRULE

// -----------------------------------------------------------------------------
TABLE UEFMdlDrawPatternFHRTbl
  FHRRng  UEFMdlDrawPattern 
  <18     "Very Small"
  <51     "Low"       
  <75     "Medium"    
  >=75    "High"      
ENDTABLE

// -----------------------------------------------------------------------------
TABLE UEFMdlDrawPatternFlowRtTbl
  FlowRtRng  UEFMdlDrawPattern   
  <1.7       "Very Small"
  <2.8       "Low"       
  <4         "Medium"    
  >=4        "High"      
ENDTABLE

// -----------------------------------------------------------------------------
TABLE UEFMdlCoefTbl
  UEFMdlDrawPatternRng   UEFMdlCoefa   UEFMdlCoefb   UEFMdlCoefc   UEFMdlCoefd   UEFMdlCoefF   UEFMdlCoefG   UEFMdlCoefDV   UEFMdlCoefAElec   UEFMdlCoefAGas
  "Very Small"           0.250266      57.5          0.039864      67.5          0.821429      0.0043520     10             0.003819          0.026915
  "Low"                  0.065860      57.5          0.039864      67.5          0.821429      0.0011450     38             0.001549          0.010917
  "Medium"               0.045503      57.5          0.039864      67.5          0.821429      0.0007914     55             0.001186          0.008362
  "High"                 0.029794      57.5          0.039864      67.5          0.821429      0.0005181     84             0.000785          0.005534
ENDTABLE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlDrawPattern
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  
  DEFAULT
    if ( FluidSysSHW = 1 )
    then
      if( UEFRtdVal >= 10 )
      then 
        if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") )
        then
          UEFMdlDrawPatternFHRTbl:UEFMdlDrawPattern("FHRRng", FirstHrRating)
        else if( LocalStatus( FlowRt ) > 0 .AND. IfValidAnd(SubType = "Instantaneous") )
        then
          UEFMdlDrawPatternFlowRtTbl:UEFMdlDrawPattern("FlowRtRng", FlowRt)
        else
          "Medium"
        endif endif
      else 
        UNDEFINED
      endif
    else
      UNDEFINED
    endif      
  SIZING_BASELINE
    if ( FluidSysSHW = 1 )
    then
      if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
      then UEFMdlDrawPatternFHRTbl:UEFMdlDrawPattern("FHRRng", FirstHrRating)
      else UNDEFINED
      endif
    else
      UNDEFINED
    endif
  ANNUAL_BASELINE
    if ( FluidSysSHW = 1 )
    then
      if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
      then UEFMdlDrawPatternFHRTbl:UEFMdlDrawPattern("FHRRng", FirstHrRating)
      else UNDEFINED
      endif
    else
      UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefa
  DESCRIPTION
    "UEF Model Coefficient a"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
           ( UEFRtdVal = 10 .OR. UEFRtdVal = 40 )  )
      then
        UEFMdlCoefTbl:UEFMdlCoefa("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefb
  DESCRIPTION
    "UEF Model Coefficient b"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
       if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
           ( UEFRtdVal = 10 .OR. UEFRtdVal = 40 )  )
      then
        UEFMdlCoefTbl:UEFMdlCoefb("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefc
  DESCRIPTION
    "UEF Model Coefficient c"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
           ( UEFRtdVal = 10 .OR. UEFRtdVal = 40 )  )
      then
        UEFMdlCoefTbl:UEFMdlCoefc("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefd
  DESCRIPTION
    "UEF Model Coefficient d"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
           ( UEFRtdVal = 10 .OR. UEFRtdVal = 40 )  )
      then
        UEFMdlCoefTbl:UEFMdlCoefd("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefDV
  DESCRIPTION
    "UEF Model Coefficient DV"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
            UEFRtdVal = 50  )
      then
        UEFMdlCoefTbl:UEFMdlCoefDV("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
	SIZING_BASELINE
      if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
      then 
        UEFMdlCoefTbl:UEFMdlCoefDV("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else 
        UNDEFINED
      endif
	ANNUAL_BASELINE
      if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
      then 
        UEFMdlCoefTbl:UEFMdlCoefDV("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else 
        UNDEFINED
      endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefF
  DESCRIPTION
    "UEF Model Coefficient F"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
           UEFRtdVal = 30 )
      then
        UEFMdlCoefTbl:UEFMdlCoefF("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefG
  DESCRIPTION
    "UEF Model Coefficient G"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FirstHrRating ) > 0 .AND. IfValidAnd(SubType = "Storage") .AND.
           UEFRtdVal = 30 )
      then
        UEFMdlCoefTbl:UEFMdlCoefG("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefAElec
  DESCRIPTION
    "UEF Model Coefficient A Electric"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FlowRt ) > 0 .AND. IfValidAnd(SubType = "Instantaneous") .AND.
           ( UEFRtdVal = 60 .OR. UEFRtdVal = 70 ) )
      then
        UEFMdlCoefTbl:UEFMdlCoefAElec("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCoefAGas
  DESCRIPTION
    "UEF Model Coefficient A Gas"
  INPUTCLASS
    NotInput
  DEFAULT
    if( UEFRtdVal >= 10 )
    then 
      if( LocalStatus( FlowRt ) > 0 .AND. IfValidAnd(SubType = "Instantaneous") .AND.
           UEFRtdVal = 20 )
      then
        UEFMdlCoefTbl:UEFMdlCoefAGas("UEFMdlDrawPatternRng", UEFMdlDrawPattern)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdl
  DESCRIPTION
    "Modeled UEF based on Water Heater type "
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) .AND.
        IfValidAnd( UEF > 0 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        ( UEF - 0.0746 ) / 0.8653
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        ( UEF - 0.1006 ) / 0.8622
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        ( UEF + 0.0022 ) / 1.0002
      case 40:  // Consumer Electric Storage Water Heater
        ( UEF - 0.4774 ) / 0.474
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        UEF
      case 60:   // Consumer Instantaneous Electric Water Heater
        UEF / 0.9847
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        UEF          
      default:
        UNDEFINED
      endswitch  
    else UNDEFINED
    endif
  SIZING_BASELINE
	  if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
	  then 
	    UEF
	  else 
	    UNCHANGED
	  endif
  ANNUAL_BASELINE
    zb:UEFMdl
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCalcRE
  DESCRIPTION
    "UEF rated water heater calculated recovery efficiency"
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) .AND.
        IfValidAnd( UEFMdl > 0 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        UNDEFINED
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        if( IfValidAnd( UEFMdlCoefAGas > 0 ) )
        then      
          Min ( -UEFMdl / ( ( UEFMdlCoefAGas * UEFMdl ) - 1 ), 0.99 )
        else
          UNDEFINED
        endif
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        UNDEFINED
      case 40:  // Consumer Electric Storage Water Heater
        UNDEFINED
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        UNDEFINED
      case 60:   // Consumer Instantaneous Electric Water Heater
        if( IfValidAnd( UEFMdlCoefAElec > 0 ) )
        then
          - UEFMdl / ( ( UEFMdlCoefAElec * UEFMdl ) - 1 )
        else 
          UNDEFINED
        endif
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        UNDEFINED
      default:
        UNDEFINED
      endswitch  
    else UNDEFINED
    endif
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCalcThrmlEff
  DESCRIPTION
    "UEF rated water heater calculated thermal effficiency"
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) .AND.
        IfValidAnd( UEFMdl > 0 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        UNDEFINED
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        UNDEFINED
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        UNDEFINED
      case 40:  // Consumer Electric Storage Water Heater
        UNDEFINED
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        UNDEFINED
      case 60:   // Consumer Instantaneous Electric Water Heater
        UNDEFINED
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        - UEFMdl / ( ( UEFMdlCoefAElec * UEFMdl ) - 1 )
      default:
        UNDEFINED
      endswitch  
    else UNDEFINED
    endif
ENDRULE



// ----------------- Recovery Efficiency Required Boolean ----------------------
RULE NEW WtrHtr:REReq
  LONGFORM
    RecoveryEfficiencyRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( UEFRtdVal < 10 ) )
    then
      if( (SubType = "Storage" .AND. FuelSrc = "Gas" .AND. Size = "Small") .OR.
          (SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. Size = "Small") )
      then 1
      else 0
      endif
    else if( IfValidAnd( UEFRtdVal >= 10 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        1
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        0
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        0
      case 40:  // Consumer Electric Storage Water Heater
        1
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        0
      case 60:   // Consumer Instantaneous Electric Water Heater
        1
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        0          
      default:
        0
      endswitch              
    else 0
    endif endif  
ENDRULE

// -------------- Water Heater Recovery Efficiency ----------------
RULE WtrHtr:RE
  DESCRIPTION
    "The water heater recovery efficiency."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  MAXIMUM
    1
  REPORTPRECISION
    2
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal < 10 ) )
    then
      if( IfValidAnd( ThrmlEff > 0 ) )
      then
        ThrmlEff
      else if( Proj:AutoEffInput = 1 )
      then
        if( FuelSrc = "Gas" )
        then
          if( SubType = "Storage" )
          then
            0.87
          else
            0.82
          endif
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          1.00
        else UNDEFINED 
        endif endif
      else 
        if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then 
          1.00
        else
          UNDEFINED
        endif  
      endif endif
    else if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) )
    then
      if( Proj:AutoEffInput = 1 )
      then
	      switch ( UEFRtdVal  )
	      case 10:  // Consumer Gas-Fired Storage Water Heater
	        0.83
	      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
	        0
	      case 30:  // Residential-Duty Commercial Gas-Fired Storage
	        0
	      case 40:  // Consumer Electric Storage Water Heater
	        0.99
	      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
	        0
	      case 60:   // Consumer Instantaneous Electric Water Heater
	        0.99
	      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
	        0          
	      default:
	        0
	      endswitch              
      else UNDEFINED
      endif
    else UNDEFINED
    endif endif  
  CHECKCODE
    if( FluidSys:Type = "ServiceHotWater" .AND. Proj:ExcludeWtrHtg = 1 )
    then
      UNCHANGED
    else  if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal < 10 ) )
    then
        if( FuelSrc = "Gas" .AND. Size = "Small" .AND. LocalStatus(RE) < 1 .AND.
            IfValidAnd( REReq >0 ) )
        then
          PostError("A Recovery Efficiency is required for water heater '%s'.",
                     Name)
        else if( Size = "Small" .AND. IfValidAnd(RE < 0.65) .AND. 
                 IfValidAnd( REReq >0 ) .AND. Status = "New")
        then
          PostError("The Recovery Efficiency for water heater '%s' is less 
                     than 0.65.  Enter a valid Recovery Efficiency.", Name)
        else UNCHANGED
        endif endif
    else if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal >= 10 ) )
    then
        if( ( IfValidAnd( UEFRtdVal = 10 ) .OR. IfValidAnd( UEFRtdVal = 40 ) .OR. IfValidAnd( UEFRtdVal = 60 ) ) .AND. 
                 LocalStatus(RE) < 1 .AND. IfValidAnd(REReq >0) )
        then 
          PostError("A recovery efficiency is required for water heater '%s'.",Name)
        else if( ( IfValidAnd( UEFRtdVal = 10 ) .OR. IfValidAnd( UEFRtdVal = 40 ) .OR. IfValidAnd( UEFRtdVal = 60 ) ) .AND. 
                 RE = 0 .AND. IfValidAnd(REReq >0) )
        then 
          PostError("A non-zero recovery efficiency is required for water 
                     heater '%s'.",Name)
        else if( IfValidAnd( UEFRtdVal = 10 ) .AND. IfValidAnd(REReq >0) .AND.
                 ( IfValidAnd( RE < 0.70 ) .OR. IfValidAnd( RE > 0.99 ) ) .AND. Status = "New" )
        then 
          PostError("The Recovery Efficiency for water heater '%s' should be 
                     >= 0.70 and <= 0.99.  Enter a valid Recovery Efficiency.", Name)
        else if( ( IfValidAnd( UEFRtdVal = 40 ) .OR. IfValidAnd( UEFRtdVal = 60 ) ) .AND. IfValidAnd(REReq >0) .AND.
                 ( IfValidAnd( RE < 0.90 ) .OR. IfValidAnd( RE > 0.99 ) ) .AND. Status = "New" )
        then 
          PostError("The Recovery Efficiency for water heater '%s' should be 
                     >= 0.90 and <= 0.99.  Enter a valid Recovery Efficiency.", Name)
        else UNCHANGED
        endif endif endif endif
    else UNCHANGED
    endif endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal < 10 ) )
          then
            if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
            then 
              1.00
            else
              RE
            endif  
          else if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            switch ( UEFRtdVal )
              case 10:  // Consumer Gas-Fired Storage Water Heater
                RE
              case 20:  // Consumer Intantaneous Gas-Fired Water Heater
                UNDEFINED
              case 30:  // Residential-Duty Commercial Gas-Fired Storage
                UNDEFINED
              case 40:  // Consumer Electric Storage Water Heater
                RE
              case 50:  // Consumer Electric Storage Heat-Pump Water Heater
                UNDEFINED
              case 60:   // Consumer Instantaneous Electric Water Heater
                RE
              case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
                UNDEFINED
              default:
                UNDEFINED
            endswitch
          else UNDEFINED          
          endif endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
          then 
            1.00
          else
            RE
          endif  
        else if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          switch ( UEFRtdVal )
            case 10:  // Consumer Gas-Fired Storage Water Heater
              RE
            case 20:  // Consumer Intantaneous Gas-Fired Water Heater
              UNDEFINED
            case 30:  // Residential-Duty Commercial Gas-Fired Storage
              UNDEFINED
            case 40:  // Consumer Electric Storage Water Heater
              RE
            case 50:  // Consumer Electric Storage Heat-Pump Water Heater
              UNDEFINED
            case 60:   // Consumer Instantaneous Electric Water Heater
              RE
            case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
              UNDEFINED
            default:
              UNDEFINED
          endswitch
        else UNDEFINED          
        endif endif
      else if( Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" )
        then
          if( SubType = "Storage" )
          then
            0.80   
          else
            0.82
          endif
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          1.00
        else UNDEFINED 
        endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          RE
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          0.82
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        RE
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" )
        then
          if( SubType = "Storage" )
          then
            0.80                                  // based on selection from CEC appliance database
          else
            0.82                                  // based on selection from CEC appliance database, approximately
          endif
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          1.00
        else UNDEFINED 
        endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:RE
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCalcEF
  DESCRIPTION
    "UEF rated water heater calculated energy factor"
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) .AND.
        IfValidAnd( UEFMdl > 0 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        if( IfValidAnd( RE > 0 ) .AND. IfValidAnd( CapRtd >0 ) )
        then
          -( ( RE * UEFMdl * UEFMdlCoefb ) - ( RE * RE * CapRtd * UEFMdl * UEFMdlCoefa ) ) / ( ( ( UEFMdl - RE )* UEFMdlCoefd ) + ( ( RE * RE * CapRtd - RE * CapRtd * UEFMdl )* UEFMdlCoefc ) - ( UEFMdl * UEFMdlCoefb ) + ( RE * CapRtd * UEFMdl * UEFMdlCoefa ) )
        else
          UNDEFINED
        endif
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        ValidOr(UEFMdlCalcRE,0) * 0.9734 + 0.01835
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        UNDEFINED
      case 40:  // Consumer Electric Storage Water Heater
        if( IfValidAnd( RE > 0 ) .AND. IfValidAnd( CapRtd >0 ) )
        then        
          -( ( RE * UEFMdl * UEFMdlCoefb ) - ( RE * RE * CapRtd * UEFMdl * UEFMdlCoefa ) ) / ( ( ( UEFMdl - RE ) * UEFMdlCoefd ) + ( ( RE * RE * CapRtd - RE * CapRtd * UEFMdl ) * UEFMdlCoefc ) - ( UEFMdl * UEFMdlCoefb ) + ( RE * CapRtd * UEFMdl * UEFMdlCoefa ) )
//         -( ( RE * UEFMdl * UEFMdlCoefb ) - ( RE * RE * 3.412 * CapRtd * UEFMdl * UEFMdlCoefa ) ) / ( ( ( UEFMdl - RE ) * UEFMdlCoefd ) + ( ( RE * RE * 3.412 * CapRtd - RE * 3.412 * CapRtd * UEFMdl ) * UEFMdlCoefc ) - ( UEFMdl * UEFMdlCoefb ) + ( RE * 3.412 * CapRtd * UEFMdl * UEFMdlCoefa ) )
        else
          UNDEFINED
        endif
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        ( UEFMdl - 0.1513 -( 0.0043 * UEFMdlCoefDV ) ) / 0.8407
      case 60:   // Consumer Instantaneous Electric Water Heater
        ValidOr(UEFMdlCalcRE,0)
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        UNDEFINED
      default:
        UNDEFINED
      endswitch  
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:UEFMdlCalcEF
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:UEFMdlCalcEF
      else if( Proj:SHWBothBaseline )
      then
        0        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:UEFMdlCalcEF
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then
        u:UEFMdlCalcEF
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
			  if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
			  then  ( UEFMdl - 0.1513 -( 0.0043 * UEFMdlCoefDV ) ) / 0.8407
			  else UNCHANGED
			  endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE



// -------------- Code Minimum Water Heater Energy Factor --------------------
RULE WtrHtr:CodeMinEF
  DESCRIPTION
    "The code minimum energy factor (EF) is the ratio of the energy delivered by the water
     heater divided by the energy used, in the same units. EF is calculated
     according to the DOE 10 CFR Part 430 test procedure, which specifies a
     24-hour pattern of draws, a storage temperature, inlet water temperature,
     and other test conditions. These conditions result in the energy
     delivered for the test period. Energy inputs are measured for the same
     test period and the EF ratio is calculated."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "Removed in transition from 2016.2.1 to 2016.2.2"
  MINIMUM
    0
  MAXIMUM
    10
  REPORTPRECISION
    3
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" .AND.
        LocalStatus( StorCap ) > 0 )
    then
      if( Type <> "Conventional" )
      then 
        0.97  - ( 0.00132 * StorCap )
      else if( SizeFuelType = "SmallGasStorage" )
      then 
        if( Proj:StdsVersionYr >=2015 )
        then
          if( StorCap <= 55 )
          then
            0.675  - ( 0.0015  * StorCap )
          else
            0.8012 - ( 0.00078 * StorCap )
          endif
        else
          0.67  - ( 0.0019  * StorCap )
        endif
      else if( SizeFuelType = "SmallGasInstant" )
      then
        if( Proj:StdsVersionYr >=2015 )
        then
          0.820 - ( 0.0019  * StorCap )
        else
          0.620 - ( 0.0019  * StorCap )
        endif
      else if( SizeFuelType = "SmallElectricStorage" )
      then 
        if( Proj:StdsVersionYr >=2015 )
        then 
          if( StorCap <= 55 )
          then
            0.960 - ( 0.0003  * StorCap )
          else
            2.057 - ( 0.00113 * StorCap )
          endif
        else
          0.97 - ( 0.00132 * StorCap )
        endif
      else if( SizeFuelType = "SmallElectricInstant" )
      then
        0.930 - ( 0.00132 * StorCap )
      else UNCHANGED
      endif endif endif endif endif
    else UNDEFINED
    endif
  SIZING
    UNDEFINED
  ANNUAL
    UNDEFINED
ENDRULE


// ---------- Energy Factor Formula --------------
RULE NEW WtrHtr:EFFormula
  DATATYPE
    Float
  LONGFORM
    EnergyFactorFormula
  INPUTCLASS
    NotInput
  DEFAULT 
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( Type <> "Conventional" )
      then UNDEFINED
      else if( IfValidAnd(CapRtd > 0 ) )
      then
	      if( SubType = "Storage" .AND. FuelSrc = "Gas" .AND. ( (CapRtdSim / CmbdMult) <= 75000) )
	      then 
	        if( Proj:StdsVersionYr >=2015 )
	        then
	          if( StorCap  / CmbdMult <= 55 )
	          then
	            0.675  - ( 0.0015  * StorCap / CmbdMult )
	          else
	            0.8012 - ( 0.00078 * StorCap / CmbdMult )
	          endif
	        else
	          0.67  - ( 0.0019  * StorCap / CmbdMult )
	        endif
	      else if( SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. ((CapRtdSim / CmbdMult) <= 200000) )
	      then
	        if( Proj:StdsVersionYr >=2015 )
	        then
	          0.820 - ( 0.0019  * StorCap / CmbdMult )
	        else
	          0.620 - ( 0.0019  * StorCap / CmbdMult )
	        endif
	      else if( SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. ((CapRtdSim / CmbdMult) <= 40944) )
	      then 
	        if( Proj:StdsVersionYr >=2015 )
	        then 
	          if( StorCap / CmbdMult <= 55 )
	          then
	            0.960 - ( 0.0003  * StorCap / CmbdMult )
	          else
	            2.057 - ( 0.00113 * StorCap / CmbdMult )
	          endif
	        else
	          0.97 - ( 0.00132 * StorCap / CmbdMult )
	        endif
	      else if( SubType = "Instantaneous" .AND. FuelSrc = "Electricity" .AND. ((CapRtdSim / CmbdMult) <= 40944) )
	      then
	        0.930 - ( 0.00132 * StorCap / CmbdMult )
	      else UNCHANGED
	      endif endif endif endif
	    else 0.99
	    endif endif
    else 0.99 // UNDEFINED
    endif
  SIZING_PROPOSED 
    if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd(StorCap > 0) .AND. IfValidAnd(CapRtdSim > 0) )
    then
      if( Type <> "Conventional" )
      then UNDEFINED
      else if( SubType = "Storage" .AND. FuelSrc = "Gas" .AND. ((CapRtdSim / CmbdMult) <= 75000) )
      then 
        if( Proj:StdsVersionYr >=2015 )
        then
          if( StorCap  / CmbdMult <= 55 )
          then
            0.675  - ( 0.0015  * StorCap / CmbdMult )
          else
            0.8012 - ( 0.00078 * StorCap / CmbdMult )
          endif
        else
          0.67  - ( 0.0019  * StorCap / CmbdMult )
        endif
      else if( SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. ((CapRtdSim / CmbdMult) <= 200000) )
      then
        if( Proj:StdsVersionYr >=2015 )
        then
          0.820 - ( 0.0019  * StorCap / CmbdMult )
        else
          0.620 - ( 0.0019  * StorCap / CmbdMult )
        endif
      else if( SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. ((CapRtdSim / CmbdMult) <= 40944) )
      then 
        if( Proj:StdsVersionYr >=2015 )
        then 
          if( StorCap / CmbdMult <= 55 )
          then
            0.960 - ( 0.0003  * StorCap / CmbdMult )
          else
            2.057 - ( 0.00113 * StorCap / CmbdMult )
          endif
        else
          0.97 - ( 0.00132 * StorCap / CmbdMult )
        endif
      else if( SubType = "Instantaneous" .AND. FuelSrc = "Electricity" .AND. ((CapRtdSim / CmbdMult) <= 40944) )
      then
        0.930 - ( 0.00132 * StorCap / CmbdMult )
      else UNCHANGED
      endif endif endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE 
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( Type <> "Conventional" )
      then UNDEFINED
      else if( SubType = "Storage" .AND. FuelSrc = "Gas" .AND. ((CapRtdSim / Cnt) <= 75000) )
      then 
        if( Proj:StdsVersionYr >=2015 )
        then
          if( StorCap  / Cnt <= 55 )
          then
            0.675  - ( 0.0015  * StorCap / Cnt )
          else
            0.8012 - ( 0.00078 * StorCap / Cnt )
          endif
        else
          0.67  - ( 0.0019  * StorCap / Cnt )
        endif
      else if( SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. (CapRtdSim / Cnt) <= 200000 )
      then
        if( Proj:StdsVersionYr >=2015 )
        then
          0.820 - ( 0.0019  * StorCap / Cnt )
        else
          0.620 - ( 0.0019  * StorCap / Cnt )
        endif
      else if( SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. ((CapRtdSim / Cnt) <= 40944) )
      then 
        if( Proj:StdsVersionYr >=2015 )
        then 
          if( StorCap / Cnt <= 55 )
          then
            0.960 - ( 0.0003  * StorCap / Cnt )
          else
            0.97 - ( 0.00132 * StorCap / Cnt )   // Baseline is not a HP WtrHtr 2.057 - ( 0.00113 * StorCap / Cnt )
          endif
        else
          0.97 - ( 0.00132 * StorCap / Cnt )
        endif
      else if( SubType = "Instantaneous" .AND. FuelSrc = "Electricity" .AND. ((CapRtdSim / Cnt) <= 40944) )
      then
        0.930 - ( 0.00132 * StorCap / Cnt )
      else UNCHANGED
      endif endif endif endif endif
    else UNDEFINED
    endif    
  ANNUAL
    z:EFFormula
ENDRULE

// ----------------- Energy Factor Required Boolean --------------------------------------
RULE NEW WtrHtr:EFReq
  LONGFORM
    EnergyFactorRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( UEFRtdVal < 10 ) .AND. IsCommHtPumpWtrHtr < 1 )
    then
      if( (Type = "HeatPumpPackaged") .OR. (Type = "HeatPumpSplit") .OR.
          (SubType = "Storage" .AND. FuelSrc = "Gas" .AND. IfValidAnd(CapRtd <= 75000)) .OR.
          (SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. IfValidAnd(CapRtd <= 200000)) .OR.
          (SubType = "Instantaneous" .AND. FuelSrc = "Electricity" .AND. IfValidAnd(InpPwr <= 12)) .OR.
          (SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. IfValidAnd(InpPwr <= 12) .AND. IfValidAnd(StorCap <= 120) ) )
      then 1
      else 0
      endif
    else 0
    endif
ENDRULE

// -------------- Water Heater Energy Factor --------------------
RULE WtrHtr:EF
  DESCRIPTION
    "The energy factor (EF) is the ratio of the energy delivered by the water
     heater divided by the energy used, in the same units. EF is the efficiency 
     metric used for small water heaters."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  MINIMUM
    0.45
  MAXIMUM
    10
  REPORTPRECISION
    2
  DEFAULT
      if( Proj:AutoEffInput = 1 )
      then
        if( FuelSrc = "Gas" )
        then 
          EFFormula
        else if( FuelSrc = "Electricity" )
        then
          if( Type <> "Conventional" )
          then 3.0
          else if( SubType = "Storage" )
          then
            EFFormula
          else
            0.99
          endif endif
        else UNDEFINED 
        endif endif
      else UNDEFINED
      endif
   CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 .OR. IfValidAnd( UEFRtdVal = 50 ))
    then
      UNCHANGED
    else   
      if( Type <> "Conventional" .AND. LocalStatus(EF) < 1 .AND. IfValidAnd(EFReq >0) )
      then 
        PostError("An Energy Factor is required for water heater '%s'.", Name)
      else if( Type = "Conventional" .AND. IfValidAnd(EF > 1 ) .AND. IfValidAnd(EFReq >0) )
      then
        PostError("The Energy Factor for water heater '%s' is greater than 
                   1 and it is not a heat pump.  Enter a valid Energy Factor.", 
                   Name)
      else if( Type <> "Conventional" .AND. IfValidAnd(EF < 2 ) .AND. IfValidAnd(EFReq >0) )
      then
        PostError("The Energy Factor for heat pump water heater '%s' is less than 
                   2.  Enter a valid Energy Factor.", Name)
      else if( Size = "Small" .AND. LocalStatus(EF) < 1 .AND. IfValidAnd(EFReq >0) )
      then
        PostError("An Energy Factor is required for water heater '%s'.", Name)
      else if( Size = "Small" .AND. IfValidAnd(EF < 0.45) .AND. IfValidAnd(EFReq >0) .AND. Status = "New" )
      then
        PostError("The Energy Factor for water heater '%s' is less than 0.45.  
                   Enter a valid Energy Factor.", Name)
      else UNCHANGED
      endif endif endif endif endif
   endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( Size = "Small" .OR. Type <> "Conventional" )
          then
            EF
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( Size = "Small" .OR. Type <> "Conventional" )
        then
          EF
        else
          UNDEFINED
        endif
      else if( Proj:SHWBothBaseline )
      then
        zp:EFFormula
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( Size = "Small" .OR. Type <> "Conventional" )
          then
            EF
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          0.82
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        if( Size = "Small" .OR. Type <> "Conventional" )
        then
          EF
        else
          UNDEFINED
        endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        zb:EFFormula
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:EF
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:HtPumpEF
  LONGFORM
    HeatPumpEnergyFactor
  DATATYPE
    Float
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )
    then
      if( IfValidAnd( UEFRtdVal < 10 ) )     // not UEF rated
      then
        EF
      else if( IfValidAnd( UEFRtdVal = 50 ) )
      then
        UEFMdlCalcEF
      else UNDEFINED
      endif endif
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )
    then  
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( Type <> "Conventional" )
        then
		      if( IfValidAnd( UEFRtdVal < 10 ) )     // not UEF rated
		      then
		        EF
		      else if( IfValidAnd( UEFRtdVal = 50 ) )
		      then
		        UEFMdlCalcEF
		      else UNDEFINED
		      endif endif
		    else 
		      UNDEFINED
		    endif
      else if( Proj:SHWBothBaseline )
      then
        if( Type <> "Conventional" )
        then
          UEFMdlCalcEF
        else
          UNDEFINED
        endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
     if( Proj:SHWPropOnly )
     then
       if( Type <> "Conventional" )
       then
	       if( IfValidAnd( UEFRtdVal < 10 ) )     // not UEF rated
	       then
	         EF
	       else if( IfValidAnd( UEFRtdVal = 50 ) )
	       then
	         UEFMdlCalcEF
	       else UNDEFINED
	       endif endif
	     else
	       UNDEFINED
	     endif
     else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
     then
        if( Type <> "Conventional" )
        then
          UEFMdlCalcEF
        else
          UNDEFINED
        endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else UNDEFINED
      endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
//  SIZING_BASELINE
//    if( Type <> "Conventional" )
//    then
//      if( IfValidAnd( UEFRtdVal < 10 ) )     // not UEF rated
//      then
//        EF
//      else if( IfValidAnd( UEFRtdVal = 50 ) )
//      then
//        UEFMdlCalcEF
//      else UNDEFINED
//      endif endif
//    else UNDEFINED
//    endif
//  ANNUAL_BASELINE
//    zb:HtPumpEF
  ANNUAL_PROPOSED
    zp:HtPumpEF
  ANNUAL_BASELINE
    zb:HtPumpEF
ENDRULE


// ----------------- Thermal Efficiency Required Boolean --------------------------------------
RULE NEW WtrHtr:ThrmlEffReq
  LONGFORM
    ThermalEfficiencyRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( UEFRtdVal < 10 ) )
    then
        if( (SubType = "Storage" .AND. FuelSrc = "Gas" .AND. IfValidAnd(CapRtd > 75000)) .OR.
            (SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. IfValidAnd(CapRtd > 200000)) .OR.
            (SubType = "Instantaneous" .AND. FuelSrc = "Electricity" .AND. IfValidAnd(InpPwr > 12)) .OR.
            (SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. IfValidAnd(InpPwr > 12) .AND. Type = "Conventional") .OR.
            (SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. IfValidAnd(StorCap > 120) .AND. Type = "Conventional") )
        then 1
        else 0
        endif
    else if( IfValidAnd( UEFRtdVal >= 10 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        0
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        0
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        1
      case 40:  // Consumer Electric Storage Water Heater
        0
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        0
      case 60:   // Consumer Instantaneous Electric Water Heater
        0
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        0          
      default:
        0
      endswitch              
    else 0
    endif endif  
ENDRULE


// -------------- Code Minimum Water Heater Thermal Efficiency --------------------
RULE WtrHtr:CodeMinThrmlEff
  DESCRIPTION
    "The code minimum full load efficiency of a water heater at rated conditions expressed
     as a dimensionless ratio of output over input."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  MAXIMUM
    0.99
  REPORTPRECISION
    3
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( Size = "Large" )
      then 
        if( FuelSrc = "Gas" )
        then 
          0.80
        else 
          UNDEFINED
        endif   
      else
        UNDEFINED
      endif
    else
      UNDEFINED
    endif
  SIZING
    UNDEFINED
  ANNUAL
    UNDEFINED
ENDRULE



// -------------- Water Heater Thermal Efficiency --------------------
RULE WtrHtr:ThrmlEff
  DESCRIPTION
    "The full load efficiency of a water heater at rated conditions expressed
     as a dimensionless ratio of output over input. This is also referred to as
     recovery efficiency."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  MAXIMUM
    1.00
  REPORTPRECISION
    2
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( IfValidAnd( UEFRtdVal < 10 ) )
      then
        if( Proj:AutoEffInput = 1 )
        then
          if( FuelSrc = "Gas" )
          then
            0.80
          else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
          then
            1.0
          else UNDEFINED
          endif endif
        else if( Size = "Large" )
        then 
          ThrmlEff
        else
          RE
        endif endif
      else if( IfValidAnd( UEFRtdVal >= 10 ) )
      then
        switch ( UEFRtdVal )
          case 10:  // Consumer Gas-Fired Storage Water Heater
            RE
          case 20:  // Consumer Instantaneous Gas-Fired Water Heater
            if( IfValidAnd( UEFMdlCalcRE > 0 ) )
            then
              MIN(UEFMdlCalcRE,1)
            else
              UNDEFINED
            endif
          case 30:  // Residential-Duty Commercial Gas-Fired Storage
            ThrmlEff
          case 40:  // Consumer Electric Storage Water Heater
            RE
          case 50:  // Consumer Electric Storage Heat-Pump Water Heater
            UNDEFINED
          case 60:   // Consumer Instantaneous Electric Water Heater
            if( IfValidAnd( UEFMdlCalcRE > 0 ) )
            then
              MIN(UEFMdlCalcRE,1)
            else
              UNDEFINED
            endif
          case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
            UEFMdlCalcThrmlEff
          default:
            UNDEFINED
        endswitch  
      else UNDEFINED
      endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 )
    then
      UNCHANGED
    else   
      if( FluidSys:Type = "ServiceHotWater" .AND. Size = "Large" .AND. 
          LocalStatus(ThrmlEff) < 1 .AND. IfValidAnd( UEFRtdVal < 10 ) )
      then 
        PostError("A thermal efficiency is required for water heater '%s'.",Name)
      else if( FluidSys:Type = "ServiceHotWater" .AND.
               Size = "Large" .AND. ThrmlEff = 0 .AND. IfValidAnd( UEFRtdVal < 10 ) )
      then 
        PostError("A non-zero thermal efficiency is required for water 
                   heater '%s'.",Name)
      else if( FluidSys:Type = "ServiceHotWater" .AND.
               Size = "Large" .AND. IfValidAnd( ThrmlEff < 0.8 ) .AND. IfValidAnd( UEFRtdVal < 10 ) .AND. Status = "New" )
      then 
        PostError("A thermal efficiency >= 0.8 is required for water 
                   heater '%s'.",Name)      
      else if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal = 30 ) .AND. 
          LocalStatus(ThrmlEff) < 1 )
      then 
        PostError("A thermal efficiency is required for water heater '%s'.",Name)
      else if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( UEFRtdVal = 30 ) .AND. 
               ThrmlEff = 0 )
      then 
        PostError("A non-zero thermal efficiency is required for water 
                   heater '%s'.",Name)
      else UNCHANGED
      endif endif endif endif endif
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 .AND. Type = "Conventional" )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( Size = "Large" )
          then ThrmlEff
          else RE
          endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( Size = "Large" )
          then ThrmlEff
          else RE
          endif
        else if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          switch ( UEFRtdVal )
            case 10:  // Consumer Gas-Fired Storage Water Heater
              RE
            case 20:  // Consumer Intantaneous Gas-Fired Water Heater
              MIN(UEFMdlCalcRE,1)
            case 30:  // Residential-Duty Commercial Gas-Fired Storage
              ThrmlEff
            case 40:  // Consumer Electric Storage Water Heater
              RE
            case 50:  // Consumer Electric Storage Heat-Pump Water Heater
              UNDEFINED
            case 60:   // Consumer Instantaneous Electric Water Heater
              MIN(UEFMdlCalcRE,1)
            case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
              UEFMdlCalcThrmlEff
            default:
              UNDEFINED
          endswitch          
        else UNDEFINED
        endif endif
      else if( Proj:SHWBothBaseline )
      then
        if( Name = "ResBaseWaterHeater" .AND. StdsVersionYr >=2015 )
  //    if IsResAndCombo?
        then 0.82
        else if( FuelSrc = "Gas" )
        then 0.80
        else if( FuelSrc = "Electricity" )
        then 1.00
        else UNDEFINED
        endif endif endif
      else if( Proj:SHWNone )
      then UNDEFINED
      else UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( Size = "Large" )
          then ThrmlEff
          else RE
          endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          0.82
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly .AND. Type = "Conventional" )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( Size = "Large" )
          then ThrmlEff
          else RE
          endif
        else if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          switch ( UEFRtdVal )
            case 10:  // Consumer Gas-Fired Storage Water Heater
              RE
            case 20:  // Consumer Intantaneous Gas-Fired Water Heater
              MIN(UEFMdlCalcRE,1)
            case 30:  // Residential-Duty Commercial Gas-Fired Storage
              ThrmlEff
            case 40:  // Consumer Electric Storage Water Heater
              RE
            case 50:  // Consumer Electric Storage Heat-Pump Water Heater
              UNDEFINED
            case 60:   // Consumer Instantaneous Electric Water Heater
              MIN(UEFMdlCalcRE,1)
            case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
              UEFMdlCalcThrmlEff
            default:
              UNDEFINED
          endswitch          
        else UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" )
        then 
          if ( IfValidAnd(CapRtdSim > 1000000) )
          then 0.90
          else 0.80
          endif
        else if( FuelSrc = "Electricity" )
        then
          if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
          then UNDEFINED
          else 1.00
          endif
        else UNDEFINED
        endif endif                                            
      else if( Proj:SHWNone )
      then UNDEFINED
      else UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:ThrmlEff
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:UEFMdlCalcStdbyLoss
  DESCRIPTION
    "UEF rated water heater calculated standby loss"
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 .AND. IfValidAnd( UEFRtdVal >= 10 ) .AND.
        IfValidAnd( UEFMdl > 0 ).AND. IfValidAnd( ThrmlEff > 0 ) )  
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        UNDEFINED
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        UNDEFINED
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        if( IfValidAnd ( UEFMdlCoefF > 0 ) .AND. IfValidAnd ( UEFMdlCoefF > 0 ) )
        then
          - ( ( CapRtd * UEFMdl - CapRtd * ThrmlEff) / ( ( UEFMdlCoefF * UEFMdlCoefG * CapRtd * ThrmlEff - UEFMdlCoefF ) * UEFMdl ) )
//        ( ( ( UEFMdlCoefF * ThrmlEff )- CapRtd )* UEFMdl ) / ( ( UEFMdlCoefF * UEFMdlCoefG * CapRtd * RE * UEFMdl )- CapRtd )
        else
          UNDEFINED
        endif
      case 40:  // Consumer Electric Storage Water Heater
        UNDEFINED
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        UNDEFINED
      case 60:   // Consumer Instantaneous Electric Water Heater
        UNDEFINED
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        UNDEFINED
      default:
        UNDEFINED
      endswitch  
    else UNDEFINED
    endif
ENDRULE


// -------------- Water Heater Maximum Temperature Limit --------------------
RULE WtrHtr:MaxTempLimit
  DESCRIPTION
    "The temperature (°F) at which the tank water becomes dangerously hot and
     is vented through boiling or an automatic safety. The tank temperature
     will never exceed the maximum. Any extra heat added to the tank is
     immediately vented. Note: The maximum temperature must be greater than
     the setpoint temperature at all times."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
    F
  REPORTPRECISION
    0
  DEFAULT
	  if( Type = "Conventional" ) 
	  then 180
	  else 150
	  endif
  SIZING_PROPOSED
	  if( Type = "Conventional" ) 
	  then 180
	  else 150
	  endif
  SIZING_BASELINE
    if( IsExisting )
    then zp:MaxTempLimit
    else if( Type = "Conventional" ) 
	  then 180
	  else 150
	  endif endif
  ANNUAL
    z:MaxTempLimit
ENDRULE


// -------------- Water Heater Control Type --------------------
RULE WtrHtr:CtrlType
  DESCRIPTION
    "The control type can be Cycle or Modulate. Cycle is appropriate for most
     storage tank-type water heaters. Modulate is appropriate for most
     instantaneous/tankless water heaters."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then
      "Cycle"
    else if( FluidSysHtg = 1 )
    then
      "Cycle"
    else UNDEFINED
    endif endif
  SIZING
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( SubType = "Instantaneous" )   
      then "Modulate"
      else "Cycle"
      endif
    else if( FluidSysHtg = 1 )
    then
      "Cycle"
    else UNDEFINED
    endif endif
  ANNUAL
    z:CtrlType
ENDRULE


// -------------- Water Heater Minimum Capacity --------------------
RULE WtrHtr:MinCap
  DESCRIPTION
    "The minimum heat rate (BTU/F) that can be supplied to the water. This field
     is only used when the Heater Control Type is Modulate. If the total
     demand rate for heating is less than the minimum, even a modulating water
     heater will begin to cycle."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Default
  MINIMUM
    0
  MAXIMUM
    1000000
  UNITS
    Btu per F
  REPORTPRECISION
    -3
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif
  SIZING
    if( FluidSys:Type = "ServiceHotWater" 
       .AND. CtrlType = "Modulate" )
    then 0
    else UNDEFINED
    endif
  ANNUAL
    z:MinCap
ENDRULE


// -------------- Water Heater Draft Fan Power --------------------
RULE WtrHtr:DraftFanPwr
  DESCRIPTION
    "The power consumption of the draft fan."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    CondRequired
  UNITS
    Watts
  REPORTPRECISION
    0
  DEFAULT 
    0
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:DraftFanPwr
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        u:DraftFanPwr
      else if( Proj:SHWBothBaseline )
      then 
        0
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:DraftFanPwr
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          0
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        0
      else if( Proj:SHWPropOnly )
      then 
        u:DraftFanPwr
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif    
  ANNUAL
    z:DraftFanPwr
ENDRULE


// -------------- Water Heater Pilot Energy --------------------
RULE WtrHtr:PilotEnergy
  DESCRIPTION
    "The water heater's pilot energy with no multiplier."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:PilotEnergy removed in transition from 2013 version 3c to 3e and 2016.2.0 to 2016.2.1"
  MINIMUM
    0
  MAXIMUM
    10000
  REPORTPRECISION
    0
  SIZING
    if( FluidSysSHW = 1 )  
    then
      if( FuelSrc = "Gas" .AND. SubType = "Instantaneous" .AND. 
          ElecIgnit = 0 )
      then
        500
      else
        UNDEFINED
      endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:PilotEnergy  
ENDRULE


// -------------- Water Heater Off Cycle Parasitic Losses --------------------
RULE WtrHtr:OffCyclePrstcLoss
  DESCRIPTION
    "The rate of parasitic losses, such as a pilot light (with multiplier) or 
     controls, when the water heater is not heating."
  HELP
    ""
  REFERENCE
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:OffCyclePrstcLoss removed in transition from 2013 version 3c to 3e and 2016.2.0 to 2016.2.1"
  MINIMUM
    0
  UNITS
    Watts
  REPORTPRECISION
    0
  SIZING
    if( FluidSysSHW = 1 )  
    then
    if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd( PilotEnergy > 0 ) )
     then 
       if( IfValidAnd(u:Proj:ResWtrHtrNonCentralSys = 1) .AND. Name = "ResBaseWaterHeater" )
       then 
         0
       else
         ( PilotEnergy / 3.412 ) * CmbdMult   //NK 2017.03.05
       endif
    else 
      0
    endif
    else if( FluidSysHtg = 1 )
    then
      0
    else 0
    endif endif
  ANNUAL
    z:OffCyclePrstcLoss
ENDRULE

// -------------- Water Heater --------------
RULE WtrHtr:OffCyclePrstcLossSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    zp:OffCyclePrstcLoss
  SIZING_BASELINE
    zb:OffCyclePrstcLoss
  ANNUAL_PROPOSED
    zp:OffCyclePrstcLoss
  ANNUAL_BASELINE
    zb:OffCyclePrstcLoss
ENDRULE


// -------------- Water Heater Off Cycle Fuel Source --------------------
RULE WtrHtr:OffCycleFuelSrc
  DESCRIPTION
    "The type of fuel that serves energy using parasitic equipment, such as a
     pilot light or controls, when the water heater is not heating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:OffCycleFuelSrc removed in transition from 2013 version 3c to 3e and 2016.2.0 to 2016.2.1"
  SIZING
    if( FluidSysSHW = 1 .AND. IfValidAnd( PilotEnergy > 0 ) )  
    then "Gas"
    else UNDEFINED
    endif
  ANNUAL
    z:OffCycleFuelSrc
ENDRULE

// -------------- Water Heater On Cycle Parasitic Losses --------------------
RULE WtrHtr:OnCyclePrstcLoss
  DESCRIPTION
    "The rate of parasitic losses, such as controls, when the water heater is 
     heating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:OnCyclePrstcLoss removed in transition from 2013 version 3c to 3e and 2016.2.0 to 2016.2.1"
  MINIMUM
    0
  UNITS
    Btu/hr
  REPORTPRECISION
    0
  SIZING
    if( FluidSysSHW = 1 )  
    then
      if( ElecIgnit = 1 .AND. IfValidAnd(DraftFanPwr > 0) .AND. FuelSrc != "Electricity" )
      then 
        DraftFanPwr * u:CmbdMult
      else
        0
      endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else 0
    endif endif
  ANNUAL
    z:OnCyclePrstcLoss
ENDRULE

// -------------- Water Heater --------------
RULE WtrHtr:OnCyclePrstcLossSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    zp:OnCyclePrstcLoss
  SIZING_BASELINE
    zb:OnCyclePrstcLoss
  ANNUAL_PROPOSED
    zp:OnCyclePrstcLoss
  ANNUAL_BASELINE
    zb:OnCyclePrstcLoss
ENDRULE

// -------------- Water Heater On Cycle Fuel Source --------------------
RULE WtrHtr:OnCycleFuelSrc
  DESCRIPTION
    "The type of fuel consumed by parasitic loads, such as a
     pilot light or controls, when the water heater is heating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:OnCycleFuelSrc removed in transition from 2013 version 3c to 3e and 2016.2.0 to 2016.2.1"
  SIZING
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( ElecIgnit = 1 .AND. IfValidAnd(DraftFanPwr > 0) .AND. FuelSrc != "Electricity" )
      then 
        "Electricity"
      else
        UNDEFINED
      endif
    else UNDEFINED
    endif
  ANNUAL
    z:OnCycleFuelSrc
ENDRULE



// ----------------- Standby Loss Fraction Required Boolean --------------------------------------
RULE NEW WtrHtr:StdbyLossFracReq
  LONGFORM
    StandbyLossFractionRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if ( FluidSysSHW = 1 )
    then
    if( IfValidAnd( UEFRtdVal < 10 ) )
    then
        if( (SubType = "Storage" .AND. FuelSrc = "Gas" .AND. IfValidAnd(CapRtd > 75000)) .OR.
            (SubType = "Instantaneous" .AND. FuelSrc = "Gas" .AND. IfValidAnd(CapRtd > 200000)) .OR.
            (SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. ( IfValidAnd(InpPwr > 12) .OR. IfValidAnd(StorCap > 120) )  .AND. Type = "Conventional") .OR. 
            (SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. ( IfValidAnd(InpPwr > 12) .OR. IfValidAnd(StorCap > 120) )  .AND. Type <> "Conventional") )
        then 1
        else 0
        endif
    else if( IfValidAnd( UEFRtdVal >= 10 ) )
    then
      switch ( UEFRtdVal  )
      case 10:  // Consumer Gas-Fired Storage Water Heater
        0
      case 20:  // Consumer Intantaneous Gas-Fired Water Heater
        0
      case 30:  // Residential-Duty Commercial Gas-Fired Storage
        0
      case 40:  // Consumer Electric Storage Water Heater
        0
      case 50:  // Consumer Electric Storage Heat-Pump Water Heater
        0
      case 60:  // Consumer Instantaneous Electric Water Heater
        0
      case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
        0          
      default:
        0
      endswitch              
    else 0
    endif endif  
    else if ( FluidSysHtg = 1 .AND. IfValidAnd(StorCap > 0 ) )
    then
      1
    else 
      0
    endif endif
  ANNUAL_PROPOSED
    StdbyLossFracReq
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE



// -------------- Water Heater Standby Loss Fraction --------------------
RULE WtrHtr:StdbyLossFrac
  DESCRIPTION
    "The tank standby loss fraction for storage tanks."
  HELP
    "The value listed in the Commission’s Appliance Database of
     Certified Water Heaters"
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Optional
  MINIMUM
    0.0
  MAXIMUM
    0.09 
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( Proj:AutoEffInput = 1 )
      then
        if( Size = "Large" .AND. SubType = "Storage" .AND. FuelSrc = "Gas" )
        then
          (CapRtd/800 + 110*SQRT( StorCap )) / (8.25 * 70 * StorCap)
        else if( Size = "Large" .AND. SubType = "Instantaneous" .AND. 
                 FuelSrc = "Gas" .AND. IfValidAnd( StorCap >= 10 ) )
        then
          (CapRtd/800 + 110*SQRT( StorCap )) / (8.25 * 70 * StorCap)
        else if( Size = "Large" .AND. FuelSrc = "Electricity" .AND. SubType = "Storage" )
        then
          (0.3 + 27 / StorCap) / 100      // This is the fraction of the stored energy lost/hr
        else if( IsCommHtPumpWtrHtr = 1 )
        then
          (0.3 + 27 / StorCap) / 100      
        else
          UNDEFINED
        endif endif endif endif
      else UNDEFINED
      endif
    else if( FluidSysHtg = 1 )
    then
      if ( IfValidAnd(StorCap < 1) )
      then
        0
      else      
        (0.3 + 27 / StorCap )  / 100
      endif
    else UNDEFINED
    endif endif
  CHECKCODE  // add checkcode for Comm Sto HtPump Wtr Htr
    if( FluidSys:Type = "ServiceHotWater" .AND. Proj:ExcludeWtrHtg = 0 .AND.
       IfValidAnd( UEFRtdVal < 10) )
    then    
      if( SubType = "Storage" .AND. Size = "Large" .AND.
          IfValidAnd(StdbyLossFrac > 0) = 0 )
      then 
        PostError("A Standby Loss Fraction is required for water 
                   heater '%s'.",Name)
      else if( FuelSrc = "Gas" .AND. 
               SubType = "Instantaneous" .AND. Size = "Large" .AND.
               IfValidAnd(StorCap >= 10) .AND. 
               IfValidAnd(StdbyLossFrac > 0) = 0 )
      then 
        PostWarning("A Standby Loss Fraction has not been provided for water 
                     heater '%s'.  A calculated standby loss will be used.",Name)
      else UNCHANGED
      endif endif
    else UNCHANGED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( LocalStatus( StdbyLoss ) > 0 )
          then
            StdbyLoss / (8.25 * 70 * StorCap)
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( LocalStatus( StdbyLoss ) > 0 )
        then
          StdbyLoss / (8.25 * 70 * StorCap)
        else
          UNDEFINED
        endif
      else if( Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" )
        then
          (CapRtd/800 + 110*SQRT( StorCap )) / (8.25 * 70 * StorCap)
        else if( FuelSrc = "Electricity")
        then
          (0.3 + 27 / StorCap) / 100
        else 
          UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      StdbyLossFrac
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( LocalStatus( StdbyLoss ) > 0 )
          then
            StdbyLoss / (8.25 * 70 * StorCap)
          else
            UNDEFINED
          endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          if( FuelSrc = "Gas" )
          then
            (CapRtd/800 + 110*SQRT( StorCap )) / (8.25 * 70 * StorCap)
          else if( FuelSrc = "Electricity")
          then
            (0.3 + 27 / StorCap) / 100
          else 
            UNDEFINED
          endif endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        StdbyLossFrac
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" )
        then
          (CapRtd/800 + 110*SQRT( StorCap )) / (8.25 * 70 * StorCap)
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          (0.3 + 27 / StorCap) / 100
        else 
          UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:StdbyLossFrac
ENDRULE

// -------------- Water Heater Standby Loss --------------------
RULE WtrHtr:StdbyLoss
  DESCRIPTION
    "The tank standby loss for storage tanks, which includes the effect of
     recovery efficiency."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput 
  UNITS
    Btu/hr
  REPORTPRECISION
    0
  DEFAULT        // For standby loss calcs, we use 70F and 8.25 #/gal  
                 // because these values are specified in the Federal standards
    if( FluidSysSHW = 1 .AND. IfValidAnd( StdbyLossFracReq = 1 )  )
    then
      if( LocalStatus(StdbyLossFrac) > 0 )
      then
        if( Size = "Large" .AND. SubType = "Instantaneous" .AND. 
            FuelSrc = "Gas" .AND. StorCap >= 10 .AND. StdbyLossFrac = 0 )
        then
          CapRtd/800 + 110*SQRT( StorCap )
        else
          StdbyLossFrac * 8.25 * 70 * StorCap
        endif
      else
        if( Size = "Large" .AND. SubType = "Storage" .AND. FuelSrc = "Gas" )
        then
          CapRtd/800 + 110*SQRT( StorCap )
        else if( Size = "Large" .AND. SubType = "Instantaneous" .AND. 
                 FuelSrc = "Gas" .AND. IfValidAnd( StorCap >= 10 ) )
        then         
          CapRtd/800 + 110*SQRT( StorCap )
        else if( Size = "Large" .AND. SubType = "Storage" .AND. FuelSrc = "Electricity" )
        then
          (0.3 + 27 / StorCap) / 100 * 8.25 * 70 * StorCap 
        else if( SubType = "Storage" .AND. FuelSrc = "Electricity" .AND. ( StorCap > 120 .OR. InpPwr > 12 ) )
        then
          (0.3 + 27 / StorCap) / 100 * 8.25 * 70 * StorCap 
        else
          UNDEFINED
        endif endif endif endif 
      endif
    else if( FluidSysHtg = 1 )
    then
      if ( IfValidAnd(StorCap < 1) )
      then
        0
      else
        StdbyLossFrac * 8.25 * 70 * StorCap
//        (0.3 + 27 / (InpPwr / CapRtdAdjFac) ) / 100 * 8.25 * 70 * (InpPwr / CapRtdAdjFac)   
      endif
    else
      UNDEFINED
    endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( Size = "Large" .AND. SubType = "Storage" ) 
          then
            u:StdbyLoss
          else if( Size = "Large" .AND. SubType = "Instantaneous" .AND. 
                   FuelSrc = "Gas" .AND. IfValidAnd( StorCap >= 10 ))
          then
            u:StdbyLoss
          else
            UNDEFINED
          endif endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( Size = "Large" .AND. SubType = "Storage" ) 
        then
          u:StdbyLoss
        else if( Size = "Large" .AND. SubType = "Instantaneous" .AND. 
                 FuelSrc = "Gas" .AND. IfValidAnd( StorCap >= 10 ) )
        then
          u:StdbyLoss
        else if( SubType = "Storage" .AND. FuelSrc = "Electricity" .AND.
                 ( IfValidAnd( StorCap > 120 ) .OR. IfValidAnd( InpPwr > 12 ) ) )
        then
         u:StdbyLoss
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" ) 
        then
          CapRtd/800 + 110*SQRT( StorCap )
        else if( FuelSrc = "Electricity" )
        then
          (0.3 + 27 / StorCap) / 100 * 8.25 * 70 * StorCap 
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      u:StdbyLoss
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( Size = "Large" .AND. SubType = "Storage" ) 
          then
            u:StdbyLoss
          else if( Size = "Large" .AND. SubType = "Instantaneous" .AND. 
                   FuelSrc = "Gas" .AND. StorCap >= 10 )
          then
            u:StdbyLoss
          else
            UNDEFINED
          endif endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          if( FuelSrc = "Gas" ) 
          then
            CapRtd/800 + 110*SQRT( StorCap )
          else if( FuelSrc = "Electricity" )
          then
            (0.3 + 27 / StorCap) / 100 * 8.25 * 70 * StorCap 
          else
            UNDEFINED
          endif endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        u:StdbyLoss
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if( FuelSrc = "Gas" ) 
        then
          CapRtd/800 + 110*SQRT( StorCap )
        else if( FuelSrc = "Electricity" .AND. Type = "Conventional" )
        then
          (0.3 + 27 / StorCap) / 100 * 8.25 * 70 * StorCap 
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:StdbyLoss
ENDRULE

// -------------- Heat Pump Water Heater Tank Height
RULE WtrHtr:TankHgt
  DESCRIPTION
    "The height of the tank of a heat pump water heater."
  INPUTCLASS
    NotInput
  UNITS
    ft
  DEFAULT
    5
//  CHECKCODE
//    if( FluidSys:Type = "ServiceHotWater" .AND.
//        Type <> "Conventional" )
//    then    
//      if( IfValidAnd(TankHgt > 0) = 0 )
//      then 
//        PostError("A nonzero TankHgt is required for water 
//                   heater '%s'.",Name)
//      else UNCHANGED
//      endif
//    else UNCHANGED
//    endif
  SIZING
    5
  ANNUAL
    5
ENDRULE

// The following tables are referenced for determing the Max and Min UA
// for calculation of UA for HeatPump
TABLE PrpHPWtrHtrUAEF
  StorCapRng  MinHPEF  MaxHPEF  MaxHPUA  MinHPUA    
  <=45        1.8      4.5      10       5
  <=57        1.8      4.5      11.5     5.8
  <=65        1.8      4.5      14       7
  <=79        1.8      4.5      16       8
  >79         1.8      4.5      20       10
ENDTABLE


// -------------- -------
RULE NEW WtrHtr:MinHPEF
  DATATYPE
    Float
  LONGFORM
    MinimumHeatPumpEnergyFactor
  DESCRIPTION
    "Minimum Heat Pump Energy Factor"
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( LocalStatus( StorCap ) > 0 )
        then PrpHPWtrHtrUAEF:MinHPEF("StorCapRng", StorCap)
      else UNDEFINED
      endif    
    else UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )
    then
      if( LocalStatus( StorCap ) > 0 )
        then PrpHPWtrHtrUAEF:MinHPEF("StorCapRng", StorCap)
      else UNDEFINED
      endif    
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
      z:MinHPEF
    else
      UNDEFINED
    endif
ENDRULE

// --------------  ---------
RULE NEW WtrHtr:MaxHPEF
  DATATYPE
    Float
  LONGFORM
    MaximumHeatPumpEnergyFactor
  DESCRIPTION
    "Minimum Heat Pump Energy Factor"
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( LocalStatus( StorCap ) > 0 )
      then 
        PrpHPWtrHtrUAEF:MaxHPEF("StorCapRng", StorCap)
      else
        UNDEFINED
      endif   
    else UNDEFINED
    endif  
  SIZING
    if( Type <> "Conventional" )
    then
      if( LocalStatus( StorCap ) > 0 )
      then 
        PrpHPWtrHtrUAEF:MaxHPEF("StorCapRng", StorCap)
    else
      UNDEFINED
    endif
    else UNDEFINED
    endif  
  ANNUAL
    if( Type <> "Conventional" )
    then
      z:MaxHPEF
    else
      UNDEFINED
    endif
ENDRULE

// --------------  ----------
RULE NEW WtrHtr:MinHPUA
  DATATYPE
    Float
  LONGFORM
    MinimumHeatPumpUA
  DESCRIPTION
    "Minimum Heat Pump UA Value"
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( LocalStatus( StorCap ) > 0 )
        then PrpHPWtrHtrUAEF:MinHPUA("StorCapRng", StorCap)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )
    then
      if( LocalStatus( StorCap ) > 0 )
        then PrpHPWtrHtrUAEF:MinHPUA("StorCapRng", StorCap)
    else
      UNDEFINED
    endif
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
      z:MinHPUA
    else
      UNDEFINED
    endif
ENDRULE

// --------------  ----------
RULE NEW WtrHtr:MaxHPUA
  DATATYPE
    Float
  LONGFORM
    MaximumHeatPumpUA
  DESCRIPTION
    "Minimum Heat Pump UA Value"
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( LocalStatus( StorCap ) > 0 )
        then PrpHPWtrHtrUAEF:MaxHPUA("StorCapRng", StorCap)
      else
        UNDEFINED
      endif    
    else UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )
    then
      if( LocalStatus( StorCap ) > 0 )
        then PrpHPWtrHtrUAEF:MaxHPUA("StorCapRng", StorCap)
    else
      UNDEFINED
    endif
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
      z:MaxHPUA
    else
      UNDEFINED
    endif
ENDRULE

// -------------- ----------
RULE NEW WtrHtr:TankLoss
  DATATYPE
    Float
  LONGFORM
    TankLoss
  DESCRIPTION
    "The heat loss from the heat pump water heater storage tank surface."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 0)
    then
      if( IfValidAnd( UEFRtdVal < 10 ) .AND. IfValidAnd( EF > 0) .AND. IfValidAnd( StorCap >0 ) )
      then
        ( MaxHPUA - ( EF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
      else if( IfValidAnd( UEFRtdVal = 50 ) .AND. IfValidAnd(UEFMdlCalcEF >0) ) 
      then
        ( MaxHPUA - ( UEFMdlCalcEF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
      else UNDEFINED
      endif endif
    else if( Type <> "Conventional" .AND. ( IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg = 1 ) )
    then
      StdbyLoss
    else 
      UNDEFINED
    endif endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
		    if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 0)
		    then
		      if( IfValidAnd( UEFRtdVal < 10 ) .AND. IfValidAnd( EF > 0) .AND. IfValidAnd( StorCap >0 ) )
		      then
		        ( MaxHPUA - ( EF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
		      else if( IfValidAnd( UEFRtdVal = 50 ) .AND. IfValidAnd(UEFMdlCalcEF >0) ) 
		      then
		        ( MaxHPUA - ( UEFMdlCalcEF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
		      else UNDEFINED
		      endif endif
		    else if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 1 )
		    then
		     StdbyLoss   //u:TankLoss
		    else
		     UNDEFINED
		    endif endif
      else if( Proj:SHWBothBaseline )
      then 
		    if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 0)
		    then
		      if( IfValidAnd( UEFRtdVal = 50 ) .AND. IfValidAnd(UEFMdlCalcEF >0) ) 
		      then
            BaseHtPumpWtrHtrTankLoss
//		        ( MaxHPUA - ( UEFMdlCalcEF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
		      else UNDEFINED
		      endif
		    else
		     UNDEFINED
		    endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 ) 
    then
      if( IsResAndCombo )
      then
        UNDEFINED
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
		    if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 0)
		    then
		      if( IfValidAnd( UEFRtdVal = 50 ) .AND. IfValidAnd(UEFMdlCalcEF >0) ) 
		      then
		        BaseHtPumpWtrHtrTankLoss
//		        ( MaxHPUA - ( UEFMdlCalcEF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
		      else UNDEFINED
		      endif
		    else
		     UNDEFINED
		    endif
      else if( Proj:SHWPropOnly )
      then 
		    if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 0)
		    then
		      if( IfValidAnd( UEFRtdVal < 10 ) .AND. IfValidAnd( EF > 0) .AND. IfValidAnd( StorCap >0 ) )
		      then
		        ( MaxHPUA - ( EF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
		      else if( IfValidAnd( UEFRtdVal = 50 ) .AND. IfValidAnd(UEFMdlCalcEF >0) ) 
		      then
		        ( MaxHPUA - ( UEFMdlCalcEF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
		      else UNDEFINED
		      endif endif
		    else if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 1 )
		    then
		     StdbyLoss   //u:TankLoss
		    else
		     UNDEFINED
		    endif endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif    
//  SIZING
//    if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 0)
//    then
//      if( IfValidAnd( UEFRtdVal < 10 ) .AND. IfValidAnd( EF > 0) .AND. IfValidAnd( StorCap >0 ) )
//    then
//        ( MaxHPUA - ( EF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
//      else if( IfValidAnd( UEFRtdVal = 50 ) .AND. IfValidAnd(UEFMdlCalcEF >0) ) 
//      then
//        ( MaxHPUA - ( UEFMdlCalcEF - MinHPEF) * ( (MaxHPUA - MinHPUA) / (MaxHPEF - MinHPEF) ) ) * 80   // Using look-up table derived from Appliance Database for Small Water Heaters
//      else UNDEFINED
//      endif endif
//    else if( Type <> "Conventional" .AND. IsCommHtPumpWtrHtr = 1 )
//    then
//     StdbyLoss   //u:TankLoss
//    else
//     UNDEFINED
//    endif endif
//  ANNUAL
//     z:TankLoss
ENDRULE

// -------------- Water Heater --------------
RULE WtrHtr:TankHgtSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    zp:TankHgt
  SIZING_BASELINE
    zb:TankHgt
  ANNUAL_PROPOSED
    zp:TankHgtSim
  ANNUAL_BASELINE
    zb:TankHgtSim
ENDRULE

// -------------- Heat Pump Water Heater Compressor Power
RULE NEW WtrHtr:CprsrPwr
  DATATYPE
    Float
  LONGFORM
    CompressorPower
  DESCRIPTION
    "The power consumed by the compressor in a heat pump water heater."
  INPUTCLASS
    NotInput
  UNITS
    Watts
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( u:Type = "HeatPumpSplit" .AND. IfValidAnd( InpPwr > 0 ) )
      then
        InpPwr * 0.85 * 1000
      else if( u:Type = "HeatPumpPackaged" .AND. IfValidAnd( InpPwr > 0 ) )
      then
        InpPwr * 0.91 * 1000
      else UNDEFINED
      endif endif
   else UNDEFINED
   endif
  SIZING
    if( Type <> "Conventional" )
    then 
      if( Type = "HeatPumpSplit" .AND. IfValidAnd( InpPwr > 0 ) )
      then
        InpPwr * 0.85 * 1000
      else if( Type = "HeatPumpPackaged" .AND. IfValidAnd( InpPwr > 0 ) )
      then
        InpPwr * 0.91 * 1000
      else UNDEFINED
      endif endif
   else UNDEFINED
   endif
  ANNUAL
    if( Type <> "Conventional" )
    then
     CprsrPwr
    else
     UNDEFINED
    endif
ENDRULE

// -------------- Heat Pump Water Heater Fan Power ----------------------
RULE NEW WtrHtr:FanPwr
  DATATYPE
    Float
  LONGFORM
    FanPower
  DESCRIPTION
    "The power consumed by the condenser fan on a heat pump water heater."
  INPUTCLASS
    NotInput
  UNITS
    Watts
  SIZING
    if( Type <> "Conventional" .AND. IfValidAnd ( InpPwr > 0 ) )
    then
      InpPwr * 0.09 * 1000
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" .AND. IfValidAnd ( InpPwr > 0 ) )
    then
     FanPwr
    else
     UNDEFINED
    endif
ENDRULE

// ----------------- Energy Factor Required Boolean --------------------------------------
RULE NEW WtrHtr:COPReq
  LONGFORM
    COPRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( IsCommHtPumpWtrHtr = 1 )
    then 1
    else if ( FluidSysHtg = 1 )
    then 
    1
    else 0
    endif endif
ENDRULE




// -------------- Heat Pump Water Heater COP  --------------------
RULE WtrHtr:COP
  DESCRIPTION
    "The COP of a heat pump water heater.  This is the heat input into the water
     divided by the input to the compressor."
  INPUTCLASS
    CondRequired
   UNITS
    Btu/Btu
  DEFAULT
    if( FluidSysSHW = 1 )
    then
      if( IsCommHtPumpWtrHtr = 1 )
      then
        if( Proj:AutoEffInput = 1 )
        then
          3
        else 
          UNDEFINED
        endif
      else if( Type <> "Conventional" .AND. IfValidAnd ( CapRtd > 0 ) .AND. IfValidAnd( CprsrPwr > 0 ) )
      then
        if ( Proj:IsStdModel = 1 )
        then 
          BaseHtPumpWtrHtrCOP
        else
        CapRtd / 3.412 / CprsrPwr    // This may differ from COP from Manufacturer’s specification because we are assuming the tank losses. 
        endif
      else UNDEFINED
      endif endif
    else if( FluidSysHtg = 1 )
    then
        if( Proj:AutoEffInput = 1 )
        then
          3
        else    
      UNDEFINED
        endif
    else UNDEFINED
    endif endif  
  CHECKCODE
    if( Proj:ExcludeWtrHtg = 1 )
    then
      UNCHANGED
    else   
      if( Type <> "Conventional" .AND. LocalStatus(COP) < 1 .AND. IfValidAnd(COPReq > 0) .AND. (IsCommHtPumpWtrHtr = 1 .OR. FluidSysHtg =1 ) )
      then 
        PostError("A COP is required for water heater '%s'.", Name)
      else UNCHANGED
      endif
   endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          UNDEFINED
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IsCommHtPumpWtrHtr = 1 )
        then
          COP
        else if( Type <> "Conventional" .AND. IfValidAnd ( CapRtd > 0 ) .AND. IfValidAnd( CprsrPwr > 0 ) )
        then 
          if ( Proj:IsStdModel )
          then
            BaseHtPumpWtrHtrCOP
          else
          CapRtd / 3.412 / CprsrPwr 
          endif
        else 
          UNDEFINED
        endif endif
      else if( Proj:SHWBothBaseline )
      then
        UNDEFINED
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      COP
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          UNDEFINED
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          UNDEFINED
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        if( IsCommHtPumpWtrHtr = 1 )
        then
          COP
        else if( Type <> "Conventional" .AND. IfValidAnd ( CapRtd > 0 ) .AND. IfValidAnd( CprsrPwr > 0 ) )
        then 
          CapRtd / 3.412 / CprsrPwr 
        else 
          UNDEFINED // add something
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
			  if ( Bldg:IsSchoolBldgForWtrHtr = 1 )
			  then 
			    BaseHtPumpWtrHtrCOP
			    // CapRtd / 3.412 / CprsrPwr
			  else 
			    UNDEFINED
			  endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL
    z:COP
ENDRULE

// -----------------------------------------------------------------------------
RULE WtrHtr:COPSim
  DESCRIPTION
    "The COP adjusted for non-standard rating conditions."
  DEFAULT
    if( IfValidAnd( COP > 0 ) .AND. IfValidAnd( COPRtdAdjFac != 0 ) )
    then
      COP / COPRtdAdjFac       //PROPOSED
    else UNDEFINED
    endif
  SIZING_PROPOSED
    COPSim
  SIZING_BASELINE
    if( IsExisting )
    then zp:COPSim
    else COP
    endif
  ANNUAL_PROPOSED
    COPSim
  ANNUAL_BASELINE
    if( IsExisting )
    then zp:COPSim
    else COP
    endif
ENDRULE


//  DEFAULT
//    if( Type <> "Conventional" .AND. IfValidAnd ( CapRtd > 0 ) .AND. IfValidAnd( CprsrPwr > 0 ) .AND. IsCommHtPumpWtrHtr = 0 )
//    then
//      CapRtd / 3.412 / CprsrPwr    // This may differ from COP from Manufacturer’s specification because we are assuming the tank losses. 
//    else UNDEFINED
//    endif  
//  SIZING
//    if( Type <> "Conventional" .AND. IfValidAnd ( CapRtd > 0 ) .AND. IfValidAnd( CprsrPwr > 0 ) .AND. IsCommHtPumpWtrHtr = 0 )
//    then 
//      CapRtd / 3.412 / CprsrPwr      // This may differ from COP from Manufacturer’s specification because we are assuming the tank losses. 
//    else UNDEFINED
//    endif  
//  ANNUAL
//    if( Type <> "Conventional" )
//    then     
//     COP
//    else UNDEFINED
//    endif
//ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:HtOutput
  DATATYPE
    Float
  LONGFORM
    HeatOutput
  DESCRIPTION
    "The heat added to the water by a water heater."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( InpPwr > 0 ) .AND. IfValidAnd( COP > 0 ) )
    then
      InpPwr * COP * 3412 * CmbdMult                // Heat Pump
    else if( Type = "Conventional" .AND. IfValidAnd( CapRtd > 0 ) )
    then
      CapRtd * IfValidAnd( ThrmlEff > 0 ) * CmbdMult
    else UNDEFINED
    endif endif
  SIZING
    if( Type <> "Conventional" .AND. IfValidAnd( InpPwr > 0 ) .AND. IfValidAnd( COP > 0 ) )
    then
      InpPwr * COP * 3412 * CmbdMult                // Heat Pump
    else if( Type = "Conventional" .AND. IfValidAnd( CapRtd > 0 ) )
    then
      CapRtd * IfValidAnd( ThrmlEff > 0 ) * CmbdMult
    else UNDEFINED
    endif endif
  ANNUAL
    z:HtOutput
ENDRULE

// -------------- Split Heat Pump Water Heater Condenser Pump Power
RULE WtrHtr:CndsrPumpPwr
  DESCRIPTION
    "The pump power of a split heat pump water heater."
  INPUTCLASS
    NotInput
  UNITS
    Watts
  SIZING
    if( Type <> "Conventional" )
    then 
      if( Type = "HeatPumpSplit" .AND. IfValidAnd (InpPwr > 0 ) )
      then
        InpPwr * 0.06 * 1000
      else 0
      endif
    else UNDEFINED
    endif  
  ANNUAL
    if( Type <> "Conventional" )
    then
     z:CndsrPumpPwr
    else
     UNDEFINED
    endif
ENDRULE



// -------------- Water Heater --------------
RULE WtrHtr:CndsrPumpPwrSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    if( Type <> "Conventional" )
    then
     ( zp:CndsrPumpPwr * u:CmbdMult ) / CapRtdAdjFac
    else
     UNDEFINED
    endif    
  SIZING_BASELINE
    if( Type <> "Conventional" )
    then
     ( zb:CndsrPumpPwr * CmbdMult ) / CapRtdAdjFac
    else
     UNDEFINED
    endif    
  ANNUAL_PROPOSED
    if( Type <> "Conventional" )
    then
      zp:CndsrPumpPwrSim
    else
     UNDEFINED
    endif    
  ANNUAL_BASELINE
    if( Type <> "Conventional" )
    then
      zb:CndsrPumpPwrSim
    else
     UNDEFINED
    endif    
ENDRULE


// -------------- Heat Pump Water Heater Condenser Fan Flow -----------------
RULE WtrHtr:FanFlowCap
  DESCRIPTION
    "The heat pump water heater condenser fan airflow rate."
  INPUTCLASS
    NotInput
  UNITS
    cfm
  SIZING
    if( Type <> "Conventional" .AND. IfValidAnd( CapRtd > 0 ) )
    then
      CapRtd * 621.0178 * 0.00006042      // Calculated to be between E+ error range (m3/s/watt) Min  0.00004027  - Max 0.00008056
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
     FanFlowCap
    else
     UNDEFINED
    endif        
ENDRULE

// -------------- Cooling Output For Heat-Pump Water Heater -----------------
// 
RULE NEW WtrHtr:ClgOutput
  DATATYPE
    Float
  LONGFORM
    CoolingOutput
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  UNITS
    watt
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( CapRtdSim > 0 ) .AND. IfValidAnd( COP > 0 ) )
    then
     ( ( CapRtdSim / 3.412 ) - ( CapRtdSim / 3.412 ) / COPSim )
    else UNDEFINED
    endif
ENDRULE

// -------------- Check for Air Volume Flow Rate per Watt of Rated Cooling Capacity  -----------------
//
RULE NEW WtrHtr:AirVolFlowRt
  DATATYPE
    Float
  LONGFORM
    AirVolumeFlowRate
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  UNITS
    m3/sec/watt
  DEFAULT
    if( Type <> "Conventional" .AND. IfValidAnd( CapRtd > 0 ) )
    then
     ( ( ( CapRtd * 31.25 / 1000 ) / CapRtdAdjFac ) * 0.000472 ) / ClgOutput
    else UNDEFINED
    endif
ENDRULE



// -------------- Water Heater --------------
RULE WtrHtr:FanFlowCapSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    if( Type <> "Conventional" )
    then
      ( zp:FanFlowCap * CmbdMult ) / CapRtdAdjFac
    else
     UNDEFINED
    endif    
  SIZING_BASELINE
    if( Type <> "Conventional" )
    then
      ( zb:FanFlowCap * CmbdMult ) / CapRtdAdjFac
    else
     UNDEFINED
    endif    
  ANNUAL_PROPOSED
    if( Type <> "Conventional" )
    then
      zp:FanFlowCapSim
    else
     UNDEFINED
    endif    
  ANNUAL_BASELINE
    if( Type <> "Conventional" )
    then
      zb:FanFlowCapSim
    else
     UNDEFINED
    endif    
ENDRULE


// -------------- Heat Pump Water Heater Rated Sensible Ratio
RULE WtrHtr:RtdSensHtRat
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  SIZING
    if( Type <> "Conventional" )
    then UNDEFINED               // Set to default in EnergyPlus
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
     RtdSensHtRat
    else
     UNDEFINED
    endif    
ENDRULE

// -------------- Heat Pump Water Heater Condenser Fan Static Pressure
RULE WtrHtr:FanTotStaticPress
  DESCRIPTION
    "The heat pump water heater condenser fan static pressure."
  INPUTCLASS
    NotInput
  UNITS
    in. w.g.
  SIZING
    if( Type <> "Conventional" .AND. IfValidAnd( FanPwr > 0 ) .AND. IfValidAnd( FanFlowCap > 0 ) )
    then
      FanPwr * 0.5 * 0.85 / 0.1175 / FanFlowCap       // FanEff 0.5, MtrEff 0.85, Constant 0.1175
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
     FanTotStaticPress
    else
     UNDEFINED
    endif    
ENDRULE


// -------------- Water Heater --------------
RULE WtrHtr:FanTotStaticPressSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    if( Type <> "Conventional" )
    then
     zp:FanTotStaticPress / CapRtdAdjFac
    else
     UNDEFINED
    endif    
  SIZING_BASELINE
    if( Type <> "Conventional" )
    then
     zb:FanTotStaticPress / CapRtdAdjFac
    else
     UNDEFINED
    endif    
  ANNUAL_PROPOSED
    if( Type <> "Conventional" )
    then
     zp:FanTotStaticPressSim
    else
     UNDEFINED
    endif    
  ANNUAL_BASELINE
    if( Type <> "Conventional" )
    then
     zb:FanTotStaticPressSim
    else
     UNDEFINED
    endif    
ENDRULE


// -------------- Heat Pump Water Heater Location of Compressor Flag 
RULE WtrHtr:StorLoc
  DESCRIPTION
    "A flag set when the heat pump water heater storage tank is located
     outdoors."
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  MAXIMUM
    1
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if ( IsBaseSys )
      then
        1
      else
        0
      endif
    else UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )
    then
      if ( IsBaseSys )
      then
        1
      else
        StorLoc
      endif
    else
     UNDEFINED
    endif    
  ANNUAL
    if( Type <> "Conventional" )
    then
      if ( IsBaseSys .OR. ( FluidSysHtg = 1 .AND. IfValidAnd(StorCap < 1) ) )
      then
        1
      else
        StorLoc
      endif
    else
     UNDEFINED
    endif    
ENDRULE


// -----------------------------------------------------------------------------
RULE NEW WtrHtr:UEFMdlTankOffCycleLossCoef
  DATATYPE
    Float
  LONGFORM
    UniformEnergyFactorModelTankOffCycleLossCoefficient
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr-°F
  DEFAULT
    if ( FluidSysSHW = 1 )
    then
	    if( IfValidAnd( UEFRtdVal >= 10 ) .AND. IfValidAnd( CapRtdSim > 0 )  )
    then
      switch ( UEFRtdVal )
        case 10:  // Consumer Gas-Fired Storage Water Heater
          if( IfValidAnd( RE > 0 ) )
          then
            ((1/UEFMdlCalcEF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * (CapRtdSim / u:CmbdMult) )) ) )
          else
            UNDEFINED
          endif
        case 20:  // Consumer Intantaneous Gas-Fired Water Heater
          if( IfValidAnd( UEFMdlCalcEF > 0 ) .AND. IfValidAnd( UEFMdlCalcRE > 0 ) )
          then        
            ((1/MIN(UEFMdlCalcEF,1)) - (1/MIN(UEFMdlCalcRE,1))) / ( 67.5 * ( (24/41094) - (1/(MIN(UEFMdlCalcRE,1) * (CapRtdSim / u:CmbdMult) )) ) )
          else
            UNDEFINED
          endif
        case 30:  // Residential-Duty Commercial Gas-Fired Storage
          ValidOr(UEFMdlCalcStdbyLoss,0) / 70
        case 40:  // Consumer Electric Storage Water Heater
          if( IfValidAnd( RE > 0 ) )
          then
            ((1/UEFMdlCalcEF) - (1/RE))  / ( 67.5 * ( (24/41094) - (1/(RE  * (CapRtdSim / u:CmbdMult) )) ) )
          else
            UNDEFINED
          endif        
        case 50:  // Consumer Electric Storage Heat-Pump Water Heater
          ValidOr ( TankLoss, 0 ) / 80
        case 60:   // Consumer Instantaneous Electric Water Heater
          0.4
        case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
          0.4
        default:
          UNDEFINED
      endswitch    
    else 0.4
    endif
    else
      UNDEFINED
    endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          u:UEFMdlTankOffCycleLossCoef
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:UEFMdlTankOffCycleLossCoef
      else if( Proj:SHWBothBaseline )
      then
        0        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          u:UEFMdlTankOffCycleLossCoef
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWPropOnly )
      then
        u:UEFMdlTankOffCycleLossCoef
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
        then  ValidOr ( TankLoss, 0 ) / 80
        else UNDEFINED        
        endif       
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
ENDRULE


// -------------- Water Heater Tank Off Cycle Loss Coefficient (UA) ----------------
RULE WtrHtr:TankOffCycleLossCoef
  DESCRIPTION
    "The tank standby loss coefficient (UA) for the water heater. For small
     water heaters covered by NAECA, the loss coefficient is a derived
     parameter, a function of the Energy Factor and recovery efficiency."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:TankOffCycleLossCoef removed in transition from 2013 version 3c to 3e and 2016.2.0 to 2016.2.1"
  UNITS
    Btu/hr-°F
  REPORTPRECISION
    0
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal < 10 ) )
          then
            if( Type <> "Conventional" )
            then ValidOr ( TankLoss, 0 ) / 80
            else
              if( Size = "Small" )
              then
                ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * (CapRtdSim / u:CmbdMult) )) ) ) 
              else if( LocalStatus( StdbyLoss ) > 1 )
              then
               ValidOr( StdbyLoss, 0 ) / 70             // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
              else 0.4
              endif endif
            endif
          else 0.5
          endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( Type <> "Conventional" )
          then ValidOr ( TankLoss, 0 ) / 80
          else
            if( Size = "Small" )
            then
              ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * (CapRtdSim / u:CmbdMult) )) ) ) 
            else if( LocalStatus( StdbyLoss ) > 1 )
            then
             ValidOr( StdbyLoss, 0 ) / 70             // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
            else 0.4
            endif endif
          endif
        else 0.5
        endif
      else if( Proj:SHWBothBaseline )
      then
        if( Size = "Small" )
        then
          ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * CapRtd )) ) )
        else
          ValidOr( StdbyLoss, 0 ) / 70             // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
        endif   
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
     ( ValidOr( StdbyLoss, 0 ) / 70 )
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal < 10 ) )
          then
            if( Type <> "Conventional" )
            then
              ValidOr ( TankLoss, 0 ) / 80
            else
              if( Size = "Small" )
              then
                ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * (CapRtdSim / u:CmbdMult) )) ) ) 
              else if( LocalStatus( StdbyLoss ) > 1 )
              then
                ValidOr( StdbyLoss, 0 ) / 70             // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
              else 0.4
              endif endif
            endif
          else 0.5
          endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * CapRtd)) ) )
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( Type <> "Conventional" )
          then
            ValidOr ( TankLoss, 0 ) / 80
          else
            if( Size = "Small" )
            then
              ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * (CapRtdSim / u:CmbdMult) )) ) ) 
            else if( LocalStatus( StdbyLoss ) > 1 )
            then
              ValidOr( StdbyLoss, 0 ) / 70             // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
            else 0.4
            endif endif
          endif
        else 0.5
        endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if ( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
        then 0.5
        else
        if( Size = "Small" )
        then
          ((1/EF) - (1/RE)) / ( 67.5 * ( (24/41094) - (1/(RE * CapRtd)) ) )
        else
          ValidOr( StdbyLoss, 0 ) / 70          // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
        endif   
	      endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:TankOffCycleLossCoef
  ANNUAL_BASELINE
    zb:TankOffCycleLossCoef
ENDRULE

// -------------- Water Heater --------------
RULE WtrHtr:TankOffCycleLossCoefSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal < 10 ) )
          then
            if( Type <> "Conventional" )
            then
              MAX ( zp:TankOffCycleLossCoef * u:CmbdMult, 0.001 )
            else if( Size = "Small" )
            then
              MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )
            else if( LocalStatus( StdbyLoss ) > 1 )
            then
              MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )               // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
            else
              0.4 * u:CmbdMult
            endif endif endif
          else if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            MAX( zp:UEFMdlTankOffCycleLossCoef * u:CmbdMult, 0.001 )
          else UNDEFINED
          endif endif
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( Type <> "Conventional" )
          then
            MAX ( zp:TankOffCycleLossCoef * u:CmbdMult, 0.001 )
          else if( Size = "Small" )
          then
            MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )
          else if( LocalStatus( StdbyLoss ) > 1 )
          then
            MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )               // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
          else
            0.4 * u:CmbdMult
          endif endif endif
        else if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          MAX( zp:UEFMdlTankOffCycleLossCoef * u:CmbdMult, 0.001 )
        else UNDEFINED
        endif endif
      else if( Proj:SHWBothBaseline )
      then
        if( Size = "Small" )
        then
          MAX ( zp:TankOffCycleLossCoef, 0.001 )
        else
          MAX ( zp:TankOffCycleLossCoef, 0.001 )             // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
        endif   
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      MAX ( zp:TankOffCycleLossCoef, 0.001 ) 
    else UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          if( IfValidAnd( UEFRtdVal < 10 ) )
          then
            if( Type <> "Conventional" )
            then
              zp:TankOffCycleLossCoef * u:CmbdMult
            else if( Size = "Small" )
            then
              MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )
            else if( LocalStatus( StdbyLoss ) > 1 )
            then
              MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )               // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
            else
              0.4 * u:CmbdMult
            endif endif endif
          else if( IfValidAnd( UEFRtdVal >= 10 ) )
          then
            MAX( zb:UEFMdlTankOffCycleLossCoef * u:CmbdMult, 0.001 )
          else UNDEFINED
          endif endif
        else if( Proj:ResComboDHWUserAndBaseline )
        then 
          MAX( zb:TankOffCycleLossCoef * CmbdMult, 0.001 )  
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif endif
      else if( Proj:SHWPropOnly )
      then
        if( IfValidAnd( UEFRtdVal < 10 ) )
        then
          if( Type <> "Conventional" )
          then
            zp:TankOffCycleLossCoef * u:CmbdMult
          else if( Size = "Small" )
          then
            MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )
          else if( LocalStatus( StdbyLoss ) > 1 )
          then
            MAX( TankOffCycleLossCoef * u:CmbdMult, 0.001 )               // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
          else
            0.4 * u:CmbdMult
          endif endif endif
        else if( IfValidAnd( UEFRtdVal >= 10 ) )
        then
          MAX( zb:UEFMdlTankOffCycleLossCoef * u:CmbdMult, 0.001 )
        else UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if( Bldg:IsSchoolBldgForWtrHtr = 1 .AND. StdsVersionYr > 2019 )
        then
          MAX( zb:UEFMdlTankOffCycleLossCoef * CmbdMult, 0.001 )
        else if( Size = "Small" )
        then
          MAX( zb:TankOffCycleLossCoef * CmbdMult, 0.001 )  
        else
          MAX ( zb:TankOffCycleLossCoef, 0.001 )               // 70 is the delta T between indoor space temp and setpoint temp - from Fed Regs
        endif  endif
      else if( Proj:SHWNone )
      then
        UNDEFINED
      else
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif
  ANNUAL_BASELINE
    zb:TankOffCycleLossCoefSim
  ANNUAL_PROPOSED
    zp:TankOffCycleLossCoefSim
ENDRULE

// -------------- Water Heater Tank On Cycle Loss Coefficient (UA) ----------------
RULE WtrHtr:TankOnCycleLossCoef
  DESCRIPTION
    "The tank standby loss coefficient (UA) for the water heater. For small
     water heater covered by NAECA, the loss coefficient is a derived
     parameter, a function of the Energy Factor and recovery efficiency."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr-°F
  SIZING
    z:TankOffCycleLossCoef
  ANNUAL
    z:TankOffCycleLossCoef
ENDRULE


// -------------- Water Heater --------------
RULE WtrHtr:TankOnCycleLossCoefSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    zp:TankOffCycleLossCoefSim
  SIZING_PROPOSED
    zb:TankOffCycleLossCoefSim
  ANNUAL_PROPOSED
    zp:TankOffCycleLossCoefSim 
  ANNUAL_BASELINE
    zb:TankOffCycleLossCoefSim
ENDRULE


// -------------- Heat Pump Water Heater Location of Storage Tank Flag 
RULE WtrHtr:StorZn
  DESCRIPTION
    "A flag set when the heat pump water heater tank is located outdoors."
  INPUTCLASS
    NotInput
  OPTION
    Zone
    Outdoor
  DEFAULT
    if( Type <> "Conventional" .AND. StorLoc = 0 )
      then "Zone"
    else if( Type <> "Conventional" .AND. StorLoc = 1 )
      then "Outdoor"
    else UNDEFINED
    endif endif
  SIZING
    if( Type <> "Conventional" )
    then
      if ( IsBaseSys )
      then
        "Outdoor"
      else
        StorZn
      endif
    else 
      UNDEFINED
    endif    
  ANNUAL
    if( Type <> "Conventional" )
    then
      if ( IsBaseSys )
      then
        "Outdoor"
      else
        z:StorZn
      endif
    else
     UNDEFINED
    endif    
ENDRULE


// -------------- Heat Pump Water Heater Location of Storage Tank
RULE WtrHtr:StorZnRef
  DESCRIPTION
    "The name of the zone where the heat pump water heater storage tank
     is located."
  INPUTCLASS
    CondRequired
  CHECKCODE
    if( Type <> "Conventional" )
    then
      if( StorLoc = 0 .AND. LocalStatus( StorZnRef ) < 1 )
      then
        if( Type = "HeatPumpSplit" )
        then
          PostError("A zone name must be provided for the location of the 
                     storage tank for heat pump water heater '%s'", Name)
        else if( Type = "HeatPumpPackaged" )
        then
          PostError("A zone name must be provided for the location of 
                     heat pump water heater '%s'", Name)
        else UNCHANGED
        endif endif
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING
    if( Type <> "Conventional" .AND. IfValidAnd( StorLoc < 1 ) )
    then 
      StorZnRef
    else 
      UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
      z:StorZnRef
    else
      UNDEFINED
    endif
ENDRULE


// -------------- Heat Pump Water Heater Location of Compressor Flag 
RULE WtrHtr:CprsrLoc
  DESCRIPTION
    "A flag set when the heat pump water heater compressor is located outdoors."
  INPUTCLASS
    CondRequired
  MINIMUM
    0
  MAXIMUM
    1
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( Type = "HeatPumpPackaged" .AND. IfValidAnd( StorLoc > 0 ) )
      then 1
      else if (  Type = "HeatPumpSplit" .AND. FluidSysHtg = 1 )
      then 1
      else 0
      endif endif
    else UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )   
    then
      if( Type = "HeatPumpPackaged" .AND. IfValidAnd( StorLoc > 0 ) )
      then 1
      else if( Bldg:IsSchoolBldgForWtrHtr = 1 .OR. (  Type = "HeatPumpSplit" .AND. FluidSysHtg = 1 ) )
      then 1
      else CprsrLoc
      endif endif
    else
     UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )   
    then
      z:CprsrLoc
    else 
     UNDEFINED
    endif
ENDRULE

// -------------- Heat Pump Water Heater Location of Compressor Flag 
RULE WtrHtr:CprsrZn
  DESCRIPTION
    "A flag set when the heat pump water heater compressor is located outdoors."
  INPUTCLASS
    NotInput
  OPTION
    Zone
    Outdoor
  DEFAULT
    if( Type <> "Conventional" )
    then 
      if( Type = "HeatPumpPackaged" )
      then
        StorZn
      else if( Type = "HeatPumpSplit" )
      then
        if( CprsrLoc = 0 )
        then "Zone"
        else "Outdoor"
        endif
      else UNDEFINED
      endif endif
    else UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )   
    then
      if( Type = "HeatPumpPackaged" )
      then
        StorZn
      else if( Type = "HeatPumpSplit" )
      then
        if( CprsrLoc = 0 )
        then "Zone"
        else "Outdoor"
        endif
      else UNDEFINED
      endif endif
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )   
    then
      z:CprsrZn
    else 
     UNDEFINED
    endif
ENDRULE


// -------------- Heat Pump Water Heater Location of Compressor 
RULE WtrHtr:CprsrZnRef
  DESCRIPTION
    "The name of the zone where the heat pump water heater compressor is
     located."
  INPUTCLASS
    CondRequired
  DEFAULT
    if( Type <> "Conventional" )
    then
      if( Type = "HeatPumpPackaged" )
      then StorZnRef
      else UNDEFINED
      endif
    else UNDEFINED
    endif
  CHECKCODE
    if( Type <> "Conventional" )
    then
      if( CprsrLoc = 0 .AND. LocalStatus( CprsrZnRef ) < 1 )
      then
        if( Type = "HeatPumpSplit" )
        then
          PostError("A zone name must be provided for the location of the 
                     compressor for heat pump water heater '%s'", Name)
        else UNCHANGED
        endif 
      else UNCHANGED
      endif
    else UNCHANGED
    endif
  SIZING
    if( Type <> "Conventional" )
    then
      if( Type = "HeatPumpPackaged" )
      then StorZnRef
      else if( IfValidAnd( CprsrLoc < 1 ) )
      then CprsrZnRef
      else UNDEFINED
      endif endif
    else UNDEFINED
    endif
  ANNUAL
    if( Type <> "Conventional" )
    then
      z:CprsrZnRef
    else
     UNDEFINED
    endif
ENDRULE


// -------------- Heat Pump Water Heater Crankcase Heater Capacity 
RULE WtrHtr:CrankcaseHtrCap
  DESCRIPTION
    "The heating capacity of the heat pump water heater crankcase heater."
  INPUTCLASS
    NotInput
  UNITS
    Watts 
  SIZING
    if( Type <> "Conventional" ) 
    then 
      if( CprsrZnRef = "Outdoor" )
      then 33
      else 0
      endif
    else  UNDEFINED
    endif
  ANNUAL
    CrankcaseHtrCap
ENDRULE

// -------------- Water Heater --------------
RULE WtrHtr:CrankcaseHtrCapSim
  DESCRIPTION
    "The simulates system type for SDD -> OS reverse translator."
  HELP
    ""
  SIZING_PROPOSED
    zp:CrankcaseHtrCap
  SIZING_BASELINE
    zb:CrankcaseHtrCap
  ANNUAL_PROPOSED
    zp:CrankcaseHtrCapSim
  ANNUAL_BASELINE
    zb:CrankcaseHtrCapSim
ENDRULE


// -------------- Heat Pump Water Heater 
RULE WtrHtr:MinInletAirTempCprsrOper
  DESCRIPTION
    "Minimum Inlet Air Temperature for Compressor Operation"
  INPUTCLASS
    CondRequired    
  UNITS
    F
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      if ( IfValidAnd(HtPumpSubType = "R134a_MultiPass") )
      then
        40
      else if ( IfValidAnd(HtPumpSubType = "R410a_MultiPass") )
      then
        0
      else
        40
      endif endif
    else 
     UNDEFINED
    endif
  SIZING
    if( Type <> "Conventional" )
    then 
      if ( IfValidAnd(HtPumpSubType = "R134a_MultiPass") )
      then
        40
      else if ( IfValidAnd(HtPumpSubType = "R410a_MultiPass") )
      then
        0
      else
        40
      endif endif
    else UNDEFINED
    endif  
  ANNUAL
    if( Type <> "Conventional" )
    then
      if ( IfValidAnd(HtPumpSubType = "R134a_MultiPass") )
      then
        40
      else if ( IfValidAnd(HtPumpSubType = "R410a_MultiPass") )
      then
        0
      else
        40
      endif endif
    else UNDEFINED
    endif
ENDRULE



// -------------- Fuel Water Heater Part Load Efficiency Curve ----------------
//
RULE WtrHtr:HIR_fPLRCrvRef
  DESCRIPTION
    "A set of factors that adjust the full-load thermal efficiency for part 
     load conditions. The factor is set as a curve."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  SIZING
    if( Type <> "Conventional" )
    then
      RuleLibrary(CrvCubic, "Constant1Cubic")
    else UNDEFINED
    endif
  ANNUAL
    z:HIR_fPLRCrvRef
ENDRULE


// ********** Heat Pump Water Heating Capacity Adjustment Curve ********
RULE WtrHtr:Cap_fTempCrvRef
  DESCRIPTION
    "Normalized curve that varies full-load efficiency (EIR) as a function of 
     indoor coil and condenser conditions."
  REFERENCE 
    NACM Section 5.7.6.5
  INPUTCLASS
    Prescribed 
  SIZING
    if( Type <> "Conventional" )
    then
      if( IfValidAnd( HtPumpSubType = "R134a_MultiPass") ) 
      then
        RuleLibrary(CrvDblQuad, "MultipassWtrHtrHtPumpQRatio_fTdbTdbSI")
      else if( IfValidAnd( HtPumpSubType = "R410a_MultiPass") ) 
      then
        RuleLibrary(CrvDblQuad, "R410aMultipassWtrHtrHtPumpQRatio_fTwbTdbSI")
      else
        RuleLibrary(CrvDblQuad, "WtrHtrHtPumpQRatio_fTdbTdbSI")
      endif endif
    else UNDEFINED
    endif
  ANNUAL 
    z:Cap_fTempCrvRef
ENDRULE


// ********** Heat Pump Water Heating Capacity Adjustment Curve ********
RULE WtrHtr:COP_fTempCrvRef
  DESCRIPTION
    "Normalized curve that varies full-load efficiency (EIR) as a function of 
     indoor coil and condenser conditions."
  REFERENCE 
    NACM Section 5.7.6.5
  INPUTCLASS
    Prescribed 
  SIZING
    if( Type <> "Conventional" )
    then
      if( IfValidAnd( HtPumpSubType = "R134a_MultiPass") ) 
      then
        RuleLibrary(CrvDblQuad, "MultipassWtrHtrHtPumpCOP_fTdbTdbSI")
      else if( IfValidAnd( HtPumpSubType = "R410a_MultiPass") ) 
      then
        RuleLibrary(CrvDblQuad, "R410aMultipassWtrHtrHtPumpCOP_fTwbTdbSI")
      else
        RuleLibrary(CrvDblQuad, "WtrHtrHtPumpCOP_fTdbTdbSI")
      endif endif
    else UNDEFINED
    endif
  ANNUAL 
    z:COP_fTempCrvRef
ENDRULE

// ---------- New NonRes Water Heater Count in Building --------------
RULE NEW WtrHtr:NewComDHWHtr
  DATATYPE
    Integer
  LONGFORM
    NewCommercialDomesticHotWaterHeater
  DESCRIPTION
    "This is the count of new Water Heaters in the building being used for 
     service water heating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( Status = "New" .AND. IfValidAnd(CmbdMult > 0) .AND. FluidSysSHW = 1 )
    then CmbdMult
    else 0
    endif
  SIZING
    if( Status = "New" .AND. IfValidAnd(CmbdMult > 0) .AND. FluidSysSHW = 1 )
    then CmbdMult
    else 0
    endif
  ANNUAL
    if( Status = "New" .AND. IfValidAnd(CmbdMult > 0) .AND. FluidSysSHW = 1 )
    then CmbdMult
    else 0
    endif
ENDRULE



// ----------------- Pilot Energy Required Boolean --------------------------------------
RULE NEW WtrHtr:PilotEnergyReq
  LONGFORM
    PilotEnergyRequired
  DATATYPE
    Integer
  INPUTCLASS
    NotInput
  DEFAULT
    if( Size = "Large" .AND. IsInstant = 1 )
    then 1
    else 0
    endif
ENDRULE


// -------------- Water Heater Type Report --------------
RULE WtrHtr:WtrHtrTypeRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      if( Type = "HeatPumpPackaged" )
      then "Heat-Pump Packaged"
      else if(Type = "HeatPumpSplit" )
      then "Heat-Pump Split"
      else u:Type
      endif endif
    else
      if( LocalStatus(SubType) > 0 )
      then SubType
      else "NA"
      endif
    endif   
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// ----------------- Efficiency for Report -------------------------------------
RULE WtrHtr:EffRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( ifValidAnd( ThrmlEffReq = 1 ).AND. IfValidAnd(UEFRtdVal < 10) ) 
    then
      Format("Thrml. Eff.: %s", FltToStr( ThrmlEff, 2 ) )
    else if( IfValidAnd( EFReq = 1 ) .AND. IfValidAnd(UEFRtdVal < 10 )  ) 
    then
      Format("EF: %s", FltToStr( EF, 2 ) )
    else if( IfValidAnd(UEFRtdVal >= 10 ) )
    then
      Format("UEF: %s", FltToStr( UEF, 2 ) )
    else if( IsCommHtPumpWtrHtr =1 .AND. IfValidAnd(UEFRtdVal < 10 )  ) 
    then
      Format("COP: %s", FltToStr( COP, 2 ) )
    else "NA"
    endif endif endif endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// ----------------- Standby Loss for Report -----------------------------------
RULE WtrHtr:StdbyLossRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( IfValidAnd( StdbyLossFracReq = 1 ) ) then
      Format("SBLF: %s", FltToStr( StdbyLossFrac, 3 ) )
    else
      "SBLF: NA"
    endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// ----------------- RE for Report -----------------------------------
RULE WtrHtr:RERpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( IfValidAnd( REReq = 1 ) ) then
      Format("RE: %s", FltToStr( RE, 2 ) )
    else
      "RE: NA"
    endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -------------- Water Heater Rated Capacity for Report --------------
RULE WtrHtr:CapRtdRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( Proj:ExcludeWtrHtg .AND. FluidSysHtg = 0 )
    then
      UNDEFINED
    else if ( IfValidAnd(InpPwr > 0) .AND. IfValidAnd(CapRtdSim > 0) )
    then
	    if( IfValidAnd( Type <> "Conventional" ) )
	    then
	      Format("%s (kW)", FltToStr( u:InpPwr, 1 ) ) 
	    else if( FuelSrc = "Electricity")
	    then
	      Format("%s (kW)", FltToStr( u:InpPwr, 1 ) ) 
	    else
	      Format("%s", FltToStr( (zp:CapRtdSim / zp:CmbdMult / 1000), 0 ) )  //this div by 1000 is a conversion for reporting from Btu/h to kBtu/h
	    endif endif
	  else
	    UNDEFINED
	  endif endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -------------- Water Heater Storage Capacity for Report  --------------
RULE WtrHtr:StorCapRpt
  DESCRIPTION
    "This is the water heater's storage capacity with no multiplier."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
    gal
  REPORTPRECISION
    2
  DEFAULT
    UNDEFINED
  SIZING_PROPOSED
    UNDEFINED
  SIZING_BASELINE
    UNDEFINED
  ANNUAL_PROPOSED
    zp:StorCap
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -------------- Water Heater Pilot Energy for Report --------------------
RULE WtrHtr:PilotEnergyRpt
  DESCRIPTION
    "The water heater's pilot energy with no multiplier."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput  IgnoreUserInput  "WtrHtr:PilotEnergyRpt removed in transition from 2016.2.1 to 2016.2.2"
  MINIMUM
    0
  MAXIMUM
    10000
  REPORTPRECISION
    0
  DEFAULT
    UNDEFINED
  SIZING_PROPOSED
    UNDEFINED
  SIZING_BASELINE
    UNDEFINED
  ANNUAL_PROPOSED
    if( IfValidAnd(PilotEnergyReq >= 0) )
     then 
       u:PilotEnergy
     else 
       UNDEFINED
     endif
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -------------- Water Heater Product Category for Report --------------------
RULE WtrHtr:ProdType
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  DEFAULT
    if( FluidSysSHW = 1 )  
    then
    if( IfValidAnd(UEFRtdVal >= 10) )
    then 
      switch ( UEFRtdVal )
        case 10:  // Consumer Gas-Fired Storage Water Heater
          "Consumer"
        case 20:  // Consumer Intantaneous Gas-Fired Water Heater
          "Consumer"
        case 30:  // Residential-Duty Commercial Gas-Fired Storage
          "Residential-Duty Commercial"
        case 40:  // Consumer Electric Storage Water Heater
          "Consumer"
        case 50:  // Consumer Electric Storage Heat-Pump Water Heater
          "Consumer"
        case 60:  // Consumer Instantaneous Electric Water Heater
          "Consumer"
        case 70:  // Residential-Duty Commercial Electric Instantaneous Water Heater
          "Residential-Duty Commercial"            
        default:
          UNDEFINED    
      endswitch        
    else if( IfValidAnd(UEFRtdVal < 10) )
    then
      if( FuelSrc = "Gas" .AND. IfValidAnd( CapRtd > 0) .AND. IfValidAnd( StorCap >= 0) )
      then
        if( IfValidAnd( StorCap >= 0 ) .AND. IfValidAnd( CapRtd > 200000 ) .AND.
            ( CapRtd / Max( StorCap, 1) ) >= 4000 )
        then
          "Commercial"
        else if( IfValidAnd( StorCap >= 20 ) .AND. 
                 ( IfValidAnd( CapRtd > 75000 ) .OR. IfValidAnd( StorCap > 120 ) ) )
        then 
          "Commercial"
        else Size
        endif endif 
      else if( FuelSrc = "Electricity" .AND. IfValidAnd( InpPwr > 0) .AND. IfValidAnd( StorCap >= 0))
      then
        if( Type = "Conventional" .AND. StorCap >= 0 .AND. InpPwr > 12 )
        then
          "Commercial"
        else if( Type = "Conventional" .AND. StorCap >= 20 .AND.
                 ( InpPwr > 12 .OR. StorCap > 120  ) )
        then
          "Commercial"
        else if( Type <> "Conventional" )
        then
          if( IsCommHtPumpWtrHtr = 1 )
          then "Commercial"
          else UNDEFINED    
          endif    
        else Size
        endif endif endif
      else Size
      endif endif
    else UNDEFINED
    endif endif
	  else
	    UNDEFINED
	  endif
  ANNUAL_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          ProdType
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        ProdType
      else if( Proj:SHWBothBaseline )
      then
        UNDEFINED        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else if( FluidSysHtg = 1 )
    then
      UNDEFINED
    else UNDEFINED
    endif endif  
  ANNUAL_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( Type <> "Conventional")
      then "Consumer"
      else UNDEFINED
      endif
    else UNDEFINED
    endif
ENDRULE


// ---------- Water Heater Subtype is Instantaneous --------------
RULE NEW WtrHtr:InvalidProdType
  DATATYPE
    Integer
  LONGFORM
    InvalidProductType
  DESCRIPTION
    ""
  HELP
    ""
  INPUTCLASS
    NotInput
  DEFAULT
    if( LocalStatus( ProdType ) > 1 )
    then
      if( ProdType = "Large" )
      then 1
      else if(ProdType = "Small")
      then 2
      else 0
      endif endif
    else 0
    endif
ENDRULE


// -------------- Water Heater First Hour Rating for Report --------------
RULE WtrHtr:FirstHrRatingRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
//    if( IfValidAnd( IsUEFRtd = 1 ) .AND. IfValidAnd( SubType = "Storage") )
      if( IfValidAnd( UEFRtdVal > 10 ) .AND. IfValidAnd( SubType = "Storage") )
    then
      Format("FHR: %s", FltToStr( u:FirstHrRating, 1 ) ) 
    else 
      "FHR: NA"
    endif   
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// -------------- Water Heater Flow Rate for Report --------------
RULE WtrHtr:FlowRtRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
//    if( IfValidAnd( IsUEFRtd = 1 ) .AND. IfValidAnd( SubType = "Instantaneous") )
      if( IfValidAnd( UEFRtdVal > 10 ) .AND. IfValidAnd( SubType = "Instantaneous") )
    then
      Format("Flow Rt: %s", FltToStr( u:FlowRt, 1 ) ) 
    else 
      "Flow Rt: NA"
    endif   
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -------------- Heat Pump Water Heater Storage Tank Location for Report --------------
RULE WtrHtr:TankZnRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( IfValidAnd( Type <> "Conventional" ) .AND. ( IfValidAnd( Type = "HeatPumpPackaged") .OR. IfValidAnd( Type = "HeatPumpSplit") ) )
    then
      Format("Tank Zn: %s", StorZn ) 
    else 
      "Tank Zn: NA"
    endif   
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE


// -------------- Heat Pump Water Heater Storage Tank Location for Report --------------
RULE WtrHtr:CprsrZnRpt
  INPUTCLASS
    NotInput
  ANNUAL_PROPOSED
    if( IfValidAnd( Type <> "Conventional" ) .AND. IfValidAnd( Type = "HeatPumpSplit") )
    then
      Format("Cprsr Zn: %s", CprsrZn ) 
    else 
      "Cprsr Zn: NA"
    endif   
  ANNUAL_BASELINE
    UNDEFINED
ENDRULE

// add checkcode to not allow simulation of Comm Storage Ht pump water heater if ResAndCombo

// ---------- Any SHW Fluid Systems in the Building Are Existing --------------
//RULE NEW Proj:IsExistingSHWFluidSys
//  DATATYPE
//    Integer
//  LONGFORM
//    IsExistingServiceHotWaterFluidSystem
//  DESCRIPTION
//    "This is the boolean for yes(1) one SHW Fluid Systems in the building is existing
//     or no (0), none of the SHW Fluid Systems in the building are existing."
//  HELP
//    ""
//  REFERENCE 
//    ACM-5.9.1 Water Heating
//  INPUTCLASS
//    NotInput
//  DEFAULT
//    if( Proj:IsExistingSHW > 0 .OR. Proj:IsNewWtrHtrSHW > 0 ) // Remove condition for IsNewWtrHtrSHW
//    then 1
//    else 0
//    endif
//  CHECKCODE
//    if( Proj:IsNewSHWFluidSys < 1 .AND. Proj:IsExistingSHWFluidSys < 1) 
//    then
//      PostError("Project has a combination of new and existing Service Hot Water systems. 
//                 This is currently not supported. Please model the Service Hot Water systems 
//                 either as all new, or all existing or exclude them from performance analysis
//                 to prescriptively comply with code.")
//    else UNCHANGED
//    endif
//ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:MaxInletAirTempCprsrOper
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      201
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      201
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:MaxInletAirTempCprsrOper
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:FanPlcmt
  INPUTCLASS
    NotInput
  OPTION
    DrawThrough
    BlowThrough  
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      DrawThrough
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      DrawThrough
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:FanPlcmt
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:EvapFanPwrInCOP
  INPUTCLASS
    NotInput
  OPTION
    Yes
    No
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      "Yes"
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      "Yes"
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:EvapFanPwrInCOP
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:CndsrPumpPwrInCOP
  INPUTCLASS
    NotInput
  OPTION
    Yes
    No
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      "Yes"
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      "Yes"
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CndsrPumpPwrInCOP
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:CndsrPumpHtInCapAndCOP
  INPUTCLASS
    NotInput
  OPTION
    Yes
    No
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      "Yes"
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      "Yes"
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CndsrPumpHtInCapAndCOP
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:CndsrPumpHtFracToWtr
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      0.2
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      0.2
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CndsrPumpHtFracToWtr
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:CrankcaseHtrMaxT
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      50
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      50
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:CrankcaseHtrMaxT
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:Cap_fAirFlowFracCrvRef
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:Cap_fAirFlowFracCrvRef
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:Cap_fWtrFlowFracCrvRef
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:Cap_fWtrFlowFracCrvRef
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:COP_fAirFlowFracCrvRef
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COP_fAirFlowFracCrvRef
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:COP_fWtrFlowFracCrvRef
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:COP_fWtrFlowFracCrvRef
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:WtrHtrSetPtTemp
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      135
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      135
    else UNDEFINED
    endif
  ANNUAL_BASELINE
   zb:WtrHtrSetPtTemp    
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:CapRtdSupp
  INPUTCLASS
    NotInput
  REPORTPRECISION
    -3
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      CapRtdSim
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      CapRtdSim
    else UNDEFINED
    endif
  ANNUAL_BASELINE
   zb:CapRtdSupp
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:SrcFluidSegInRef
  INPUTCLASS
    NotInput
  DEFAULT
    UNDEFINED
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:SrcFluidSegOutRef
  INPUTCLASS
    NotInput
  DEFAULT
    UNDEFINED
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:FanPwr_fPLRCvRef
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvCubic, "Constant1Cubic")
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvCubic, "Constant1Cubic")
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:FanPwr_fPLRCvRef
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:FanEff_fPLRCvRef
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      RuleLibrary(CrvQuad, "Constant1Quad")
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:FanEff_fPLRCvRef
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:TankDeadBandTempHtPump
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
     5
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      5
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:TankDeadBandTempHtPump
ENDRULE


// -----------------------------------------------------------------------------
RULE WtrHtr:TankDeadBandTempInternal
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      2
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( IfValidAnd( Type <> "Conventional" ) )
    then
      2
    else UNDEFINED
    endif
  ANNUAL_BASELINE
    zb:TankDeadBandTempInternal
ENDRULE

// ------------------------------------------------------------------------------
RULE WtrHtr:EvapAirTempType
  DESCRIPTION
    ""
  OPTION
    DryBulbTemperature
    WetBulbTemperature
  DEFAULT
    if( IfValidAnd( Type = "Conventional" ) )
    then
      UNDEFINED
    else
	    if( IfValidAnd(HtPumpSubType = "R410a_MultiPass" ) )
	    then
	      WetBulbTemperature
	    else
	      DryBulbTemperature
	    endif
	  endif
  SIZING_PROPOSED
    if( FluidSysSHW = 1 )  
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        u:EvapAirTempType
      else if( Proj:SHWBothBaseline )
      then
        UNDEFINED        
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else if( FluidSysHtg = 1 )
    then
      EvapAirTempType
    else 
      UNDEFINED
    endif endif
  SIZING_BASELINE
    if( FluidSysSHW = 1 )  
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
        if ( Type <> "Conventional")
        then
          if( IfValidAnd(HtPumpSubType = "R410a_MultiPass" ) )
	        then
	          WetBulbTemperature
	        else
	          DryBulbTemperature
	        endif
	      else
	        UNDEFINED
	      endif
      else if( Proj:SHWPropOnly)
      then
        EvapAirTempType
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else if( FluidSysHtg = 1 )
    then
      if ( Status = "Existing" )
      then
        EvapAirTempType
      else
        UNDEFINED
      endif
    else UNDEFINED
    endif endif
  ANNUAL_PROPOSED
    zp:EvapAirTempType
  ANNUAL_BASELINE
    zb:EvapAirTempType
ENDRULE