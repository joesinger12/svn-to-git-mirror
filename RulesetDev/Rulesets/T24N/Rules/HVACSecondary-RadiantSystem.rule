// TerminalUnit - Active (Chilled) Beams
//
// -------------------------------------------------------------------------
//  Copyright (c) 2016-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  

// ********** Determine which surfaces can be assigned to a radiant system ******************************
RULE NEW Spc:HasRadSys
  DATATYPE
    Integer
  LONGFORM
    HasRadiantSystem
  DESCRIPTION
    "Whether the space has a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(ThrmlZnRef:PriAirCondgSysRef[1]:Type = "Radiant") .OR. IfValidAnd(ThrmlZnRef:PriAirCondgSysRef[2]:Type= "Radiant") )
    then 1
    else 0
    endif
ENDRULE
    
RULE NEW Roof:CanHaveRadSys
  DATATYPE
    Integer
  LONGFORM
    CanHaveRadiantSystem
  DESCRIPTION
    "Whether the roof can be assigned to a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(Spc:HasRadSys > 0) )
    then 1
    else 0
    endif
  CHECKSIM
    if( LocalCompAssigned( RadSysRef ) == 0 ) 
    then  UNCHANGED
    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef )
      then UNCHANGED
      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
                     , Name, RadSysRef)
    endif endif
ENDRULE

RULE NEW Ceiling:CanHaveRadSys
  DATATYPE
    Integer
  LONGFORM
    CanHaveRadiantSystem
  DESCRIPTION
    "Whether the ceiling can be assigned to a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(Spc:HasRadSys > 0) .OR. IfValidAnd(AdjacentSpcRef:HasRadSys > 0) )
    then 1
    else 0
    endif
  CHECKSIM
    if( LocalCompAssigned( RadSysRef ) == 0 ) 
    then  UNCHANGED
    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef .OR. IfValidAnd(AdjacentSpcRef:ThrmlZnRef = RadSysRef:CtrlZnRef))
      then UNCHANGED
      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
                     , Name, RadSysRef)
    endif endif
ENDRULE

RULE NEW ExtWall:CanHaveRadSys
  DATATYPE
    Integer
  LONGFORM
    CanHaveRadiantSystem
  DESCRIPTION
    "Whether the wall can be assigned to a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(Spc:HasRadSys > 0) )
    then 1
    else 0
    endif
  CHECKSIM
    if( LocalCompAssigned( RadSysRef ) == 0 ) 
    then  UNCHANGED
    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef )
      then UNCHANGED
      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
                     , Name, RadSysRef)
    endif endif
ENDRULE

;RULE NEW IntWall:CanHaveRadSys
;  DATATYPE
;    Integer
;  LONGFORM
;    CanHaveRadiantSystem
;  DESCRIPTION
;    "Whether the wall can be assigned to a radiant system"
;  INPUTCLASS
;    NotInput
;  DEFAULT
;    if( IfValidAnd(Spc:HasRadSys > 0) .OR. IfValidAnd(AdjacentSpcRef:HasRadSys > 0) )
;    then 1
;    else 0
;    endif
;  CHECKSIM
;    if( LocalCompAssigned( RadSysRef ) == 0 ) 
;    then  UNCHANGED
;    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef .OR. IfValidAnd(AdjacentSpcRef:ThrmlZnRef = RadSysRef:CtrlZnRef))
;      then UNCHANGED
;      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
;                     , Name, RadSysRef)
;    endif endif
;ENDRULE

; RULE NEW UndgrWall:CanHaveRadSys
;  DATATYPE
;    Integer
;  LONGFORM
;    CanHaveRadiantSystem
;  DESCRIPTION
;    "Whether the wall can be assigned to a radiant system"
;  INPUTCLASS
;    NotInput
;   DEFAULT
;     if( IfValidAnd(Spc:HasRadSys > 0) )
;     then 1
;     else 0
;     endif
;   CHECKSIM
;     if( LocalCompAssigned( RadSysRef ) == 0 ) 
;     then  UNCHANGED
;     else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef )
;       then UNCHANGED
;       else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
;                      , Name, RadSysRef)
;     endif endif
; ENDRULE

RULE NEW ExtFlr:CanHaveRadSys
  DATATYPE
    Integer
  LONGFORM
    CanHaveRadiantSystem
  DESCRIPTION
    "Whether the floor can be assigned to a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(Spc:HasRadSys > 0) )
    then 1
    else 0
    endif
  CHECKSIM
    if( LocalCompAssigned( RadSysRef ) == 0 ) 
    then  UNCHANGED
    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef )
      then UNCHANGED
      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
                     , Name, RadSysRef)
    endif endif
ENDRULE

RULE NEW IntFlr:CanHaveRadSys
  DATATYPE
    Integer
  LONGFORM
    CanHaveRadiantSystem
  DESCRIPTION
    "Whether the floor can be assigned to a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(Spc:HasRadSys > 0) .OR. IfValidAnd(AdjacentSpcRef:HasRadSys > 0) )
    then 1
    else 0
    endif
  CHECKSIM
    if( LocalCompAssigned( RadSysRef ) == 0 ) 
    then  UNCHANGED
    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef .OR. IfValidAnd(AdjacentSpcRef:ThrmlZnRef = RadSysRef:CtrlZnRef))
      then UNCHANGED
      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
                     , Name, RadSysRef)
    endif endif
ENDRULE    
    
RULE NEW UndgrFlr:CanHaveRadSys
  DATATYPE
    Integer
  LONGFORM
    CanHaveRadiantSystem
  DESCRIPTION
    "Whether the floor can be assigned to a radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(Spc:HasRadSys > 0) )
    then 1
    else 0
    endif
  CHECKSIM
    if( LocalCompAssigned( RadSysRef ) == 0 ) 
    then  UNCHANGED
    else if ( RadSysRef:CtrlZnRef = Spc:ThrmlZnRef )
      then UNCHANGED
      else PostError("Surface '%s' is not in the space served by the radiant system '%s'"
                     , Name, RadSysRef)
    endif endif
ENDRULE

// ********** Surface Checks ******************************

RULE NEW ZnSys:RadSysInOnRoof
  DATATYPE
    Integer
  DESCRIPTION
    "Radiant system is in/on roof surface"
  DEFAULT
    if( SumRevRef( Roof:RadSysRef, Roof:Area ) > 0 )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ZnSys:RadSysInOnCeiling
  DATATYPE
    Integer
  DESCRIPTION
    "Radiant system is in/on ceiling surface"
  DEFAULT
    if( SumRevRef( Ceiling:RadSysRef, Ceiling:Area ) > 0 )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ZnSys:RadSysInOnIntFlr
  DATATYPE
    Integer
  DESCRIPTION
    "Radiant system is in/on interior floor surface"
  DEFAULT
    if( SumRevRef( IntFlr:RadSysRef, IntFlr:Area ) > 0 )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ZnSys:RadSysInOnExtFlr
  DATATYPE
    Integer
  DESCRIPTION
    "Radiant system is in/on exterior floor surface"
  DEFAULT
    if( SumRevRef( ExtFlr:RadSysRef, ExtFlr:Area ) > 0 )
    then 1
    else 0
    endif
ENDRULE

RULE NEW ZnSys:RadSysInOnUndgrFlr
  DATATYPE
    Integer
  DESCRIPTION
    "Radiant system is in/on underground floor surface"
  DEFAULT
    if( SumRevRef( UndgrFlr:RadSysRef, UndgrFlr:Area ) > 0 )
    then 1
    else 0
    endif
ENDRULE

;RULE NEW ZnSys:RadSysInOnIntWall
;  DATATYPE
;    Integer
;  DESCRIPTION
;    "Radiant system is in/on interior wall surface"
;  DEFAULT
;    if( SumRevRef( IntWall:RadSysRef, IntWall:Area ) > 0 )
;    then 1
;    else 0
;    endif
;ENDRULE

RULE NEW ZnSys:RadSysInOnExtWall
  DATATYPE
    Integer
  DESCRIPTION
    "Radiant system is in/on exterior wall surface"
  DEFAULT
    if( SumRevRef( ExtWall:RadSysRef, ExtWall:Area ) > 0 )
    then 1
    else 0
    endif
ENDRULE

;RULE NEW ZnSys:RadSysInOnUndgrWall
;  DATATYPE
;    Integer
;  DESCRIPTION
;    "Radiant system is in/on underground wall surface"
;  DEFAULT
;    if( SumRevRef( UndgrWall:RadSysRef, UndgrWall:Area ) > 0 )
;    then 1
;    else 0
;    endif
;ENDRULE

RULE NEW ZnSys:RadSysInOnNumSurfType
  DATATYPE
    Integer
  LONGFORM
    RadiantSystemInOnNumberOfSurfaceTypes
  DESCRIPTION
    "Radiant system is in/on how many different type of surface"
  INPUTCLASS
    NotInput
  CHECKSIM
    if( RadSysInOnNumSurfType > 1 ) 
    then PostError("Radiant system '%s' is connected multiple types of building surface. This is currently not supported", Name)
    else  UNCHANGED 
    endif
  DEFAULT
    RadSysInOnRoof + RadSysInOnCeiling + RadSysInOnIntFlr + RadSysInOnExtFlr + RadSysInOnUndgrFlr + RadSysInOnExtWall ;+ RadSysInOnIntWall + RadSysInOnUndgrWall
ENDRULE

RULE NEW ZnSys:RadSurfArea
  DATATYPE
    Float
  LONGFORM
    RadiantSurfaceArea
  DESCRIPTION
    "Sum of area of all the surface served by the system"
  INPUTCLASS
    NotInput
  CHECKSIM
    if( RadSurfArea = 0 .AND. (SumRevRef( ThrmlZn:PriAirCondgSysRef[1], ThrmlZn:FlrArea ) + SumRevRef( ThrmlZn:PriAirCondgSysRef[2], ThrmlZn:FlrArea ) > 0)) 
    then  PostError("Radiant system '%s' is not connect to any building surface. Please select '%s' in one or more surface input screen"
                     , Name, Name)
    else  UNCHANGED 
    endif
  DEFAULT
    if( Type = "Radiant" )
    then
      SumRevRef( Roof:RadSysRef, Roof:Area ) + SumRevRef( Ceiling:RadSysRef, Ceiling:Area ) +  SumRevRef( IntFlr:RadSysRef, IntFlr:Area ) 
      + SumRevRef( ExtFlr:RadSysRef, ExtFlr:Area ) + SumRevRef( UndgrFlr:RadSysRef, UndgrFlr:Area ) + SumRevRef( ExtWall:RadSysRef, ExtWall:Area )
;     + SumRevRef( IntWall:RadSysRef, IntWall:Area ) + SumRevRef( UndgrWall:RadSysRef, UndgrWall:Area )
    else
      UNDEFINED
    endif
ENDRULE

// ********** Create the radiant surface list ******************************

RULE NEW ZnSys:RadRoofList
  DATATYPE
    String
  LONGFORM
    RadiantRoofList
  DESCRIPTION
    "A string that lists the names of roof surface served by the local radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumRevRef( Roof:RadSysRef, Roof:Area ) > 0 )
    then ListRevRef( Roof:RadSysRef, "%s", "\n%s", "\n%s", Roof:Name )
    else ""
    endif
ENDRULE

RULE NEW ZnSys:RadCeilingList
  DATATYPE
    String
  LONGFORM
    RadiantCeilingList
  DESCRIPTION
    "A string that lists the names of ceiling surface served by the local radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumRevRef(Ceiling:RadSysRef, Ceiling:Area ) > 0 )
    then ListRevRef( Ceiling:RadSysRef, "%s", "\n%s", "\n%s", Ceiling:Name )
    else ""
    endif
ENDRULE

 RULE NEW ZnSys:RadExtWallList
   DATATYPE
     String
   LONGFORM
     RadiantExteriorWallList
   DESCRIPTION
     "A string that lists the names of exterior wall surface served by the local radiant system"
   INPUTCLASS
     NotInput
   DEFAULT
     if( SumRevRef(ExtWall:RadSysRef, ExtWall:Area ) > 0 )
     then ListRevRef( ExtWall:RadSysRef, "%s", "\n%s", "\n%s", ExtWall:Name )
     else ""
     endif
 ENDRULE
   
;  RULE NEW ZnSys:RadIntWallList
;   DATATYPE
;     String
;   LONGFORM
;     RadiantInteriorWallList
;   DESCRIPTION
;     "A string that lists the names of interior wall surface served by the local radiant system"
;   INPUTCLASS
;     NotInput
;   DEFAULT
;     if( SumRevRef( IntWall:RadSysRef, IntWall:Area ) > 0 )
;     then ListRevRef( IntWall:RadSysRef, "%s", "\n%s", "\n%s", IntWall:Name )
;     else ""
;     endif
; ENDRULE
  
; RULE NEW ZnSys:RadUndgrWallList
;   DATATYPE
;     String
;   LONGFORM
;     RadiantUndergroundWallList
;   DESCRIPTION
;     "A string that lists the names of underground wall surface served by the local radiant system"
;   INPUTCLASS
;     NotInput
;   DEFAULT
;     if( SumRevRef( UndgrWall:RadSysRef, UndgrWall:Area ) > 0 )
;     then ListRevRef( UndgrWall:RadSysRef, "%s", "\n%s", "\n%s", UndgrWall:Name )
;     else ""
;     endif
; ENDRULE

RULE NEW ZnSys:RadExtFlrList
  DATATYPE
    String
  LONGFORM
    RadiantExteriorFloorList
  DESCRIPTION
    "A string that lists the names of exterior floor surface served by the local radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumRevRef( ExtFlr:RadSysRef, ExtFlr:Area ) > 0 )
    then ListRevRef( ExtFlr:RadSysRef, "%s", "\n%s", "\n%s", ExtFlr:Name )
    else ""
    endif
ENDRULE

RULE NEW ZnSys:RadIntFlrList
  DATATYPE
    String
  LONGFORM
    RadiantInteriorFloorList
  DESCRIPTION
    "A string that lists the names of interior floor surface served by the local radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumRevRef( IntFlr:RadSysRef, IntFlr:Area ) > 0 )
    then ListRevRef( IntFlr:RadSysRef, "%s", "\n%s", "\n%s", IntFlr:Name )
    else ""
    endif
ENDRULE

RULE NEW ZnSys:RadUndgrFlrList
  DATATYPE
    String
  LONGFORM
    RadiantUndergroundFloorList
  DESCRIPTION
    "A string that lists the names of underground floor surface served by the local radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( SumRevRef( UndgrFlr:RadSysRef, UndgrFlr:Area ) > 0 )
    then ListRevRef( UndgrFlr:RadSysRef, "%s", "\n%s", "\n%s", UndgrFlr:Name )
    else ""
    endif
ENDRULE

RULE ZnSys:RadSysSurfList
  DESCRIPTION
    "A string that lists the names of surface served by the local radiant system"
  DEFAULT
    RadRoofList + RadCeilingList + RadExtWallList + RadExtFlrList + RadIntFlrList + RadUndgrFlrList ; + RadIntWallList + RadUndgrWallList
ENDRULE

// ********** Radiant System Properties ******************************

RULE ZnSys:RadSysTubeLen
  DEFAULT
    if( Type = "Radiant" )
    then RadSurfArea/0.5
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysTubeDiaIn
  DEFAULT
    if( Type = "Radiant" )
    then 0.5
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysTempCtrlType
  OPTION
    MeanAirTemperature
    MeanRadiantTemperature
    OperativeTemperature
    OutdoorDryBulbTemperature
    OutdoorWetBulbTemperature
    SurfaceFaceTemperature
    SurfaceInteriorTemperature
  DEFAULT
    if( Type = "Radiant" )
    then "MeanAirTemperature"
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysSetptCtrlType
  OPTION
    ZeroFlowPower
    HalfFlowPower
  DEFAULT
    if( Type = "Radiant" )
    then "HalfFlowPower"
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysCondCtrlType
  OPTION
    Off
    SimpleOff
    VariableOff
  DEFAULT
    if( Type = "Radiant" )
    then "SimpleOff"
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysCondCtrlOffset
  DEFAULT
    if( Type = "Radiant" )
    then 9/5
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysCircuitLen
  DEFAULT
    if( Type = "Radiant" )
    then 0
    else UNDEFINED
    endif
ENDRULE

RULE ZnSys:RadSysIsClgHtg
  DEFAULT
    if( Type = "Radiant" .AND. 
        ClgCap > 0 .AND. 
        HtgCap > 0 )
    then 1
    else 0
    endif
ENDRULE

RULE ZnSys:RadSysChangeOverPeriod
  HELP
    "This field defines a time in hours that is required before this radiant system can switch between either heating or cooling and the opposite conditioning mode."
  DEFAULT
    if( RadSysIsClgHtg > 0 )
    then 0.5
    else UNDEFINED
    endif
ENDRULE

// ********** Radiant Surfaces Properties ******************************

RULE Roof:SrcAftConsAssmLrNum
  DESCRIPTION
    "Source Present After Construction Layer Number"
  HELP
    "Source present After Construction Layer Number = second to the last layer by default"
  MINIMUM
    1
  MAXIMUM
    ConsAssmRef:NumMats
  CHECKSIM
    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
                     , Name, ConsAssmRef:NumMats)
    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
          then  UNCHANGED
          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
                     , Name, ConsAssmRef:NumMats)
    endif endif
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
         then ConsAssmRef:NumMats - 1 ; embedded
         else ConsAssmRef:NumMats ; panel
         endif
    endif
ENDRULE

RULE Roof:TempCalcAftConsAssmLrNum
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  SIZING_PROPOSED
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else SrcAftConsAssmLrNum
    endif
ENDRULE

RULE Roof:CTFCalcDim
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 1
    endif
ENDRULE

RULE Roof:TubeSpacing
  DESCRIPTION
    "the distance between adjacent hydronic tubes"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 0.5
    endif
ENDRULE

RULE Ceiling:SrcAftConsAssmLrNum
  DESCRIPTION
    "Source Present After Construction Layer Number"
  HELP
    "Source present After Construction Layer Number = second to the last layer by default"
  MINIMUM
    1
  MAXIMUM
    ConsAssmRef:NumMats
  CHECKSIM
    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
                     , Name, ConsAssmRef:NumMats)
    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
          then  UNCHANGED
          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
                     , Name, ConsAssmRef:NumMats)
    endif endif
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
         then ConsAssmRef:NumMats - 1 ; embedded
         else ConsAssmRef:NumMats ; panel
         endif
    endif
ENDRULE

RULE Ceiling:TempCalcAftConsAssmLrNum
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  SIZING_PROPOSED
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else SrcAftConsAssmLrNum
    endif
ENDRULE

RULE Ceiling:CTFCalcDim
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 1
    endif
ENDRULE

RULE Ceiling:TubeSpacing
  DESCRIPTION
    "the distance between adjacent hydronic tubes"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 0.5
    endif
ENDRULE

  RULE ExtWall:SrcAftConsAssmLrNum
    DESCRIPTION
      "Source Present After Construction Layer Number"
    HELP
      "Source present After Construction Layer Number = second to the last layer by default"
  MINIMUM
    1
  MAXIMUM
    ConsAssmRef:NumMats
  CHECKSIM
    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
                     , Name, ConsAssmRef:NumMats)
    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
          then  UNCHANGED
          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
                     , Name, ConsAssmRef:NumMats)
    endif endif
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
         then ConsAssmRef:NumMats - 1 ; embedded
         else ConsAssmRef:NumMats ; panel
         endif
    endif
  ENDRULE
  
  RULE ExtWall:TempCalcAftConsAssmLrNum
    DESCRIPTION
      "Temperature Calculation Requested After Layer Number"
    SIZING_PROPOSED
      if( LocalCompAssigned( RadSysRef ) = 0 )
      then UNDEFINED
      else SrcAftConsAssmLrNum
      endif
  ENDRULE
  
  RULE ExtWall:CTFCalcDim
    DESCRIPTION
      "Temperature Calculation Requested After Layer Number"
    DEFAULT
      if( LocalCompAssigned( RadSysRef ) = 0 )
      then UNDEFINED
      else 1
      endif
  ENDRULE
  
  RULE ExtWall:TubeSpacing
    DESCRIPTION
      "the distance between adjacent hydronic tubes"
    DEFAULT
      if( LocalCompAssigned( RadSysRef ) = 0 )
      then UNDEFINED
      else 0.5
      endif
  ENDRULE

; RULE IntWall:SrcAftConsAssmLrNum
;   DESCRIPTION
;     "Source Present After Construction Layer Number"
;   HELP
;     "Source present After Construction Layer Number = second to the last layer by default"
;  MINIMUM
;    1
;  MAXIMUM
;    ConsAssmRef:NumMats
;  CHECKSIM
;    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
;    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
;                     , Name, ConsAssmRef:NumMats)
;    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
;          then  UNCHANGED
;          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
;                     , Name, ConsAssmRef:NumMats)
;    endif endif
;  DEFAULT
;    if( LocalCompAssigned( RadSysRef ) = 0 )
;    then UNDEFINED
;    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
;         then ConsAssmRef:NumMats - 1 ; embedded
;         else ConsAssmRef:NumMats ; panel
;         endif
;    endif
; ENDRULE
 
; RULE IntWall:TempCalcAftConsAssmLrNum
;   DESCRIPTION
;     "Temperature Calculation Requested After Layer Number"
;   SIZING_PROPOSED
;     if( LocalCompAssigned( RadSysRef ) = 0 )
;     then UNDEFINED
;     else SrcAftConsAssmLrNum
;     endif
; ENDRULE
 
; RULE IntWall:CTFCalcDim
;   DESCRIPTION
;     "Temperature Calculation Requested After Layer Number"
;   DEFAULT
;     if( LocalCompAssigned( RadSysRef ) = 0 )
;     then UNDEFINED
;     else 1
;     endif
; ENDRULE
 
; RULE IntWall:TubeSpacing
;   DESCRIPTION
;     "the distance between adjacent hydronic tubes"
;   DEFAULT
;     if( LocalCompAssigned( RadSysRef ) = 0 )
;     then UNDEFINED
;     else 0.5
;     endif
; ENDRULE

; RULE UndgrWall:SrcAftConsAssmLrNum
;   DESCRIPTION
;     "Source Present After Construction Layer Number"
;   HELP
;     "Source present After Construction Layer Number = second to the last layer by default"
;  MINIMUM
;    1
;  MAXIMUM
;    ConsAssmRef:NumMats
;  CHECKSIM
;    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
;    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
;                     , Name, ConsAssmRef:NumMats)
;    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
;          then  UNCHANGED
;          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
;                     , Name, ConsAssmRef:NumMats)
;    endif endif
;  DEFAULT
;    if( LocalCompAssigned( RadSysRef ) = 0 )
;    then UNDEFINED
;    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
;         then ConsAssmRef:NumMats - 1 ; embedded
;         else ConsAssmRef:NumMats ; panel
;         endif
;    endif
; ENDRULE
; 
; RULE UndgrWall:TempCalcAftConsAssmLrNum
;   DESCRIPTION
;     "Temperature Calculation Requested After Layer Number"
;   SIZING_PROPOSED
;     if( LocalCompAssigned( RadSysRef ) = 0 )
;     then UNDEFINED
;     else SrcAftConsAssmLrNum
;     endif
; ENDRULE
; 
; RULE UndgrWall:CTFCalcDim
;   DESCRIPTION
;     "Temperature Calculation Requested After Layer Number"
;   DEFAULT
;     if( LocalCompAssigned( RadSysRef ) = 0 )
;     then UNDEFINED
;     else 1
;     endif
; ENDRULE
; 
; RULE UndgrWall:TubeSpacing
;   DESCRIPTION
;     "the distance between adjacent hydronic tubes"
;   DEFAULT
;     if( LocalCompAssigned( RadSysRef ) = 0 )
;     then UNDEFINED
;     else 0.5
;     endif
; ENDRULE

RULE ExtFlr:SrcAftConsAssmLrNum
  DESCRIPTION
    "Source Present After Construction Layer Number"
  HELP
    "Source present After Construction Layer Number = second to the last layer by default"
  MINIMUM
    1
  MAXIMUM
    ConsAssmRef:NumMats
  CHECKSIM
    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
                     , Name, ConsAssmRef:NumMats)
    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
          then  UNCHANGED
          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
                     , Name, ConsAssmRef:NumMats)
    endif endif
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
         then ConsAssmRef:NumMats - 1 ; embedded
         else ConsAssmRef:NumMats ; panel
         endif
    endif
ENDRULE

RULE ExtFlr:TempCalcAftConsAssmLrNum
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  SIZING_PROPOSED
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else SrcAftConsAssmLrNum
    endif
ENDRULE

RULE ExtFlr:CTFCalcDim
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 1
    endif
ENDRULE

RULE ExtFlr:TubeSpacing
  DESCRIPTION
    "the distance between adjacent hydronic tubes"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 0.5
    endif
ENDRULE

RULE NEW IntFlr:HasRadSysPanel
  DATATYPE
    Integer
  LONGFORM
    HasRadiantSystemPanel
  DESCEIPTION
    "Check if the surface has panel radiant system"
  INPUTCLASS
    NotInput
  DEFAULT
    if( IfValidAnd(RadSysRef:SubType = "Panel" ))
    then 1
    else UNDEFINED
    endif
ENDRULE

RULE IntFlr:SrcAftConsAssmLrNum
  DESCRIPTION
    "Source Present After Construction Layer Number"
  HELP
    "Source present After Construction Layer Number = second to the last layer by default"
  MINIMUM
    1
  MAXIMUM
    ConsAssmRef:NumMats
  CHECKSIM
    if( IfValidAnd(SrcAftConsAssmLrNum > ConsAssmRef:NumMats )) 
    then  PostError("The construction assembly for '%s' only has '%.0f' layers. Please revise the Source Present After Construction Layer Number to a smaller value"
                     , Name, ConsAssmRef:NumMats)
    else  if( LocalCompAssigned( RadSysRef ) = 0  .OR. ConsAssmRef:NumMats > 1)
          then  UNCHANGED
          else  PostError("The construction assembly for '%s' only has '%.0f' layers. OpenStudio cannot create construction for radiant system with fewer than 2 layers"
                     , Name, ConsAssmRef:NumMats)
    endif endif
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
         then ConsAssmRef:NumMats - 1 ; embedded
         else ConsAssmRef:NumMats ; panel
         endif
    endif
ENDRULE

RULE IntFlr:TempCalcAftConsAssmLrNum
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  SIZING_PROPOSED
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else SrcAftConsAssmLrNum
    endif
ENDRULE

RULE IntFlr:CTFCalcDim
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 1
    endif
ENDRULE

RULE IntFlr:TubeSpacing
  DESCRIPTION
    "the distance between adjacent hydronic tubes"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 0.5
    endif
ENDRULE

RULE UndgrFlr:SrcAftConsAssmLrNum
  DESCRIPTION
    "Source Present After Construction Layer Number"
  HELP
    "Source present After Construction Layer Number = second to the last layer by default"
  MINIMUM
    1
  MAXIMUM
    3
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else if( IfValidAnd( RadSysRef:SubType = "Embedded" ))
         then 1 ; embedded
         else 2 ; panel
         endif
    endif
ENDRULE

RULE UndgrFlr:TempCalcAftConsAssmLrNum
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else SrcAftConsAssmLrNum
    endif
ENDRULE

RULE UndgrFlr:CTFCalcDim
  DESCRIPTION
    "Temperature Calculation Requested After Layer Number"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 1
    endif
ENDRULE

RULE UndgrFlr:TubeSpacing
  DESCRIPTION
    "the distance between adjacent hydronic tubes"
  DEFAULT
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then UNDEFINED
    else 0.5
    endif
ENDRULE

// ********** Setup underground floor ******************************

RULE UndgrFlr:ConsAssmRef
  CHECKCODE
    if( LocalCompAssigned( RadSysRef ) = 0 .AND. (ConsAssmRef:SlabType = "HeatedSlabOnGrade" .OR. ConsAssmRef:SlabType = "HeatedSlabBelowGrade"))
    then PostError("Floor '%s' is not heated but is using heated slab construction '%s', please use the correct slab type", UndgrFlr:Name, ConsAssmRef:Name) 
    else if ( LocalCompAssigned( RadSysRef ) .AND. (ConsAssmRef:SlabType = "UnheatedSlabOnGrade" .OR. ConsAssmRef:SlabType = "UnheatedSlabBelowGrade"))
         then PostError("Floor '%s' is heated but is using Unheated slab construction '%s', please use the correct slab type", UndgrFlr:Name, ConsAssmRef:Name) 
         else UNCHANGED
    endif endif
ENDRULE

RULE NEW UndgrFlr:MthodUsed
  DATATYPE
    Integer
  LONGFORM
    MethodUsed
  DESCRIPTION
    "Method used to simulate heated slab"
  INPUTCLASS
    NotInput
  DEFAULT
  1  ; "FfactorMethod"
;  2 ; "LayerByLayerMethod"
ENDRULE

RULE UndgrFlr:OutsdBndryCond
  DESCRIPTION
    "Outside boundary condition in E+"
  OPTION
    GroundFCfactorMethod
    Ground
    Adiabatic
  SIZING_PROPOSED
    if( LocalCompAssigned( RadSysRef ) = 0 )
    then "GroundFCfactorMethod"
    else if(MthodUsed = 1)
         then "Adiabatic"
         else "Ground"
         endif
    endif
ENDRULE


// ********** Setup underground wall ******************************

;  RULE UndgrWall:OutsdBndryCond
;    DESCRIPTION
;      "Outside boundary condition in E+"
;    OPTION
;      GroundFCfactorMethod
;      Ground
;    DEFAULT
;      if( LocalCompAssigned( RadSysRef ) = 0 )
;      then "GroundFCfactorMethod"
;      else "Ground"
;      endif
;  ENDRULE



