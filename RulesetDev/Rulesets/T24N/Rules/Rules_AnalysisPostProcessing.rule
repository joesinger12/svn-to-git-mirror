// Rules to be processed following all transform simulations and compliance determination
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2019, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//


; SAC 4/20/19 - new rulelist to perform any checks/adjustments after all transforms have been simulated and compliance result determined
;*************************************************************************
RULELIST "AnalysisPostProcessing" 1 0 0 0
;*************************************************************************

   "Evaluate rules to set EUseSummary:PVBattResultsValid flag"    Proj:Action =     ; SAC 9/13/19 (tic #3106)
      {  if (IfValidAnd( EngyCodeYearNum < 2019 )) then  UNCHANGED
         else  EvalRulelist( "SetUserDefined_PVBattResultsValid" )  endif  }

   "Evaluate rules to set EUseSummary:DHW_SSF_Summary[*]"   EUseSummary:Action =    ; SAC 9/17/20 (tic #3215)
      {  if (IfValidAnd( PropDHW_SSF[1] > 0 ) .OR.
             IfValidAnd( StdDHW_SSF     > 0 ))
         then  EvalRulelist( "SetUserDefined_DHW_SSF_Summary" )
         else  UNCHANGED  endif  }

   "Evaluate rules to determine CALGreen result"   Proj:Action = 
      {  EvalRulelist( "CALGreen_Results" )  }

END
;*************************************************************************

;************************************************************************* ; SAC 9/13/19 (tic #3106)
RULELIST "SetUserDefined_PVBattResultsValid" 1 0 1 0
   "Set EUseSummary:PVBattResultsValid"      EUseSummary:PVBattResultsValid =
      {  if (IfValidAnd( Proj:HavePVBattSim > 0 )) then  1  else  0  endif  }
END
;*************************************************************************

;*************************************************************************   SAC 9/17/20 - ported from Res: CARes_ReportDHWSSF (tic #3215)
RULELIST "SetUserDefined_DHW_SSF_Summary" 1 0 1 1
   "Set EUseSummary:DHW_SSF_Summary[1]"     EUseSummary:DHW_SSF_Summary[1] = {  "DHW SSF:"  }
   "Set EUseSummary:DHW_SSF_Summary[2]"     EUseSummary:DHW_SSF_Summary[2] =
      {  if (IfValidAnd( PropDHW_SSF[1] > 0 ))
         then  Format( "%.2f Prop", PropDHW_SSF[1] )
         else if (IfValidAnd( StdDHW_SSF > 0 ))
         then  Format( "%.2f Std", StdDHW_SSF )
         else  UNDEFINED  endif endif  }
   "Set EUseSummary:DHW_SSF_Summary[3]"     EUseSummary:DHW_SSF_Summary[3] =
      {  if (IfValidAnd( PropDHW_SSF[1] > 0 ) .AND.
             IfValidAnd( StdDHW_SSF > 0 ))
         then  Format( "%.2f Std", StdDHW_SSF )
         else  UNDEFINED  endif  }
END
;*************************************************************************


ENDFILE














