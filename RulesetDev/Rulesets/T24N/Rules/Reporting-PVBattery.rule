// PVBattery - Reporting
//
// -------------------------------------------------------------------------
//  Copyright (c) 2014-2022, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------
//  

// This rule identifies which transform for which the report is currently being generated
RULE NEW Proj:XFormFlag
  DATATYPE
    Integer
  LONGFORM
    TransformFlag
  INPUTCLASS
    NotInput
  SIZING_PROPOSED
    1
  SIZING_BASELINE
    2
  ANNUAL_PROPOSED
    3
  ANNUAL_BASELINE
    4
ENDRULE

//  This rule file addresses REPORTING OF Proj, PVArray, Battery and Space properties

RULE NEW Proj:PVBattRptStr
  DATATYPE
    String
  LONGFORM
    PhotovoltaicBatteryReportString
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then WriteToFile( "PV Array & Battery Report\n,%c%s%c\n,%c%s%c\n,%c%s%c\n\n", 34, PrscrpPVBatteryMsg, 34, 34, StdPVBatteryMsg, 34, 34, UserInpPVBatteryMsg, 34 )
    else UNCHANGED
    endif
ENDRULE 

// Proj sums of areas by NRes/HRR PVBatt BldgTypes - SAC 05/02/22
RULE Proj:PrscrpPVBattBldgAreaSums[1]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Grocery" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Grocery" )
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[2]
  REPORT
    if (IfValidAnd( Proj:IsHighRiseMFam > 0 ))
    then  SumAll( ResZn:CondFlrAreaWithMult ) +
          SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Highrise Multifamily" ) +
          SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Highrise Multifamily" )
    else  SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Highrise Multifamily" ) +
          SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Highrise Multifamily" )
    endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[3]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Office, Financial, Unleased Tenant" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Office, Financial, Unleased Tenant" )
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[4]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Retail" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Retail" )
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[5]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "School" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "School" )
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[6]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Warehouse" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Warehouse" )
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[7]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "Other" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "Other" )
ENDRULE 

RULE Proj:PrscrpPVBattBldgAreaSums[9]
  REPORT
    SumAcrossIf(        Spc:PVBattSizeArea,        Spc:PVBattSizeBldgType = "none" ) +
    SumAcrossIf( ResOtherZn:PVBattSizeArea, ResOtherZn:PVBattSizeBldgType = "none" )
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaSums[10]
  REPORT
    if (IfValidAnd( Bldg:TotStoryCnt < 4 ))
    then  SumAll( ResZn:CondFlrAreaWithMult )
    else  0  endif
ENDRULE 

RULE Proj:PrscrpPVBattBldgAreaPcts[1]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[1] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[2]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[2] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[3]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[3] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[4]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[4] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[5]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[5] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[6]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[6] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[7]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[7] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[9]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[9] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 
RULE Proj:PrscrpPVBattBldgAreaPcts[10]
  REPORT
    if (SumAll( Bldg:TotCondFlrArea ) > 0)
    then  PrscrpPVBattBldgAreaSums[10] * 100 / SumAll( Bldg:TotCondFlrArea )
    else  0  endif
ENDRULE 


// col headers for Spc/ResOtherZn/ResZn table
RULE NEW Proj:PVBattRptStr
  DATATYPE
    String
  LONGFORM
    PhotovoltaicBatteryReportString
  INPUTCLASS 
    NotInput
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then WriteToFile( "Prescriptive PV/Battery Requirements:\nSpace/ResOtherZn/ResZn,,,,,,NonRes & HiRiseRes Multiplied Areas by PVBattery Bldg Type,,,,,,,,,LowRiseRes,,Prescriptive Capacities:\nName,Conditioning Type,Space Function,PV/Batt Bldg Type,Floor Area,Multiplier,Grocery,Highrise Multifamily,%cOffice, Financial, Unleased Tenant%c,Retail,School,Warehouse,Other,none,# Res Dwellings,MultArea,,PV,Batt Energy,Batt Power\n,,,,(ft2),,(ft2),(ft2),(ft2),(ft2),(ft2),(ft2),(ft2),(ft2),,(ft2),,(kWdc),(kWh),(kW)\n", 34, 34 )
    else UNCHANGED
    endif
ENDRULE 

; Name, CondgType, SpcFunc, PVBattSizeBldgType, FlrArea, Mult, PVBattSizeArea
RULE NEW Spc:PVBattRptStr
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then  switch (PVBattSizeBldgType)
            case "Grocery"                            : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,%g,,,,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Highrise Multifamily"               : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,%g,,,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Office, Financial, Unleased Tenant" : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,%g,,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Retail"                             : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,%g,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "School"                             : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,%g,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Warehouse"                          : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,,%g,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Other"                              : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,,,%g,,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            default                                   : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,,,,%g,,,,%g,%g,%g,\n", 34, Name, 34, 34, CondgType, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, FlrArea, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
          endswitch
    else UNCHANGED
    endif
ENDRULE 

; Name, Type, SpcFunc, PVBattSizeBldgType, Area, (ResZnGrp:)Mult, PVBattSizeArea
RULE NEW ResOtherZn:PVBattRptStr
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then  switch (PVBattSizeBldgType)
            case "Grocery"                            : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,%g,,,,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Highrise Multifamily"               : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,%g,,,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Office, Financial, Unleased Tenant" : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,%g,,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Retail"                             : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,%g,,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "School"                             : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,%g,,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Warehouse"                          : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,,%g,,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            case "Other"                              : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,,,%g,,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
            default                                   : WriteToFile( "%c%s%c,%c%s%c,%c%s%c,%c%s%c,%g,%g,,,,,,,,%g,,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, SpcFunc, 34, 34, PVBattSizeBldgType, 34, Area, Mult, PVBattSizeArea, T24PVSize, T24BattEngyCap, T24BattPwrCap )
          endswitch
    else UNCHANGED
    endif
ENDRULE 

; Name, Type, SpcFunc, PVBattSizeBldgType, Area, (ResZnGrp:)Mult, PVBattSizeArea, #
RULE NEW ResZn:PVBattRptStr
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then  if (IfValidAnd( Proj:IsHighRiseMFam > 0 ))
          then  WriteToFile( "%c%s%c,%c%s%c,%cHigh-Rise Residential Living Spaces%c,%cHighrise Multifamily%c,%g,%g,,%g,,,,,,,%g,,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, 34, 34, 34, 34, Area, Mult, CondFlrAreaWithMult, NumDwellingUnitsWithMult, T24PVSize, T24BattEngyCap, T24BattPwrCap )
          else  WriteToFile( "%c%s%c,%c%s%c,,,%g,%g,,,,,,,,,%g,%g,,%g,%g,%g,\n", 34, Name, 34, 34, Type, 34, Area, Mult, NumDwellingUnitsWithMult, CondFlrAreaWithMult, T24PVSize, T24BattEngyCap, T24BattPwrCap )
          endif
    else UNCHANGED
    endif
ENDRULE 

RULE NEW Proj:PVBattRptStr
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then WriteToFile( ",,,,,Sums:,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,,%g,%g,%g,\n", PrscrpPVBattBldgAreaSums[1], PrscrpPVBattBldgAreaSums[2], PrscrpPVBattBldgAreaSums[3],
                                        PrscrpPVBattBldgAreaSums[4], PrscrpPVBattBldgAreaSums[5], PrscrpPVBattBldgAreaSums[6], PrscrpPVBattBldgAreaSums[7],
                                        PrscrpPVBattBldgAreaSums[9], SumAll( ResZn:NumDwellingUnitsWithMult ), PrscrpPVBattBldgAreaSums[10],
                                        PrscrpPVSize, PrscrpBattEngyCap, PrscrpBattPwrCap )
    else UNCHANGED
    endif
ENDRULE 

RULE NEW Proj:PVBattRptStr
  REPORT
    if( Proj:RuleReportType = "ModelRpt_PVBattery" )
    then WriteToFile( ",,Bldg Cond Area:,%g,,Pcts:,%.1f,%.1f,%.1f,%.1f,%.1f,%.1f,%.1f,%.1f,,%.1f,\n", SumAll( Bldg:TotCondFlrArea ),
                                        PrscrpPVBattBldgAreaPcts[1], PrscrpPVBattBldgAreaPcts[2], PrscrpPVBattBldgAreaPcts[3],
                                        PrscrpPVBattBldgAreaPcts[4], PrscrpPVBattBldgAreaPcts[5], PrscrpPVBattBldgAreaPcts[6], PrscrpPVBattBldgAreaPcts[7],
                                        PrscrpPVBattBldgAreaPcts[9], PrscrpPVBattBldgAreaPcts[10] )
    else UNCHANGED
    endif
ENDRULE 


