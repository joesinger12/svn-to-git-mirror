// Process - NRCCPRF XML (section J*)
//
// -------------------------------------------------------------------------
//  Copyright (c) 2012-2021, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -------------------------------------------------------------------------


; nrccSection_ProcGarage nrccTableProcGarage 
RULE NEW AirSys:nrcctblRowProcGarageRef
  DATATYPE
    nrcctblRowProcGarage
  INPUTCLASS 
    Prescribed
ENDRULE
RULE NEW nrcctblRowProcGarage:noXMLoutput_AirSysRef
  DATATYPE
    AirSys
  INPUTCLASS 
    Prescribed
ENDRULE
RULE NEW ZnSys:nrcctblRowProcGarageRef
  DATATYPE
    nrcctblRowProcGarage
  INPUTCLASS 
    Prescribed
ENDRULE
RULE NEW nrcctblRowProcGarage:noXMLoutput_ZnSysRef
  DATATYPE
    ZnSys
  INPUTCLASS 
    Prescribed
ENDRULE

RULE nrcctblRowProcGarage:Parent
  ANNUAL_PROPOSED
    nrccTableProcGarage:Name
ENDRULE

RULE nrcctblRowProcGarage:ProcGarage01_ExhaustFanName
  ANNUAL_PROPOSED
    if (LocalCompAssigned(noXMLoutput_AirSysRef)) then noXMLoutput_AirSysRef:Name
    else if (LocalCompAssigned(noXMLoutput_ZnSysRef)) then noXMLoutput_ZnSysRef:Name
    else UNDEFINED
    endif endif
ENDRULE
RULE nrcctblRowProcGarage:ProcGarage02_ExhaustFlowRate
  ANNUAL_PROPOSED
    if (LocalCompAssigned(noXMLoutput_AirSysRef)) then atof( Format( "%.2f", noXMLoutput_AirSysRef:ExhFanCap ) )
    else if (LocalCompAssigned(noXMLoutput_ZnSysRef)) then atof( Format( "%.2f", noXMLoutput_ZnSysRef:ExhFanCap ) )
    else UNDEFINED
    endif endif
ENDRULE
RULE nrcctblRowProcGarage:ProcGarage03_AirFlowMinimum
  ANNUAL_PROPOSED
    if (LocalCompAssigned(noXMLoutput_AirSysRef)) then atof( Format( "%.2f", noXMLoutput_AirSysRef:ExhFlowMin ) )
    else if (LocalCompAssigned(noXMLoutput_ZnSysRef)) then atof( Format( "%.2f", noXMLoutput_ZnSysRef:ExhFlowMin ) )
    else UNDEFINED
    endif endif
ENDRULE
RULE nrcctblRowProcGarage:ProcGarage04_FanPowerModeled
  ANNUAL_PROPOSED
    if (LocalCompAssigned(noXMLoutput_AirSysRef)) then atof( Format( "%.2f", noXMLoutput_AirSysRef:ExhFanPwr ) )
    else if (LocalCompAssigned(noXMLoutput_ZnSysRef)) then atof( Format( "%.2f", noXMLoutput_ZnSysRef:ExhFanPwr ) )
    else UNDEFINED
    endif endif
ENDRULE
RULE nrcctblRowProcGarage:ProcGarage05_MonitoringCO
  ANNUAL_PROPOSED
    if (LocalCompAssigned(noXMLoutput_AirSysRef)) then if (noXMLoutput_AirSysRef:COCtrlRpt == "Yes") then "true" else "false" endif
    else if (LocalCompAssigned(noXMLoutput_ZnSysRef)) then if (noXMLoutput_ZnSysRef:COCtrlRpt == "Yes") then "true" else "false" endif
    else UNDEFINED
    endif endif
ENDRULE


; nrccSection_ProcKitch nrccTableProcKitch 
RULE NEW Spc:nrcctblRowProcKitchRef
  DATATYPE
    nrcctblRowProcKitch
  INPUTCLASS 
    Prescribed
ENDRULE
RULE NEW nrcctblRowProcKitch:noXMLoutput_SpcRef
  DATATYPE
    Spc
  INPUTCLASS 
    Prescribed
ENDRULE

RULE nrcctblRowProcKitch:Parent
  ANNUAL_PROPOSED
    nrccTableProcKitch:Name
ENDRULE

RULE nrcctblRowProcKitch:ProcKitch01_SpaceName
  ANNUAL_PROPOSED
    noXMLoutput_SpcRef:Name
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch02_KitchenExhaustHoodStyle[1]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodStyle[1] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodStyle[1])
            case "BackshelfOrPassover" : "BackshelfPassover"
            case "DoubleIsland"        : "DoubleIsland"
            case "Eyebrow"             : "Eyebrow"
            case "None"                : "None"
            case "SingleIsland"        : "SingleIsland"
            case "WallMountedCanopy"   : "WallMountedCanopy"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch02_KitchenExhaustHoodStyle[2]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodStyle[2] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodStyle[2])
            case "BackshelfOrPassover" : "BackshelfPassover"
            case "DoubleIsland"        : "DoubleIsland"
            case "Eyebrow"             : "Eyebrow"
            case "None"                : "None"
            case "SingleIsland"        : "SingleIsland"
            case "WallMountedCanopy"   : "WallMountedCanopy"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch02_KitchenExhaustHoodStyle[3]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodStyle[3] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodStyle[3])
            case "BackshelfOrPassover" : "BackshelfPassover"
            case "DoubleIsland"        : "DoubleIsland"
            case "Eyebrow"             : "Eyebrow"
            case "None"                : "None"
            case "SingleIsland"        : "SingleIsland"
            case "WallMountedCanopy"   : "WallMountedCanopy"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch02_KitchenExhaustHoodStyle[4]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodStyle[4] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodStyle[4])
            case "BackshelfOrPassover" : "BackshelfPassover"
            case "DoubleIsland"        : "DoubleIsland"
            case "Eyebrow"             : "Eyebrow"
            case "None"                : "None"
            case "SingleIsland"        : "SingleIsland"
            case "WallMountedCanopy"   : "WallMountedCanopy"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch02_KitchenExhaustHoodStyle[5]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodStyle[5] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodStyle[5])
            case "BackshelfOrPassover" : "BackshelfPassover"
            case "DoubleIsland"        : "DoubleIsland"
            case "Eyebrow"             : "Eyebrow"
            case "None"                : "None"
            case "SingleIsland"        : "SingleIsland"
            case "WallMountedCanopy"   : "WallMountedCanopy"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch03_KitchenExhaustHoodDuty[1]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodDuty[1] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodDuty[1])
            case "Light"      : "LightDuty"
            case "Medium"     : "MediumDuty"
            case "Heavy"      : "HeavyDuty"
            case "ExtraHeavy" : "ExtraHeavyDuty"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch03_KitchenExhaustHoodDuty[2]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodDuty[2] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodDuty[2])
            case "Light"      : "LightDuty"
            case "Medium"     : "MediumDuty"
            case "Heavy"      : "HeavyDuty"
            case "ExtraHeavy" : "ExtraHeavyDuty"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch03_KitchenExhaustHoodDuty[3]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodDuty[3] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodDuty[3])
            case "Light"      : "LightDuty"
            case "Medium"     : "MediumDuty"
            case "Heavy"      : "HeavyDuty"
            case "ExtraHeavy" : "ExtraHeavyDuty"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch03_KitchenExhaustHoodDuty[4]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodDuty[4] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodDuty[4])
            case "Light"      : "LightDuty"
            case "Medium"     : "MediumDuty"
            case "Heavy"      : "HeavyDuty"
            case "ExtraHeavy" : "ExtraHeavyDuty"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch03_KitchenExhaustHoodDuty[5]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodDuty[5] ) > 0) 
    then
        switch (noXMLoutput_SpcRef:KitExhHoodDuty[5])
            case "Light"      : "LightDuty"
            case "Medium"     : "MediumDuty"
            case "Heavy"      : "HeavyDuty"
            case "ExtraHeavy" : "ExtraHeavyDuty"
            default :  UNDEFINED
        endswitch
    else  UNDEFINED  endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch04_KitchenExhaustHoodLength[1]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodLen[1] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodLen[1] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch04_KitchenExhaustHoodLength[2]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodLen[2] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodLen[2] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch04_KitchenExhaustHoodLength[3]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodLen[3] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodLen[3] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch04_KitchenExhaustHoodLength[4]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodLen[4] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodLen[4] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch04_KitchenExhaustHoodLength[5]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodLen[5] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodLen[5] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch05_KitchenExhaustHoodFlow[1]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodFlow[1] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodFlow[1] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch05_KitchenExhaustHoodFlow[2]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodFlow[2] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodFlow[2] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch05_KitchenExhaustHoodFlow[3]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodFlow[3] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodFlow[3] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch05_KitchenExhaustHoodFlow[4]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodFlow[4] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodFlow[4] ) )
    else UNDEFINED endif
ENDRULE
RULE nrcctblRowProcKitch:ProcKitch05_KitchenExhaustHoodFlow[5]
  ANNUAL_PROPOSED
    if (LocalStatus( noXMLoutput_SpcRef:KitExhHoodFlow[5] ) > 0) 
    then atof( Format( "%.2f", noXMLoutput_SpcRef:KitExhHoodFlow[5] ) )
    else UNDEFINED endif
ENDRULE


; nrccSection_ProcComp nrccTableProcComp 
RULE NEW AirSys:nrcctblRowProcCompRef
  DATATYPE
    nrcctblRowProcComp
  INPUTCLASS 
    Prescribed
ENDRULE
RULE NEW nrcctblRowProcComp:noXMLoutput_AirSysRef
  DATATYPE
    AirSys
  INPUTCLASS 
    Prescribed
ENDRULE

RULE nrcctblRowProcComp:Parent
  ANNUAL_PROPOSED
    nrccTableProcComp:Name
ENDRULE

RULE nrcctblRowProcComp:ProcComp01_HvacSystemName
  ANNUAL_PROPOSED
    noXMLoutput_AirSysRef:Name
ENDRULE
RULE nrcctblRowProcComp:ProcComp02_CoolingTonCapacity
  ANNUAL_PROPOSED
    if (noXMLoutput_AirSysRef:SubType == "CRAC")
    then atof( Format( "%.2f", noXMLoutput_AirSysRef:SupAirSegRef:CoilClgRef:CapTotNetRtd ) )
    else if (noXMLoutput_AirSysRef:SubType == "CRAH")
    then atof( Format( "%.2f", noXMLoutput_AirSysRef:SupAirSegRef:CoilClgRef:CapTotGrossRtd ) )
    else UNDEFINED endif endif
ENDRULE
RULE nrcctblRowProcComp:ProcComp03_EconomizerControlMethod
  ANNUAL_PROPOSED
    noXMLoutput_AirSysRef:EconoTypeRpt
ENDRULE
RULE nrcctblRowProcComp:ProcComp04_FanPowerModeled
  ANNUAL_PROPOSED
    atof( Format( "%.2f", noXMLoutput_AirSysRef:SupFanPwr ) )
ENDRULE


; nrccSection_ProcLab nrccTableProcLab 
RULE NEW Spc:nrcctblRowProcLabRef
  DATATYPE
    nrcctblRowProcLab
  INPUTCLASS 
    Prescribed
ENDRULE
RULE NEW nrcctblRowProcLab:noXMLoutput_SpcRef
  DATATYPE
    Spc
  INPUTCLASS 
    Prescribed
ENDRULE

RULE nrcctblRowProcLab:Parent
  ANNUAL_PROPOSED
    nrccTableProcLab:Name
ENDRULE

RULE nrcctblRowProcLab:ProcLab01_SpaceName
  ANNUAL_PROPOSED
    noXMLoutput_SpcRef:Name
ENDRULE
RULE nrcctblRowProcLab:ProcLab02_ExhaustFlowRate
  ANNUAL_PROPOSED
    atof( Format( "%.2f", noXMLoutput_SpcRef:ExhFlow ) )
ENDRULE
RULE nrcctblRowProcLab:ProcLab03_AirFlowMinimum
  ANNUAL_PROPOSED
    atof( Format( "%.2f", noXMLoutput_SpcRef:PropMinExhFlow ) )
ENDRULE
RULE nrcctblRowProcLab:ProcLab04_LaboratoryFumeHoodLength
  ANNUAL_PROPOSED
    atof( Format( "%.2f", noXMLoutput_SpcRef:LabFumeHoodLen ) )
ENDRULE
RULE nrcctblRowProcLab:ProcLab05_LaboratoryFumeHoodVerticalSashExhaustFlow
  ANNUAL_PROPOSED
    atof( Format( "%.2f", noXMLoutput_SpcRef:LabFumeHoodVertSashExhFlow ) )
ENDRULE
RULE nrcctblRowProcLab:ProcLab05_NotApplicableMessage
  ANNUAL_PROPOSED
    if (LocalStatus( ProcLab05_LaboratoryFumeHoodVerticalSashExhaustFlow ) > 0)
    then  UNDEFINED  else  "NotApplicable"  endif
ENDRULE
RULE nrcctblRowProcLab:ProcLab06_LaboratoryFumeHoodVerticalAutomaticSashControlFraction
  ANNUAL_PROPOSED
    atof( Format( "%.2f", noXMLoutput_SpcRef:LabFumeHoodVertAutoSashCtrlFrac ) )
ENDRULE
RULE nrcctblRowProcLab:ProcLab06_NotApplicableMessage
  ANNUAL_PROPOSED
    if (LocalStatus( ProcLab06_LaboratoryFumeHoodVerticalAutomaticSashControlFraction ) > 0)
    then  UNDEFINED  else  "NotApplicable"  endif
ENDRULE
