; -------------------------------------------------------------------------
; Rules pertaining to:   BatchRuns defaulting
; CEC Title-24 Nonresidential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2014, California Energy Commission
; Copyright (c) 2012-2014, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------


;*************************************************************************
RULELIST "Default_BatchRuns" 0 0 0 0
;*************************************************************************
   "Set BatchRuns:FullBatchDefsCSV"    BatchRuns:FullBatchDefsCSV  = {
         if (LocalStatus( BatchDefsCSV ) < 1) then  UNDEFINED
         else if (strlen( BatchDefsCSV ) < 1) then  UNDEFINED
         else if (LocalStatus( DefaultProjPath ) < 1) then  BatchDefsCSV
         else if (strlen( DefaultProjPath ) < 1) then  BatchDefsCSV
         else if (find( BatchDefsCSV, ":"  ) >= 0 .OR.
                  find( BatchDefsCSV, "/"  ) == 0 .OR.
                  find( BatchDefsCSV, "\\" ) == 0) then  BatchDefsCSV
         else  DefaultProjPath + BatchDefsCSV
         endif endif endif endif endif  }
   "Set BatchRuns:HaveBatchDefsCSV"    BatchRuns:HaveBatchDefsCSV  = {
         if (LocalStatus( FullBatchDefsCSV ) < 1) then  0
         else if (strlen( FullBatchDefsCSV ) < 1) then  0
         else if (FileExists( FullBatchDefsCSV )) then  1
         else  0  endif endif endif  }

   "Set BatchRuns:TopLabel (only when HaveBatchDefsCSV)"  BatchRuns:TopLabel  = {
         if (HaveBatchDefsCSV)
         then  "Simplified batch inputs disabled due to specification of Batch Definitions file below."
         else  UNCHANGED  endif  }

   "Default simplified BatchRuns inputs"  BatchRuns:Action  = {
         if (HaveBatchDefsCSV) then  UNCHANGED
         else  EvalRulelist( "Default_BatchRuns_Simplified", 1 )  endif  }
END
;*************************************************************************

;*************************************************************************
RULELIST "Default_BatchRuns_Simplified" 0 0 0 0
;*************************************************************************
   "Create Proj & set RepoRev (if not present)"  BatchRuns:Action  = {
         if (ComponentCount( Proj ) > 0) then  UNCHANGED
         else  EvalRulelist( "CreateProj_SetRepoRev" )  endif  }

;  SET IN SOFTWARE
;           "NumProjInputs",      BEMP_Int,  1,  0,  0, "",                 0,  0,                           1005, "Number of project inputs based on FullProjDirectory, IncludeSubdirs & ProjFileNames" 
;           "DefaultProjPath",     BEMP_Str,  1,  0,  0, "",                 0,  0,                           1005, "Program default Projects path" 

   "Set BatchRuns:Today"      BatchRuns:Today  = {  YrMoDaToSerial(-1,-1,-1)  }

   "Default BatchRuns:BatchName"    BatchRuns:BatchName  = {
         Format( "T24N Runs svn%g %g-%02.0f-%02.0f", ValidOr( Proj:RuleRepoRev, -1 ),
                  mod( SerialDateToYear( Today ), 100 ),
                  SerialDateToMonth( Today ), SerialDateToDayOfMonth( Today ) )  }


;"DEBUG BatchRuns:FullProjDirectory"    BatchRuns:Action  = {
;         if (LocalStatus( ProjDirectory ) < 1) then  MessageBox( "Setting FullProjDirectory - ProjDirectory status < 1" )
;         else if (strlen( ProjDirectory ) < 1) then  MessageBox( "Setting FullProjDirectory - ProjDirectory length < 1" )
;         else if (LocalStatus( DefaultProjPath ) < 1) then  MessageBox( "Setting FullProjDirectory - DefaultProjPath status < 1" )
;         else if (strlen( DefaultProjPath ) < 1) then  MessageBox( "Setting FullProjDirectory - DefaultProjPath length < 1" )
;         else if (find( ProjDirectory, ":"  ) >= 1 .OR.
;                  find( ProjDirectory, "/"  ) == 1 .OR.
;                  find( ProjDirectory, "\\" ) == 1) then  MessageBox( "Setting FullProjDirectory - ProjDirectory is full path" )
;         else  MessageBox( "Setting FullProjDirectory => %s + %s", DefaultProjPath, ProjDirectory )
;         endif endif endif endif endif  }

;           "ProjDirectory",      BEMP_Str,  1,  0,  0, "",                 0,  0,                           1005, "Directory of projects to be batch processed (complete path or relative to Projects folder)" 
   "Set BatchRuns:FullProjDirectory"    BatchRuns:FullProjDirectory  = {
         if (LocalStatus( ProjDirectory ) < 1) then  UNDEFINED
         else if (strlen( ProjDirectory ) < 1) then  UNDEFINED
         else if (LocalStatus( DefaultProjPath ) < 1) then  ProjDirectory
         else if (strlen( DefaultProjPath ) < 1) then  ProjDirectory
         else if (find( ProjDirectory, ":"  ) >= 1 .OR.
                  find( ProjDirectory, "/"  ) == 1 .OR.
                  find( ProjDirectory, "\\" ) == 1) then  ProjDirectory
         else  DefaultProjPath + ProjDirectory
         endif endif endif endif endif  }

   "Default BatchRuns:IncludeSubdirs"  BatchRuns:IncludeSubdirs  = {  0  }
   "Default BatchRuns:ProjFileNames"   BatchRuns:ProjFileNames   = {  "*.cibd*"  }

   "Set BatchRuns:SelectedProjMsg"    BatchRuns:SelectedProjMsg  = {
         if (IfValidAnd( NumProjInputs > 0 )==0)
         then  "No projects found based on the inputs specified above."
         else  Format( "%g project(s) identified for processing.", NumProjInputs )
         endif  }
         
   "Default BatchRuns:AdditionalInputs"      BatchRuns:AdditionalInputs  = {  0  }

   "Default BatchRuns:StoreProjToSepDir"    BatchRuns:StoreProjToSepDir  = {  0  }
   "Default BatchRuns:OutputProjDir"        BatchRuns:OutputProjDir  = {
         if (IfValidAnd( StoreProjToSepDir > 0 ) .AND. strlen( BatchName ) > 0)
         then  BatchName + "\"
         else  UNDEFINED  endif  }
   "Set BatchRuns:FullOutputProjDir"        BatchRuns:FullOutputProjDir  = {
         if (IfValidAnd( StoreProjToSepDir > 0 ) == 0) then  FullProjDirectory
         else if (LocalStatus( OutputProjDir ) < 1) then  UNDEFINED
         else if (strlen( OutputProjDir ) < 1) then  UNDEFINED
         else if (LocalStatus( DefaultProjPath ) < 1) then  OutputProjDir
         else if (strlen( DefaultProjPath ) < 1) then  OutputProjDir
         else if (find( OutputProjDir, ":"  ) >= 1 .OR.
                  find( OutputProjDir, "/"  ) == 1 .OR.
                  find( OutputProjDir, "\\" ) == 1) then  OutputProjDir
         else  DefaultProjPath + OutputProjDir
         endif endif endif endif endif endif  }

   ; SAC 8/29/18 - revised logic to RE-default even when alredy defaulted
   "Default BatchRuns:ResultsFileName"    BatchRuns:ResultsFileName  = {
         if (LocalStatus( ResultsFileName ) > 4 .OR.
             LocalStatus( BatchName ) < 1) then  UNCHANGED
         else  Format( "%s Results.csv", BatchName )  endif  }
   "Default BatchRuns:LogFileName"        BatchRuns:LogFileName  = {
         if (LocalStatus( LogFileName ) > 4 .OR.
             LocalStatus( BatchName ) < 1) then  UNCHANGED
         else  Format( "%s.log", BatchName )  endif  }

   "Default BatchRuns:AnalOptsINISection"  BatchRuns:AnalOptsINISection  = {  "BatchOptions"  }
   "Default BatchRuns:SDDXMLFilePath"      BatchRuns:SDDXMLFilePath      = {
         if (AdditionalInputs) then  "XML\"  else  UNDEFINED  endif  }
   "Default BatchRuns:CSEFilePath"         BatchRuns:CSEFilePath         = {
         if (AdditionalInputs) then  "CSE\"  else  UNDEFINED  endif  }

   "Set BatchRuns:TopLabel"    BatchRuns:TopLabel  = {
         if (IfValidAnd( NumProjInputs > 0 )==0)
         then  "Specify Project Location and Filename inputs below to identify which projects to process."
         else  Format( "%g project(s) identified for processing.  Press 'Process' below to initiate analysis.", NumProjInputs )
         endif  }
END
;*************************************************************************


;*************************************************************************
RULELIST "CreateProj_SetRepoRev" 0 0 0 0
;*************************************************************************
   "Create Proj component"    BatchRuns:Action  = {
         CreateComp( Proj, "Batch Proj", "rl_DEFAULT" )  }    ; for Res is: "Set_RuleRepoRev" )  }
END
;*************************************************************************


;*************************************************************************
;*************************************************************************

ENDFILE
