// General Data for Water Heating
// For all Space Types with Hot Water Heating Rates
//
// -----------------------------------------------------------------------------
//  Copyright (c) 2012-2017, California Energy Commission
//  All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are
//  met:
// 
//    * Redistributions of source code must retain the above copyright
//  notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright
//  notice, this list of conditions and the following disclaimer in
//  the documentation and/or other materials provided with the
//  distribution.
//    * Neither the name of the California Energy Commission nor the names of its
//  contributors may be used to endorse or promote products
//  derived from this software without specific prior written
//  permission.
//
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
//  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
//  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
//  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
//  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
//  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
//  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// -----------------------------------------------------------------------------
//


// -----------------------------------------------------------------------------
//
RULE NEW Bldg:NonResHotWtrHrlyUse
  DATATYPE
    Float
  LONGFORM
    NonResidentialHotWaterHourlyUse
  DESCRIPTION
    "The total rated hot water use of the non-res spaces in the building."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal/hr
  DEFAULT
   SumChildrenIf(Spc:HotWtrHrlyUse, Spc:IsNonRes = 1)
  SIZING
    u:NonResHotWtrHrlyUse
  ANNUAL
    z:NonResHotWtrHrlyUse
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW FluidSeg:NonResHotWtrHrlyUse
  DATATYPE
    Float
  LONGFORM
    NonResidentialHotWaterHourlyUse
  DESCRIPTION
    "The total rated hot water use of the non-res spaces served by the 
     fluid segment."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal/hr
  DEFAULT
    if( Parent(Type) = "ServiceHotWater" )
    then
      SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse)
    else 
      UNDEFINED
    endif
  SIZING
    if( Parent(Type) = "ServiceHotWater" )
    then
      SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse)
    else 
      UNDEFINED
    endif
  ANNUAL
    z:NonResHotWtrHrlyUse
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW FluidSys:NonResHotWtrHrlyUse
  DATATYPE
    Float
  LONGFORM
    NonResidentialHotWaterHourlyUse
  DESCRIPTION
    "The total rated hot water use of the non-res spaces served by the
     fluid system."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal/hr
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      SumChildren(FluidSeg:NonResHotWtrHrlyUse)
    else 
      UNDEFINED
    endif
  SIZING
    if( Type = "ServiceHotWater" )
    then
      SumChildren(FluidSeg:NonResHotWtrHrlyUse)
    else 
      UNDEFINED
    endif
  ANNUAL
    z:NonResHotWtrHrlyUse
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW Bldg:NonResHotWtrHrlyUseGas
  DATATYPE
    Float
  LONGFORM
    NonResidentialHotWaterHourlyUseGas
  DESCRIPTION
    "The total rated hot water use of the non-res spaces in the building
     assigned to a gas baseline system."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal/hr
  DEFAULT
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly .OR. Proj:SHWBothBaseline)
    then 
      SumChildrenIf(Spc:HotWtrHrlyUseGas, Spc:IsNonRes = 1)
    else if( Proj:SHWNone )
    then 
      UNDEFINED
    else 
      UNDEFINED
    endif endif
  SIZING
    z:NonResHotWtrHrlyUseGas
  ANNUAL
    z:NonResHotWtrHrlyUseGas
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW Bldg:NonResHotWtrHrlyUseElec
  DATATYPE
    Float
  LONGFORM
    NonResidentialHotWaterHourlyUseElectric
  DESCRIPTION
    "The total rated hot water use of the non-res spaces in the building
     assigned to an electric baseline system."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal/hr
  DEFAULT
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly .OR. Proj:SHWBothBaseline)
    then 
      SumChildrenIf(Spc:HotWtrHrlyUseElec, Spc:IsNonRes = 1)
    else if( Proj:SHWNone )
    then 
      UNDEFINED
    else 
      UNDEFINED
    endif endif
  SIZING
    z:NonResHotWtrHrlyUseElec           //BUG -  z:NonResHotWtrHrlyUseGas 
  ANNUAL
    z:NonResHotWtrHrlyUseElec
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW Bldg:NonResHotWtrGasFrac
  DATATYPE
    Float
  LONGFORM
    NonResidentialHotWaterGasFraction
  DESCRIPTION
    "The fraction of the total rated hot water use of the non-res spaces
     in the building assigned to a gas baseline system."
  INPUTCLASS
    NotInput
  MINIMUM
    0
  MAXIMUM
    1
  DEFAULT
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly .OR. Proj:SHWBothBaseline)
    then 
      if( IfValidAnd( NonResHotWtrHrlyUse > 0 ) .AND. 
          IfValidAnd( NonResHotWtrHrlyUseGas >= 0 ) )
      then 
        NonResHotWtrHrlyUseGas / NonResHotWtrHrlyUse
      else 0
      endif
    else if( Proj:SHWNone )
    then 
      UNDEFINED
    else 
      UNDEFINED
    endif endif
  SIZING
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly .OR. Proj:SHWBothBaseline)
    then 
      if( IfValidAnd( NonResHotWtrHrlyUse > 0 ) .AND. 
          IfValidAnd( NonResHotWtrHrlyUseGas >= 0 ) )
      then 
        NonResHotWtrHrlyUseGas / NonResHotWtrHrlyUse
      else 0
      endif
    else if( Proj:SHWNone )
    then 
      UNDEFINED
    else 
      UNDEFINED
    endif endif
  ANNUAL
    z:NonResHotWtrGasFrac
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW FluidSys:PropNonResWtrHtrTotCap
  DATATYPE
    Float
  LONGFORM
    ProposedNonResidentialWaterHeaterTotalCapacity
  DESCRIPTION
    "The total capacity of the water heaters in the proposed design serving
     nonres spaces on the fluid system.  The capacity includes the volume 
     converted to Btu/h plus the heat provided to the water."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  MINIMUM
    0
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
//             TotCap is volume converted to Btu/hr plus HtOutput ( CapRtd*Eff ) 
//             Volume * 80F DeltaT (135F - 55F) * 1 Btu/lb-F * 8.2877 lb/gal @ 100°F 
        SumChildren( WtrHtr:StorCapSim ) * 80 * 1 * 8.2877 + 
        SumChildren( WtrHtr:HtOutput )
      else if( Proj:SHWBothBaseline )
      then
        UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else 
      UNDEFINED
    endif
  SIZING
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
//             TotCap is volume converted to Btu/hr plus HtOutput ( CapRtd*Eff ) 
//             Volume * 80F DeltaT (135F - 55F) * 1 Btu/lb-F * 8.2877 lb/gal @ 100°F 
        SumChildren( WtrHtr:StorCapSim ) * 80 * 1 * 8.2877 + 
        SumChildren( WtrHtr:HtOutput )
      else if( Proj:SHWBothBaseline .OR. Proj:SHWNone )
      then
        UNDEFINED
      else 
        UNDEFINED
      endif endif
    else 
      UNDEFINED
    endif
  ANNUAL
    PropNonResWtrHtrTotCap
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW FluidSys:BaseNonResWtrHtrTotCap
  DATATYPE
    Float
  LONGFORM
    BaselineNonResidentialWaterHeaterTotalCapacity
  DESCRIPTION
    "The total capacity of the water heaters in the baseline design serving
     nonres spaces.  The capacity is based on the total consumption (gal/hr) 
     converted to Btu/h.  In order to have the baseline not use a water heaters
     with a total volume of less then 30 gal, the consumption will be based on 
     no less than 75 gal/hr."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  MINIMUM
    0
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
//             TotCap is gal/hr converted to Btu/hr 
//             gph * 80F DeltaT (135F - 55F) * 1 Btu/lb-F * 8.2877 lb/gal @ 100°F
//             assume minimum storage volume = 30 gal = NonResHotWtrHrlyUse * 0.40
//             so use a minimum NonResHotWtrHrlyUse of 75 gal/hr
      max(NonResHotWtrHrlyUse, 75) * ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877
    else 
      UNDEFINED
    endif
  SIZING
    if( Type = "ServiceHotWater" )
    then
      max(NonResHotWtrHrlyUse, 75) * ( DsgnSupWtrTemp - 55 ) * 1 * 8.2877
    else 
      UNDEFINED
    endif
  ANNUAL
    BaseNonResWtrHtrTotCap
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW Proj:PropNonResWtrHtrTotCap
  DATATYPE
    Float
  LONGFORM
    ProposedNonResidentialWaterHeaterTotalCapacity
  DESCRIPTION
    "The total capacity of the water heaters in the proposed design serving
     nonres spaces in the building.  The capacity includes the volume 
     converted to Btu/h plus the heat provided to the water."
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  MINIMUM
    0
  DEFAULT
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
    then 
      SumChildren( FluidSys:PropNonResWtrHtrTotCap )
    else if( Proj:SHWBothBaseline )
    then
      UNDEFINED
    else if( Proj:SHWNone )
    then 
      UNDEFINED
    else 
      UNDEFINED
    endif endif endif
  CHECKSIM
    if( IfValidAnd(Bldg:NonResHotWtrHrlyUse = 0) .AND. ChildCount( Spc) > 0 )
    then
      PostWarning("The proposed design does not include nonres spaces that 
                   impose an SHW load.  Simulation of nonres SHW systems has  
                   been excluded from the analysis.")
    else UNCHANGED
    endif
  SIZING
    if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
    then 
      u:PropNonResWtrHtrTotCap
    else 
      UNDEFINED
    endif
  ANNUAL
    z:PropNonResWtrHtrTotCap
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW FluidSys:NonResWtrHtrVol
  DATATYPE
    Float
  LONGFORM
    NonResidentialWaterHeaterVolume
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  UNITS
    gal
  MINIMUM
    0
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then
        SumChildren( WtrHtr:StorCapSim )
      else if( Proj:SHWBothBaseline )
      then
//             Baseline sizes storage to meet 40% of load
//             Assumes 30 gal is smallest reasonable storage vol.
//             The max function here should not do anything because 
//             BaseNonResWtrHtrTotCap calculated including the 30 gal.
        max( BaseNonResWtrHtrTotCap * 0.40, 30 )
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else 
      UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren( WtrHtr:StorCapSim )
      else if( Proj:SHWBothBaseline )
      then
//             Baseline sized to meet 40% of load
//             Assumes 30 gal is smallest reasonable storage vol.
        max( BaseNonResWtrHtrTotCap * 0.40 / 80 / 1 / 8.2877, 30 )
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else 
      UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline )
      then
//             Baseline sized to meet 40% of load
//             Assumes 30 gal is smallest reasonable storage vol.
//             but does not exceed the proposed design if it is smaller.
        min( Proj:PropNonResWtrHtrTotCap * 0.40 / 80 / 1 / 8.2877, 
             max( BaseNonResWtrHtrTotCap * 0.40 / 80 / 1 / 8.2877, 30 ) )
      else if( Proj:SHWPropOnly )
      then 
        min( SumChildren( WtrHtr:StorCapSim ), max( BaseNonResWtrHtrTotCap * 0.40, 30 ) )
      else if( Proj:SHWBothBaseline )
      then
//             Baseline sized to meet 40% of load
//             Assumes 30 gal is smallest reasonable storage vol.
        max( BaseNonResWtrHtrTotCap * 0.40 / 80 / 1 / 8.2877, 30 )
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else 
      UNDEFINED
    endif
  ANNUAL
    z:NonResWtrHtrVol
ENDRULE

// -----------------------------------------------------------------------------
//
RULE NEW FluidSys:NonResWtrHtrCapRtd
  DATATYPE
    Float
  LONGFORM
    NonResidentialWaterHeaterCapacityRated
  DESCRIPTION
    ""
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  MINIMUM
    0
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren( WtrHtr:CapRtdSim )
      else if( Proj:SHWBothBaseline )
      then
//             Baseline sizes heating capacity to meet 60% of load 
//             80F DeltaT (135F - 55F), 1 Btu/lb-F, and density = 8.2877 lb/gal @ 100°F 
//             Use NonResWtrHtrVol to avoid unreasonably small CapRtd
        NonResWtrHtrVol / 0.40 * 0.60 * 80 * 1 * 8.2877
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else 
      UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren( WtrHtr:StorCapSim )
      else if( Proj:SHWBothBaseline )
      then
//             Baseline sizes heating capacity to meet 60% of load 
//             80F DeltaT (135F - 55F), 1 Btu/lb-F, and density = 8.2877 lb/gal @ 100°F 
//             Use NonResWtrHtrVol to avoid unreasonably small CapRtd
        NonResWtrHtrVol / 0.40 * 0.60 * 80 * 1 * 8.2877
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else 
      UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren( WtrHtr:StorCapSim )
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then
//             Baseline sizes heating capacity to meet 60% of load 
//             80F DeltaT (135F - 55F), 1 Btu/lb-F, and density = 8.2877 lb/gal @ 100°F 
//             Use NonResWtrHtrVol to avoid unreasonably small CapRtd
        NonResWtrHtrVol / 0.40 * 0.60 * 80 * 1 * 8.2877
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
    else 
      UNDEFINED
    endif
  ANNUAL
    z:NonResWtrHtrCapRtd
ENDRULE


// -------------- SHW Proposed System Capacity Rated --------------
RULE NEW FluidSys:TotCapRtdProp
  DATATYPE
    Float
  LONGFORM
    TotalCapacityRatedProposed
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    Btu/hr
  DEFAULT
    if( Type = "ServiceHotWater" )
    then SumChildren(WtrHtr:CapRtdSim)
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          SumChildren(WtrHtr:CapRtdSim)
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren(WtrHtr:CapRtdSim)
      else if( Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          SumChildren(WtrHtr:CapRtdSim)
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWPropOnly )
      then 
        SumChildren(WtrHtr:CapRtdSim)
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
   else UNDEFINED
   endif    
  ANNUAL_PROPOSED
    zp:TotCapRtdProp
  ANNUAL_BASELINE
    zb:TotCapRtdProp
ENDRULE


// -------------- Fluid Segment Water Heater Storage Capacity --------------------
RULE NEW FluidSeg:TotFluidSegStorCap
  DATATYPE
    Float
  LONGFORM
    TotalFluidSegmentStorageCapacity
  DESCRIPTION
    "The storage capacity of a water heater at the rated conditions specified
     in DOE 10 CFR Part 430 or ANSI Z21.10."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  MINIMUM
    0
  MAXIMUM
    100000000
  UNITS
    gal
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" )
    then( (SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse) * 0.40) * 1.30 )  // The * 0.40 is splitting the required sizing between rated capacity and tank capacity. 30% of a tank volume is not used so oversized by 30% to reach Storage Capacity
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse) * 0.40 * 1.30
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse) * 0.40 * 1.30
      else if( Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse) * 0.40 * 1.30
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWPropOnly )
      then 
        if( FluidSeg:WtrHtrInstantChk > 0 )
        then 1
        else( SumRevRef(Spc:SHWFluidSegRef, Spc:HotWtrHrlyUse) * 0.40 * 1.30 )  // The * 0.40 is splitting the required sizing between rated capacity and tank capacity. 30% of a tank volume is not used so oversized by 30% to reach Storage Capacity
        endif
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
   else UNDEFINED
   endif    
  ANNUAL
    z:TotFluidSegStorCap
ENDRULE

// -------------- SHW Baseline Storage Capacity --------------
RULE NEW FluidSys:TotStorCapBase
  DATATYPE
    Float
  LONGFORM
    TotalStorageCapacityBaseline
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal
  DEFAULT
    if( Type = "ServiceHotWater")
    then SumChildren(FluidSeg:TotFluidSegStorCap)  // remove Int
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          SumChildren(FluidSeg:TotFluidSegStorCap)
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren(FluidSeg:TotFluidSegStorCap)
      else if( Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif  
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          SumChildren(FluidSeg:TotFluidSegStorCap)
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWPropOnly )
      then 
        SumChildren(FluidSeg:TotFluidSegStorCap)
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif    
  ANNUAL
    z:TotStorCapBase
ENDRULE

// -------------- SHW Proposed System Storage Capacity --------------
RULE NEW FluidSys:TotStorCapProp
  DATATYPE
    Float
  LONGFORM
    TotalStorageCapacityProposed
  DESCRIPTION
    ""
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  MINIMUM
    0
  UNITS
    gal
  DEFAULT
    if( Type = "ServiceHotWater" )
    then SumChildren(WtrHtr:StorCapSim)
    else UNDEFINED
    endif
  SIZING_PROPOSED
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWPropOnly )
        then
          SumChildren(WtrHtr:StorCapSim)
        else if( Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        SumChildren(WtrHtr:StorCapSim)      
      else if( Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif
  SIZING_BASELINE
    if( Type = "ServiceHotWater" )
    then
      if( IsResAndCombo )
      then
        if( Proj:ResComboDHWPropOnly )
        then
          SumChildren(WtrHtr:StorCapSim)
        else if( Proj:ResComboDHWUserAndBaseline .OR. Proj:ResComboDHWNone )
        then 
          UNDEFINED
        else
          UNDEFINED
        endif endif
      else if( Proj:SHWUserAndBaseline .OR. Proj:SHWBothBaseline )
      then 
        UNDEFINED
      else if( Proj:SHWPropOnly )
      then 
        SumChildren(WtrHtr:StorCapSim)  
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
    else UNDEFINED
    endif    
  ANNUAL
    z:TotStorCapProp
ENDRULE


// -------- Proposed Water Heater Storage and Rated Capacity Check -----------
RULE NEW FluidSys:TotFirstHrCap
  DATATYPE
    Float
  LONGFORM
    TotalFirstHourCapacity
  DESCRIPTION
    "This sums the total storage capacity (max gal/h) and the total rated
     capacity (converted from Btu/h to max gal/h) at the proposed fluid
     system."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  UNITS
    Btu/hr
  DEFAULT
    if( FluidSys:Type = "ServiceHotWater" .AND. IfValidAnd(HotWtrSupTemp > 0) )
    then 
      u:TotStorCapProp * 8.2877 * (HotWtrSupTemp - 55) + u:TotCapRtdProp  
    else 
      UNDEFINED
    endif
  CHECKSIM
    if( FluidSys:Type = "ServiceHotWater" )
    then
      if( ChildCount(WtrHtr) > 1 .AND. ChildCount(FluidSeg) > 2 )
      then
      PostError("The service hot water fluid system '%s' has more than 2 fluid segments,
                 and 1 may be serving a heating coil. Only 1 water heater object is allowed
                 in this case, however, multipliers are allowed for the single water heater.",Name)
      else UNCHANGED
      endif
    else UNCHANGED
    endif
ENDRULE


// -------------- Baseline Water Heater Storage Capacity --------------------
RULE NEW Bldg:NonResBaseStorCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaseStorageCapacity
  DESCRIPTION
    "The tank volume of the baseline water heater."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    Prescribed
  MINIMUM
    0
  MAXIMUM
    1000000000
  UNITS
    gal
  SIZING_PROPOSED
      if( Proj:SHWUserAndBaseline .OR. Proj:SHWPropOnly )
      then 
        UNDEFINED  // not used for PROPOSED
      else if( Proj:SHWBothBaseline )
      then 
        SumChildrenIf(Spc:HotWtrHrlyUse, Spc:IsNonRes = 1) * 0.40 * 1.30
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif
  SIZING_BASELINE
       if( Proj:SHWUserAndBaseline )
      then 
        SumAll(u:FluidSys:TotFirstHrCap) * 0.40 / 8.2877 / 80
      else if ( Proj:SHWBothBaseline )
      then
        SumChildrenIf(Spc:HotWtrHrlyUse, Spc:IsNonRes = 1) * 0.40 * 1.30
      else if( Proj:SHWPropOnly )
      then 
        UNDEFINED
      else if( Proj:SHWNone )
      then 
        UNDEFINED
      else 
        UNDEFINED
      endif endif endif endif
  ANNUAL
    z:NonResBaseStorCap
ENDRULE

// -------------- High Rise Res ResDHW Check --------------------
RULE NEW Proj:Bldg:HighRiseResDHWCheck
  RULESETS
    T24N
  DATATYPE
    Float
  LONGFORM
    HighRiseResidentialDomesticHotWaterCheck
  DESCRIPTION
    "Checking the total building height for High Rise Residential 
     Residential Hot Water Heaters."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  CHECKCODE
    if(  (SumAll(Spc:HaveResDHW) > 0) 
          .AND. (Bldg:AboveGrdStoryCnt < 4) 
          .AND. (HighRiseResFlrArea >= (TotCondFlrArea * 0.20)) )
    then
      PostError("Residential DHW systems are only permitted in buildings 
                 with 4 or more stories above grade, hotels and motels of any 
                 height, or buildings with 3 or fewer stories when the 
                 residential floor area is less than 20% of the total floor 
                 area.")
    else UNCHANGED
    endif
ENDRULE


// -------------- New Water Heaters in Building Count --------------------
RULE Proj:SHWWtrHtrCnt
  DESCRIPTION
    "The total number of residential and nonresidential water heaters in
     the entire building, including multipliers, used for service water heating."
  HELP
    ""
  REFERENCE 
    ACM-5.9.1 Water Heating
  INPUTCLASS
    NotInput
  PREVIOUSNAMES
    WtrHtrCnt
  MINIMUM
    0
  COMMONMINIMUM
    0
  COMMONMAXIMUM
    100
  MAXIMUM
    10000
  REPORTPRECISION
    0
  DEFAULT
    ( (SumAll(WtrHtr:NewComDHWHtr)) + (SumAcrossIf(ResWtrHtr:IsNew, ResWtrHtr:FloorAreaServed > 0 )) )
  SIZING
    ( (SumAll(WtrHtr:NewComDHWHtr)) + (SumAcrossIf(ResWtrHtr:IsNew, ResWtrHtr:FloorAreaServed > 0 )) )
  ANNUAL
    ( (SumAll(WtrHtr:NewComDHWHtr)) + (SumAcrossIf(ResWtrHtr:IsNew, ResWtrHtr:FloorAreaServed > 0 )) )
ENDRULE


// -------------- NonRes Baseline Story WtrHtr First Hour Capacity  --------------------
RULE NEW Story:NonResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildrenIf(Spc:HotWtrHrlyUse, Spc:IsNonRes = 1) //removed Int
    else 
      UNDEFINED
    endif
ENDRULE

// -------------- NonRes Baseline Building WtrHtr First Hour Capacity  --------------------
RULE NEW Bldg:NonResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildren(Story:NonResBaseFirstHrCap) // removed Int
    else UNDEFINED
    endif
ENDRULE

// -------------- Res Baseline Story WtrHtr First Hour Capacity  --------------------
RULE NEW Story:ResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then
      SumChildrenIf(Spc:HotWtrHrlyUse, Spc:IsResAndCombo = 1)
    else 
      UNDEFINED
    endif
ENDRULE

// -------------- Res Baseline Building WtrHtr First Hour Capacity --------------------
RULE NEW Bldg:ResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" ) //Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
    then
      SumChildren(Story:ResBaseFirstHrCap)
    else 
      UNDEFINED
    endif
ENDRULE

// -------------- Proposed Fluid System WtrHtr First Hour Capacity --------------------
RULE NEW FluidSys:PropFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ProposedFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Type = "ServiceHotWater" .AND. Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
      then( SumChildren(WtrHtr:CapRtdSim) + SumChildren(WtrHtr:StorCapSim) * 8.2877 * (HotWtrSupTemp - 55) )      
    else UNDEFINED
    endif
ENDRULE

// -------------- Proposed Building First Hour Capacity --------------------
RULE NEW Proj:PropFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ProposedFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then( SumChildren(FluidSys:PropFirstHrCap) )
    else UNDEFINED
    endif
  SIZING
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then( SumChildren(u:FluidSys:PropFirstHrCap) )
    else UNDEFINED
    endif
  ANNUAL
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. Proj:ExcptCondWtrHtr = "No" )
    then( SumChildren(u:FluidSys:PropFirstHrCap) )
    else UNDEFINED
    endif
ENDRULE


// -------------- Res Baseline WtrHtr First Hour Capacity --------------------
RULE NEW WtrHtr:ResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    ResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND. 
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:ResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)  
    else UNDEFINED
    endif
  SIZING
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND.
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:ResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)
    else UNDEFINED
    endif
  ANNUAL
    z:ResBaseFirstHrCap
ENDRULE


// -------------- NonRes Baseline WtrHtr First Hour Capacity --------------------
RULE NEW WtrHtr:NonResBaseFirstHrCap
  DATATYPE
    Float
  LONGFORM
    NonResidentialBaselineFirstHourCapacity
  INPUTCLASS
    NotInput
  DEFAULT
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND.
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:NonResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)
    else UNDEFINED
    endif
  SIZING
    if( Proj:ExcptCondWtrHtrSizing = "Yes" .AND.
        Proj:ExcptCondWtrHtr = "No" .AND.
        ( ValidOr(Bldg:ResBaseFirstHrCap,0) + ValidOr(Bldg:NonResBaseFirstHrCap,0) ) != 0 )
    then Proj:PropFirstHrCap * Bldg:NonResBaseFirstHrCap / (Bldg:ResBaseFirstHrCap + Bldg:NonResBaseFirstHrCap)
    else UNDEFINED
    endif
  ANNUAL
    z:NonResBaseFirstHrCap
ENDRULE


// --------- Residential Area Served by a Single Fluid Segment --------------
RULE NEW FluidSeg:ResWtrHtrArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterArea
  DESCRIPTION
    "Sum of the residential floor area served by a single fluid segment."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Parent(Type) = "ServiceHotWater" )
    then SumRevRef(Spc:SHWFluidSegRef, Spc:ResArea)
    else UNDEFINED
    endif
ENDRULE


// --------- Central System Water Heating --------------
RULE FluidSys:CentralSys
  DESCRIPTION
    "A checkbox to determine if the water heater sytem is a Central System
     or Individual Unit System."
  DEFAULT
    if( Type = "ServiceHotWater" )
    then 0
    else UNDEFINED
    endif
ENDRULE


// ------ Residential Floor Area Served by Central System Fluid System ---------
RULE NEW FluidSys:ResWtrHtrCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterCentralSystemArea
  DESCRIPTION
    "Sum of the central system residential floor area served by a single fluid system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( CentralSys = 1 )
      then SumChildren(FluidSeg:ResWtrHtrArea)
      else 0
      endif
    else UNDEFINED
    endif
ENDRULE

// ------ Residential Floor Area Served by NonCentral System Fluid System ---------
RULE NEW FluidSys:ResWtrHtrNonCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystemArea
  DESCRIPTION
    "Sum of the non-central system residential floor area served by a single fluid system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( CentralSys = 0 )
      then SumChildren(FluidSeg:ResWtrHtrArea)
      else 0
      endif
    else UNDEFINED
    endif
ENDRULE

// ------ Residential Floor Area Served by Central System in Building ---------
RULE NEW Proj:ResWtrHtrCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterCentralSystemArea
  DESCRIPTION
    "Sum of the central system residential floor area in building."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" )
    then SumChildren(FluidSys:ResWtrHtrCentralSysArea)
    else UNDEFINED
    endif
ENDRULE


// ------ Residential Floor Area Served by NonCentral System in Building ---------
RULE NEW Proj:ResWtrHtrNonCentralSysArea
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystemArea
  DESCRIPTION
    "Sum of the non-central system residential floor area in building."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Proj:ExcptCondWtrHtr = "No" )
    then SumChildren(FluidSys:ResWtrHtrNonCentralSysArea)
    else UNDEFINED
    endif
ENDRULE


// ------ SHW FluidSystem serves residential area and is a central system
RULE NEW FluidSys:ResWtrHtrCentralSys
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterCentralSystem
  DESCRIPTION
    "A flag to indicate that an SHW fluid system is a central residential 
     system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( ResWtrHtrCentralSysArea > 0 )
      then 1
      else 0
      endif
    else UNDEFINED
    endif
  CHECKCODE
    if( ResWtrHtrCentralSys .AND. Type = "ServiceHotWater" )
    then
       PostError("The service hot water fluid system '%s' serves residential 
                 areas and is marked as a central system serving multiple 
                 dwelling units.  This is not allowed for fluid systems.  
                 Use the Residential DHW system instead.",Name)
    else UNCHANGED
    endif
ENDRULE


// ------ SHW FluidSystem serves individual residential dwelling units - used for combo systems -------
RULE NEW FluidSys:ResWtrHtrNonCentralSys
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystem
  DESCRIPTION
    "A flag to indicate that an SHW fluid system is a non-central residential 
     system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( Type = "ServiceHotWater" )
    then
      if( ResWtrHtrNonCentralSysArea > 0 )
      then 1
      else 0
      endif
    else UNDEFINED
    endif
ENDRULE


// ------ SHW FluidSystem serves individual residential dwelling units - used for combo systems
RULE NEW Proj:ResWtrHtrNonCentralSys
  DATATYPE
    Float
  LONGFORM
    ResidentialWaterHeaterNonCentralSystem
  DESCRIPTION
    "A flag to indicate that an SHW fluid system is a non-central residential system."
  INPUTCLASS
    NotInput
  UNITS
    ft2
  DEFAULT
    if( IfValidAnd(ResWtrHtrNonCentralSysArea > 0) )
    then 1
    else 0
    endif
ENDRULE


