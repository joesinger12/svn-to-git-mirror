; -------------------------------------------------------------------------
; Rules pertaining to:   Setup Zone and Internal Gains objects for CSE Energy Simulation
; CEC Title-24 Residential Energy Code
; -------------------------------------------------------------------------
; Copyright (c) 2012-2014, California Energy Commission
; Copyright (c) 2012-2014, Wrightsoft Corporation
; All rights reserved.
; Redistribution and use in source and binary forms, with or without modification,
; are permitted provided that the following conditions are met:
; - Redistributions of source code must retain the above copyright notice, this
;   list of conditions and the following disclaimer.
; - Redistributions in binary form must reproduce the above copyright notice, this
;   list of conditions, the following disclaimer in the documentation and/or other
;   materials provided with the distribution.
; - Neither the name of the California Energy Commission nor the names of its
;   contributors may be used to endorse or promote products derived from this
;   software without specific prior written permission.
; DISCLAIMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
; THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
; NON-INFRINGEMENT ARE DISCLAIMED. IN NO EVENT SHALL CALIFORNIA ENERGY COMMISSION,
; WRIGHTSOFT CORPORATION, ITRON, INC. OR ANY OTHER AUTHOR OR COPYRIGHT HOLDER OF
; THIS SOFTWARE (COLLECTIVELY, THE "AUTHORS") BE LIABLE FOR ANY DIRECT, INDIRECT,
; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
; OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
; OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
; ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  EACH LICENSEE AND SUBLICENSEE OF THE
; SOFTWARE AGREES NOT TO ASSERT ANY CLAIM AGAINST ANY OF THE AUTHORS RELATING TO
; THIS SOFTWARE, WHETHER DUE TO PERFORMANCE ISSUES, TITLE OR INFRINGEMENT ISSUES,
; STRICT LIABILITY OR OTHERWISE.
; -------------------------------------------------------------------------

ENUM_PROPERTIES_VALUE   ; ensures retrieval/logic/us of enum properties assume numeric value (alternative is ENUM_PROPERTIES_STRING)

;*************************************************************************
RULELIST "CSE_SimulationPrep_Zones_IntGains" 1 0 0 1
;*************************************************************************

; SAC 9/7/12 - removed old attic diode via GAIN w/ simpler version using IZXFER
;	"Blast ResProj:BypassAtticMETER"			ResProj:BypassAtticMETER	= {	if (LocalCompAssigned( BypassAtticMETER )) then  DeleteComp()  else  UNCHANGED  endif  }
;	"Blast ResZn:BypassAtticGAIN"			ResZn:BypassAtticGAIN		= {	if (LocalCompAssigned( BypassAtticGAIN  )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast ResZn:CSE_ZONE"					ResZn:CSE_ZONE				= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast ResOtherZn:CSE_ZONE"				ResOtherZn:CSE_ZONE		= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast ResGarage:CSE_ZONE"					ResGarage:CSE_ZONE			= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast ResAttic:CSE_ZONE"					ResAttic:CSE_ZONE				= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }
	"Blast ResCrawlSpc:CSE_ZONE"			ResCrawlSpc:CSE_ZONE		= {	if (LocalCompAssigned( CSE_ZONE         )) then  DeleteComp()  else  UNCHANGED  endif  }


 ; CSE ZONE (conditioned/living zones) creation & defaulting
;	"Create new ResZn:CSE_ZONE"  				ResZn:CSE_ZONE						= {	CreateComp( cseZONE, Local( Name ) + "-zn" )  }
	"Create new ResZn:CSE_ZONE"  				ResZn:CSE_ZONE						= {	CreateComp( cseZONE, substr( Name, 0, 50 ) + "-zn" )  }

	"Default ResZn:CSE_ZONE:SourceZone"  	ResZn:CSE_ZONE:SourceZone		= {	Local( Name 				)  }
	"Default ResZn:CSE_ZONE:znModel"      	ResZn:CSE_ZONE:znModel     	= {	if (LocalStatus( ZnModel       ) > 0) then  Local( ZnModel 		)  else  UNDEFINED  endif  }
	"Set ResZn:CSE_ZONE:znHIRatio"		   ResZn:CSE_ZONE:znHIRatio		= {  ValidOr( ZnHIRatio, 10 )  }     ; SAC 02/11/22
	"Default ResZn:CSE_ZONE:znArea"       	ResZn:CSE_ZONE:znArea      	= {	if (LocalStatus( FloorArea     ) > 0) then  Local( FloorArea 		)  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znVol"        	ResZn:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume        ) > 0) then  Local( Volume 			)  else  UNDEFINED  endif  }
		; SAC 5/22/12 - CBECCbug002 from BW 5/18 re: znEaveZ set to Bottom rather than Bottom + CeilingHeight
		; SAC 9/12/12 - another update to this setting from Bruce --> ZoneBotZ + (FloortoFloor(zone)*(NumofStories(zone)-1)) + CeilingHeight
;	"Default ResZn:CSE_ZONE:znEaveZ"     	ResZn:CSE_ZONE:znEaveZ    	= {	if (LocalStatus( Bottom ) > 0 .AND. LocalStatus( CeilingHeight ) > 0) then  Bottom + CeilingHeight  else  UNDEFINED  endif  }
;	"Default ResZn:CSE_ZONE:znEaveZ"     	ResZn:CSE_ZONE:znEaveZ    	= {	Bottom + (FloorHeight * (NumStories - 1)) + CeilingHeight  }
	"Default ResZn:CSE_ZONE:znEaveZ"     	ResZn:CSE_ZONE:znEaveZ    	= {	if (LocalStatus( Top ) > 0 .AND. Top > 0) then  Top
																									else  Bottom + (FloorHeight * (NumStories - 1)) + CeilingHeight  endif  }
	"Prevent invalid ResZn:CSE_ZONE:znEaveZ"  ResZn:CSE_ZONE:znEaveZ    = {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }

	"Default ResZn:CSE_ZONE:znCeilingHt"  	ResZn:CSE_ZONE:znCeilingHt 	= {	if (LocalStatus( CeilingHeight ) > 0) then  Local( CeilingHeight )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znFloorZ"     	ResZn:CSE_ZONE:znFloorZ     = {	if (LocalStatus( Bottom        ) > 0) then  Local( Bottom        )  else  UNDEFINED  endif  }  ; SAC 3/28/13
	"Default ResZn:CSE_ZONE:znCAir"       	ResZn:CSE_ZONE:znCAir      	= {	if (LocalStatus( ZnCAir        ) > 0) then  Local( ZnCAir 		  )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znAzm"        	ResZn:CSE_ZONE:znAzm       	= {	if (LocalStatus( ZnAzm         ) > 0) then  Local( ZnAzm 		  )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znSC"         	ResZn:CSE_ZONE:znSC        	= {	if (LocalStatus( ZnSC          ) > 0) then  Local( ZnSC 			  )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znSC_x"        	ResZn:CSE_ZONE:znSC_x      	= {	if (Type == 10 .OR. LocalStatus( ZnSC ) > 0) then  UNDEFINED
																									else  Format( "select( $radDiff >1., %g, default %g )", 0.5, 0.8 )  endif  }
			; znModel = CZM -
		;	thermostat setpoints
	; SAC 7/2/15 - new rule and revisions to subsequent rules to enable include file-defined thermostat schedules
	"Set cseZONE:IncludeFile (replacing thermostat setpoint properties)"
				ResZn:CSE_ZONE:IncludeFile	= {	if (UseTstatIncFile > 0.5) then  TstatIncludeFile  else  UNDEFINED  endif  }

; change setpoint schedules for design rating   mjb  RESNET 02/12/16
	"Reset ResZn:CoolTDaySched for Design Rating model"
			ResZn:CoolTDaySched		= {	if ( ResProj:DRtgRefRunID == 2014) then  RuleLibrary( SchDay, "RESNET SZ Cool Hrly" )
															else  UNCHANGED   endif  }
	"Reset ResZn:HeatTDaySched for Design Rating model"
			ResZn:HeatTDaySched		= {	if ( ResProj:DRtgRefRunID == 2014) then  RuleLibrary( SchDay, "RESNET SZ Heat Hrly" )
															else  UNCHANGED   endif  }

	; SAC 1/3/13 - updated t-stat schedules to include design sizing schedule data
	; SAC 5/13/13 - updated t-stat schedules to reference constant heating t-stat temperatures
	"Setup heating setpoint profile CSE export string (Zone:HeatTDaySched_CSE)"															
				ResZn:HeatTDaySched_CSE	= {	if (UseTstatIncFile > 0.5) then  " "
														else if (ConstHtgSetpt > 0)
														then	Format( "select( $dsDay==1, 70, $dsDay==2, 60, ISSEASONCOOLING, %g, default %g) ", SummerHeatTemp, ConstHtgSetpt )
														else if (LocalCompAssigned( HeatTDaySched ))
												;	then  Format( "select( @weather.taDbAvg07 >60., %g, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)) ",
													then  Format( "select( $dsDay==1, 70, $dsDay==2, 60, ISSEASONCOOLING, %g, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)) ",
																SummerHeatTemp,
																LocalRef( HeatTDaySched:Hr[1]  ), LocalRef( HeatTDaySched:Hr[2]  ), LocalRef( HeatTDaySched:Hr[3]  ), LocalRef( HeatTDaySched:Hr[4]  ),
																LocalRef( HeatTDaySched:Hr[5]  ), LocalRef( HeatTDaySched:Hr[6]  ), LocalRef( HeatTDaySched:Hr[7]  ), LocalRef( HeatTDaySched:Hr[8]  ),
																LocalRef( HeatTDaySched:Hr[9]  ), LocalRef( HeatTDaySched:Hr[10] ), LocalRef( HeatTDaySched:Hr[11] ), LocalRef( HeatTDaySched:Hr[12] ),
																LocalRef( HeatTDaySched:Hr[13] ), LocalRef( HeatTDaySched:Hr[14] ), LocalRef( HeatTDaySched:Hr[15] ), LocalRef( HeatTDaySched:Hr[16] ),
																LocalRef( HeatTDaySched:Hr[17] ), LocalRef( HeatTDaySched:Hr[18] ), LocalRef( HeatTDaySched:Hr[19] ), LocalRef( HeatTDaySched:Hr[20] ),
																LocalRef( HeatTDaySched:Hr[21] ), LocalRef( HeatTDaySched:Hr[22] ), LocalRef( HeatTDaySched:Hr[23] ), LocalRef( HeatTDaySched:Hr[24] ) )
													else  " "  endif endif endif  }
	"Setup cooling setpoint profile CSE export string (Zone:CoolTDaySched_CSE)"         ; update 78 to 75 per BAW - SAC 22-02-20   ; further simplification to default to 78 - SAC 02/25/22
			  ResZn:CoolTDaySched_CSE	= {	if (UseTstatIncFile > 0.5) then  " "
														else if (LocalCompAssigned( CoolTDaySched ))
													then  "select( $dsDay==1, 83, $dsDay==2, 75, default 78)"
													else  " "  endif endif  }
												;	then  Format( "select( @weather.taDbAvg07 >60., hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g), default %g)",
												;	then  Format( "select( $dsDay==1, 83, $dsDay==2, 78, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g))",
												;	then  Format( "select( $dsDay==1, 83, $dsDay==2, 75, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g))",
												;				LocalRef( CoolTDaySched:Hr[1]  ), LocalRef( CoolTDaySched:Hr[2]  ), LocalRef( CoolTDaySched:Hr[3]  ), LocalRef( CoolTDaySched:Hr[4]  ),
												;				LocalRef( CoolTDaySched:Hr[5]  ), LocalRef( CoolTDaySched:Hr[6]  ), LocalRef( CoolTDaySched:Hr[7]  ), LocalRef( CoolTDaySched:Hr[8]  ),
												;				LocalRef( CoolTDaySched:Hr[9]  ), LocalRef( CoolTDaySched:Hr[10] ), LocalRef( CoolTDaySched:Hr[11] ), LocalRef( CoolTDaySched:Hr[12] ),
												;				LocalRef( CoolTDaySched:Hr[13] ), LocalRef( CoolTDaySched:Hr[14] ), LocalRef( CoolTDaySched:Hr[15] ), LocalRef( CoolTDaySched:Hr[16] ),
												;				LocalRef( CoolTDaySched:Hr[17] ), LocalRef( CoolTDaySched:Hr[18] ), LocalRef( CoolTDaySched:Hr[19] ), LocalRef( CoolTDaySched:Hr[20] ),
												;				LocalRef( CoolTDaySched:Hr[21] ), LocalRef( CoolTDaySched:Hr[22] ), LocalRef( CoolTDaySched:Hr[23] ), LocalRef( CoolTDaySched:Hr[24] ),
												;				Local(WinterCoolTemp) )
		
; SAC 12/10/12 - revised to reference new ResHtgSys:ConstHtgSetpt
	"Zone:CSE_ZONE:znTH"         	ResZn:CSE_ZONE:znTH        	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																						else if (LocalStatus( ZnTH ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTH        )
																						else  UNDEFINED  endif endif  }
; SAC 5/13/13 - removed references to ConstHtgSetpt here - this now used in assembly of t-stat schedule...
;																						else if (ZnModel == 3 .AND. LocalCompAssigned( ActiveHVACSystem ))
;																						then	if (ActiveHVACSystem:HeatSystem:DisplayHPData > 0.5 .AND.
;																									 ActiveHVACSystem:HeatSystem:ConstHtgSetpt > 0)
;																								then	ActiveHVACSystem:HeatSystem:ConstHtgSetpt
;																								else  UNDEFINED  endif
;																						else  UNDEFINED  endif endif  }
; SAC 8/30/12 - modified to prevent output of thermostat setpoint expression if fixed setpoint (above) already defined (or if CSE zone model not = 'CZM')
	"Default ResZn:CSE_ZONE:znTH_x"        	ResZn:CSE_ZONE:znTH_x      	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if ( ZnModel != 3 .OR. LocalStatus( ZnTH ) > 0 .OR. LocalStatus( CSE_ZONE:znTH ) > 0) then  UNDEFINED
																									else  Local(HeatTDaySched_CSE)  endif endif }
	;"Default ResZn:CSE_ZONE:znTH_x"        	ResZn:CSE_ZONE:znTH_x      	= {	if (LocalStatus( ZnTH        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
	;																								else  switch( Local( Type ) )
	;																											case  2 :	; Living
	;																															"select( ISSEASONCOOLING, 60, default hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65) )"
	;																											case  3 :	; Sleeping
	;																															"select( ISSEASONCOOLING, 60, default hourval(65,65,65,65,65,65,65,68,65,65,65,65,65,65,65,65,65,65,65,65,65,68,68,65) )"
	;																											default :	"select( ISSEASONCOOLING, 60, default hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65) )"
	;																										endswitch endif  }


; //Thermostats and associated controls 
; //Heat Mode
; #redefine SZ_Heat_hr hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65)
; #redefine Liv_Heat_hr hourval(65,65,65,65,65,65,65,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,65)
; #redefine Slp_Heat_hr hourval(65,65,65,65,65,65,65,68,65,65,65,65,65,65,65,65,65,65,65,65,65,68,68,65)
; #redefine Winter_Vent 77
; #redefine Winter_Cool 78
; //Cool Mode
; #redefine SZ_Cool_hr hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,78)
; #redefine Liv_Cool_hr hourval(83,83,83,83,83,83,83,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,83)
; #redefine Slp_Cool_hr hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,83,83,83,83,83,83,83,83,78,78,78)
; #redefine Summer_Heat 60
; #redefine Sumr_Vent_Temp 68      // 
; 	
; //  Summer Winter mode switch based on 7 day average temp.  Winter<=60>Summer 
; #redefine Coolmode select( @weather.taDbAvg07 >60., 1,default 0)
; #redefine HeatSet select( @weather.taDbAvg07 >60., Summer_Heat, default SZ_Heat_hr )  
; #redefine CoolSet select( @weather.taDbAvg07 >60., SZ_Cool_hr, default Winter_Cool )
; #redefine Tdesired select( @weather.taDbAvg07 >60., Sumr_Vent_Temp, default Winter_Vent )
; // Window interior shade closure 
; #define SCnight 0.8    //  when the sun is down.  80%
; #define SCday 0.5      //  when the sun is up  50%  
; #define SCcool 0.5     //  when cooling was on previous hour.  50%? 
;
;				then  Format( "Max(0.0, 0.015 * %g * (@znRes[%c%s%c].prior.H.tAir - @znRes[%c%s%c].prior.H.tAir))", Local( ClgBlwAtticArea ), 34, LocalRef( CSE_ZONE:Name ), 34, 34, GlobalRef( ResAttic:CSE_ZONE:Name ), 34 )

; SAC 12/10/12 - revised to reference new ResClgSys:ConstClgSetpt
; SAC 4/3/17 - revised to enable PreCooling via ResProj:PreCl_ZnCoolSetpt
; SAC 8/8/17 - added logic to cause PreCooling CSE inputs iff ResProj:IsPropFlexRun flag set
	"Default ResZn:CSE_ZONE:znTC"         	ResZn:CSE_ZONE:znTC        	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
	                                                                        else if ( ResProj:PreCl_DataValid .AND. GlobalStatus( ResProj:PreCl_ZnCoolSetpt ) > 0 .AND.
	                                                                                 ResProj:IsPropFlexRun .AND. Type < 10) then  UNDEFINED
																									else if (LocalStatus( ZnTC        ) > 0 .AND. IfValidAnd( ZnModel == 3 )) then  Local( ZnTC        )
																									else if (IfValidAnd( ZnModel == 3 ) .AND. LocalCompAssigned( ActiveHVACSystem ))
																									then	if (IfValidAnd( ActiveHVACSystem:ConstClgSetpt > 0 ))
																											then	ActiveHVACSystem:ConstClgSetpt
																											else	UNDEFINED  endif
																									else	UNDEFINED  endif endif endif endif  }
; SAC 8/30/12 - modified to prevent output of thermostat setpoint expression if fixed setpoint (above) already defined (or if CSE zone model not = 'CZM')
	"Zone:CSE_ZONE:znTC_x"						ResZn:CSE_ZONE:znTC_x      	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
	                                                                        else if ( ResProj:PreCl_DataValid .AND. GlobalStatus( ResProj:PreCl_ZnCoolSetpt ) > 0 .AND.
	                                                                                 ResProj:IsPropFlexRun .AND. Type < 10) then  ResProj:PreCl_ZnCoolSetpt
																									else if ( ZnModel != 3 .OR. LocalStatus( ZnTC ) > 0 .OR. LocalStatus( CSE_ZONE:znTC ) > 0) then  UNDEFINED
																									else  Local(CoolTDaySched_CSE)  endif endif endif  }
	;"Default ResZn:CSE_ZONE:znTC_x"        	ResZn:CSE_ZONE:znTC_x      	= {	if (LocalStatus( ZnTC        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
	;																								else  switch( Local( Type ) )
	;																											case  2 :	; Living
	;																															"select( ISSEASONCOOLING, hourval(83,83,83,83,83,83,83,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,83), default 78 )"
	;																											case  3 :	; Sleeping
	;																															"select( ISSEASONCOOLING, hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,83,83,83,83,83,83,83,83,78,78,78), default 78 )"
	;																											default :	"select( ISSEASONCOOLING, hourval(78,78,78,78,78,78,78,83,83,83,83,83,83,82,81,80,79,78,78,78,78,78,78,78), default 78 )"
	;																										endswitch endif  }
	"Default ResZn:CSE_ZONE:znTD"         	ResZn:CSE_ZONE:znTD        	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if (LocalStatus( ZnTD        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTD        )  else  UNDEFINED  endif endif  }
	; SAC 1/3/13 - updated t-stat schedules to include design sizing schedule data
	"Default ResZn:CSE_ZONE:znTD_x"        	ResZn:CSE_ZONE:znTD_x      	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
																									else if (LocalStatus( ZnTD        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
																									else  Format("select( $dsDay==1, 77, $dsDay==2, 99, ISSEASONCOOLING, %g, default %g )", Local(SummerVentTemp), Local(WinterVentTemp))  endif endif  }

	"Default ResZn:CSE_ZONE:znQMxH"       	ResZn:CSE_ZONE:znQMxH      	= {	if (LocalStatus( ZnQMxH      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxH      )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znQMxHRated"  	ResZn:CSE_ZONE:znQMxHRated 	= {	if (LocalStatus( ZnQMxHRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxHRated )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znQMxC"       	ResZn:CSE_ZONE:znQMxC      	= {	if (LocalStatus( ZnQMxC      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxC      )  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:znQMxCRated"  	ResZn:CSE_ZONE:znQMxCRated 	= {	if (LocalStatus( ZnQMxCRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxCRated )  else  UNDEFINED  endif  }

			; Infiltration
	"Default ResZn:CSE_ZONE:infAC"       	ResZn:CSE_ZONE:infAC      		= {	if (LocalStatus( InfAC      ) > 0) then  Local( InfAC    		)  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:infELA"      	ResZn:CSE_ZONE:infELA     		= {	if (LocalStatus( InfELA     ) > 0) then  Local( InfELA   		)  else  UNDEFINED  endif  }
	"Default ResZn:CSE_ZONE:infShld"     	ResZn:CSE_ZONE:infShld    		= {	if (LocalStatus( InfShld    ) > 0) then  Local( InfShld  		)  else  UNDEFINED  endif  }
; SAC 9/12/12 - removed per call & e-mail from Bruce today
;	"Default ResZn:CSE_ZONE:infStories"  	ResZn:CSE_ZONE:infStories 		= {	if (LocalStatus( NumStories ) > 0) then  Local( NumStories 		)  else  UNDEFINED  endif  }
   "Set ResZn:CSE_ZONE:znAFMtr"            ResZn:CSE_ZONE:znAFMtr =                ; SAC 09/17/20 (tic #1247)    - SAC 10/01/20 (tic #1247)
      {  switch (AirFlowMeter)
            case  1 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[1] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[1]  endif
            case  2 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[2] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[2]  endif
            case  3 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[3] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[3]  endif
            case  4 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[4] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[4]  endif
            case  5 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[5] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[5]  endif
            case  6 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[6] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[6]  endif
            case  7 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[7] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[7]  endif
            case  8 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[8] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[8]  endif
            case  9 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[9] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[9]  endif
            case 10 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[10] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[10]  endif
            default :  UNDEFINED    endswitch  }

			; Internal Gains
	"Set ResZn:Gain[1]:Parent"			ResZn:Gain[1]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[2]:Parent"			ResZn:Gain[2]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[3]:Parent"			ResZn:Gain[3]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[4]:Parent"			ResZn:Gain[4]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[5]:Parent"			ResZn:Gain[5]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[6]:Parent"			ResZn:Gain[6]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[7]:Parent"			ResZn:Gain[7]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[8]:Parent"			ResZn:Gain[8]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[9]:Parent"			ResZn:Gain[9]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResZn:Gain[10]:Parent"			ResZn:Gain[10]:Parent		= {	Local( CSE_ZONE )  }


 ; CSE ZONE (OtherZone) creation & defaulting
;	"Create new ResOtherZn:CSE_ZONE"  			ResOtherZn:CSE_ZONE					= {	CreateComp( cseZONE, Local( Name ) + "-zn" )  }
	"Create new ResOtherZn:CSE_ZONE"  			ResOtherZn:CSE_ZONE					= {	CreateComp( cseZONE, substr( Name, 0, 50 ) + "-zn" )  }

	"Default ResOtherZn:CSE_ZONE:SourceOtherZone"  	ResOtherZn:CSE_ZONE:SourceOtherZone		= {	Local( Name 				)  }
	"Default ResOtherZn:CSE_ZONE:znModel"      ResOtherZn:CSE_ZONE:znModel     	= {	if (LocalStatus( ZnModel   ) > 0) then  Local( ZnModel 	)  else  UNDEFINED  endif  }
	"Set ResOtherZn:CSE_ZONE:znHIRatio"		    ResOtherZn:CSE_ZONE:znHIRatio		= {  10  }     ; SAC 02/11/22
	"Default ResOtherZn:CSE_ZONE:znArea"       ResOtherZn:CSE_ZONE:znArea      	= {	if (LocalStatus( Area      ) > 0) then  Local( Area 		)  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znVol"        ResOtherZn:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume    ) > 0) then  Local( Volume 	)  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znEaveZ"     	ResOtherZn:CSE_ZONE:znEaveZ    	= {	if (LocalStatus( Top ) > 0 .AND. Top > 0) then  Top
																												else  Bottom + (FloorHeight * (NumStories - 1)) + CeilingHeight  endif  }
	"Prevent invalid ResOtherZn:CSE_ZONE:znEaveZ"  ResOtherZn:CSE_ZONE:znEaveZ    = {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }

	"Default ResOtherZn:CSE_ZONE:znCeilingHt"  	ResOtherZn:CSE_ZONE:znCeilingHt 	= {	if (LocalStatus( CeilingHeight ) > 0) then  Local( CeilingHeight )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znFloorZ"     	ResOtherZn:CSE_ZONE:znFloorZ      = {	if (LocalStatus( Bottom        ) > 0) then  Local( Bottom        )  else  UNDEFINED  endif  }  ; SAC 3/28/13
	"Default ResOtherZn:CSE_ZONE:znCAir"       	ResOtherZn:CSE_ZONE:znCAir      	= {	if (LocalStatus( ZnCAir        ) > 0) then  Local( ZnCAir 		  )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znAzm"        	ResOtherZn:CSE_ZONE:znAzm       	= {	if (LocalStatus( ZnAzm         ) > 0) then  Local( ZnAzm 		  )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znSC"         	ResOtherZn:CSE_ZONE:znSC        	= {	if (LocalStatus( ZnSC          ) > 0) then  Local( ZnSC 			  )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znSC_x"        	ResOtherZn:CSE_ZONE:znSC_x      	= {	if (Type == 10 .OR. LocalStatus( ZnSC ) > 0) then  UNDEFINED
																													else  Format( "select( $radDiff >1., %g, default %g )", 0.5, 0.8 )  endif  }
			; znModel = CZM -
		;	thermostat setpoints
	; SAC 7/2/15 - new rule and revisions to subsequent rules to enable include file-defined thermostat schedules
	"Set cseOtherZone:IncludeFile (replacing thermostat setpoint properties)"
				ResOtherZn:CSE_ZONE:IncludeFile	= {	if (UseTstatIncFile > 0.5) then  TstatIncludeFile  else  UNDEFINED  endif  }

; SAC 3/9/20 - removed prior (non-Com) tstat schedule rules
;      ; change setpoint schedules for design rating   mjb  RESNET 02/12/16
;	"Reset ResOtherZn:CoolTDaySched for Design Rating model"
;			ResOtherZn:CoolTDaySched		= {	if ( ResProj:DRtgRefRunID == 2014) then  RuleLibrary( SchDay, "RESNET SZ Cool Hrly" )
;															else  UNCHANGED   endif  }
;	"Reset ResOtherZn:HeatTDaySched for Design Rating model"
;			ResOtherZn:HeatTDaySched		= {	if ( ResProj:DRtgRefRunID == 2014) then  RuleLibrary( SchDay, "RESNET SZ Heat Hrly" )
;															else  UNCHANGED   endif  }
;
;	"Setup heating setpoint profile CSE export string (OtherZone:HeatTDaySched_CSE)"															
;		ResOtherZn:HeatTDaySched_CSE	= {	if (UseTstatIncFile > 0.5) then  " "
;														else if (ConstHtgSetpt > 0)
;														then	Format( "select( $dsDay==1, 70, $dsDay==2, 60, ISSEASONCOOLING, %g, default %g) ", SummerHeatTemp, ConstHtgSetpt )
;														else if (LocalCompAssigned( HeatTDaySched ))
;													then  Format( "select( $dsDay==1, 70, $dsDay==2, 60, ISSEASONCOOLING, %g, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)) ",
;																SummerHeatTemp,
;																LocalRef( HeatTDaySched:Hr[1]  ), LocalRef( HeatTDaySched:Hr[2]  ), LocalRef( HeatTDaySched:Hr[3]  ), LocalRef( HeatTDaySched:Hr[4]  ),
;																LocalRef( HeatTDaySched:Hr[5]  ), LocalRef( HeatTDaySched:Hr[6]  ), LocalRef( HeatTDaySched:Hr[7]  ), LocalRef( HeatTDaySched:Hr[8]  ),
;																LocalRef( HeatTDaySched:Hr[9]  ), LocalRef( HeatTDaySched:Hr[10] ), LocalRef( HeatTDaySched:Hr[11] ), LocalRef( HeatTDaySched:Hr[12] ),
;							 									LocalRef( HeatTDaySched:Hr[13] ), LocalRef( HeatTDaySched:Hr[14] ), LocalRef( HeatTDaySched:Hr[15] ), LocalRef( HeatTDaySched:Hr[16] ),
;																LocalRef( HeatTDaySched:Hr[17] ), LocalRef( HeatTDaySched:Hr[18] ), LocalRef( HeatTDaySched:Hr[19] ), LocalRef( HeatTDaySched:Hr[20] ),
;																LocalRef( HeatTDaySched:Hr[21] ), LocalRef( HeatTDaySched:Hr[22] ), LocalRef( HeatTDaySched:Hr[23] ), LocalRef( HeatTDaySched:Hr[24] ) )
;													else  " "  endif endif endif  }
;
;	"Setup cooling setpoint profile CSE export string (OtherZone:CoolTDaySched_CSE)"
;		ResOtherZn:CoolTDaySched_CSE	= {	if (UseTstatIncFile > 0.5) then  " "
;														else if (LocalCompAssigned( CoolTDaySched ))
;													then  Format( "select( $dsDay==1, 83, $dsDay==2, 78, default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g))",
;																LocalRef( CoolTDaySched:Hr[1]  ), LocalRef( CoolTDaySched:Hr[2]  ), LocalRef( CoolTDaySched:Hr[3]  ), LocalRef( CoolTDaySched:Hr[4]  ),
;																LocalRef( CoolTDaySched:Hr[5]  ), LocalRef( CoolTDaySched:Hr[6]  ), LocalRef( CoolTDaySched:Hr[7]  ), LocalRef( CoolTDaySched:Hr[8]  ),
;																LocalRef( CoolTDaySched:Hr[9]  ), LocalRef( CoolTDaySched:Hr[10] ), LocalRef( CoolTDaySched:Hr[11] ), LocalRef( CoolTDaySched:Hr[12] ),
;																LocalRef( CoolTDaySched:Hr[13] ), LocalRef( CoolTDaySched:Hr[14] ), LocalRef( CoolTDaySched:Hr[15] ), LocalRef( CoolTDaySched:Hr[16] ),
;																LocalRef( CoolTDaySched:Hr[17] ), LocalRef( CoolTDaySched:Hr[18] ), LocalRef( CoolTDaySched:Hr[19] ), LocalRef( CoolTDaySched:Hr[20] ),
;																LocalRef( CoolTDaySched:Hr[21] ), LocalRef( CoolTDaySched:Hr[22] ), LocalRef( CoolTDaySched:Hr[23] ), LocalRef( CoolTDaySched:Hr[24] ),
;																Local(WinterCoolTemp) )
;													else  " "  endif endif  }
;		
;	"OtherZone:CSE_ZONE:znTH"     ResOtherZn:CSE_ZONE:znTH   	= {	if (UseTstatIncFile > 0.5) then  UNDEFINED
;																						else if (LocalStatus( ZnTH ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTH        )
;																						else  UNDEFINED  endif endif  }
;	"Default ResOtherZn:CSE_ZONE:znTH_x"   	ResOtherZn:CSE_ZONE:znTH_x   = {	if (UseTstatIncFile > 0.5) then  UNDEFINED
;																									else if ( ZnModel != 3 .OR. LocalStatus( ZnTH ) > 0 .OR. LocalStatus( CSE_ZONE:znTH ) > 0) then  UNDEFINED
;																									else  Local(HeatTDaySched_CSE)  endif endif }
;
;	"Default ResOtherZn:CSE_ZONE:znTC"     	ResOtherZn:CSE_ZONE:znTC     = {	if (UseTstatIncFile > 0.5) then  UNDEFINED
;	                                                                        else if ( ResProj:PreCl_DataValid .AND. GlobalStatus( ResProj:PreCl_ZnCoolSetpt ) > 0 .AND.
;	                                                                                 ResProj:IsPropFlexRun .AND. Type < 10) then  UNDEFINED
;																									else if (LocalStatus( ZnTC        ) > 0 .AND. IfValidAnd( ZnModel == 3 )) then  Local( ZnTC        )
;																									else if (IfValidAnd( ZnModel == 3 ) .AND. LocalCompAssigned( ActiveHVACSystem ))
;																									then	if (IfValidAnd( ActiveHVACSystem:ConstClgSetpt > 0 ))
;																											then	ActiveHVACSystem:ConstClgSetpt
;																											else	UNDEFINED  endif
;																									else	UNDEFINED  endif endif endif endif  }
;	"OtherZone:CSE_ZONE:znTC_x"				ResOtherZn:CSE_ZONE:znTC_x   = {	if (UseTstatIncFile > 0.5) then  UNDEFINED
;	                                                                        else if ( ResProj:PreCl_DataValid .AND. GlobalStatus( ResProj:PreCl_ZnCoolSetpt ) > 0 .AND.
;	                                                                                 ResProj:IsPropFlexRun .AND. Type < 10) then  ResProj:PreCl_ZnCoolSetpt
;																									else if ( ZnModel != 3 .OR. LocalStatus( ZnTC ) > 0 .OR. LocalStatus( CSE_ZONE:znTC ) > 0) then  UNDEFINED
;																									else  Local(CoolTDaySched_CSE)  endif endif endif  }

; SAC 3/9/20 - remove TD (desired temp) schedule - used for natural vent, which are not included in the OtherZone objects
;	"Default ResOtherZn:CSE_ZONE:znTD"      ResOtherZn:CSE_ZONE:znTD     = {	if (UseTstatIncFile > 0.5) then  UNDEFINED
;																									else if (LocalStatus( ZnTD        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTD        )  else  UNDEFINED  endif endif  }
;	"Default ResOtherZn:CSE_ZONE:znTD_x"    ResOtherZn:CSE_ZONE:znTD_x   = {	if (UseTstatIncFile > 0.5) then  UNDEFINED
;																									else if (LocalStatus( ZnTD        ) > 0 .OR.  Local( ZnModel ) != 3) then  UNDEFINED
;																									else  Format("select( $dsDay==1, 77, $dsDay==2, 99, ISSEASONCOOLING, %g, default %g )", Local(SummerVentTemp), Local(WinterVentTemp))  endif endif  }

   ; SAC 3/9/20 - added rules to post (Com-based) heating & cooling tstat schedules to OtherZones
   ; revised to prevent output of znTH_x & znTC_x for ResOtherZn's served by AirSys (these settings now in cseTERMINAL) - SAC 04/26/22
	"Default ResOtherZn:CSE_ZONE:znTH_x (heating tstat sched)"   	ResOtherZn:CSE_ZONE:znTH_x   =
      {	if (UseTstatIncFile > 0.5 .OR.
             LocalCompAssigned( ActiveHVACSystem ) == ComponentType( "AirSys" )) then  UNDEFINED
         else if ( ZnModel != 3 .OR. LocalStatus( HtgSetptSchRef ) < 1) then  UNDEFINED
         else if (IfValidAnd( HtgSetptSchRef:NumWeeks = 1 )==0 .OR. LocalCompAssigned( HtgSetptSchRef:SchWeekRef[1]:SchDaySunRef ) < 1 .OR. 
                           LocalCompAssigned( HtgSetptSchRef:SchWeekRef[1]:SchDaySatRef ) < 1 .OR. 
                           LocalCompAssigned( HtgSetptSchRef:SchWeekRef[1]:SchDayHolRef ) < 1 .OR. 
                           LocalCompAssigned( HtgSetptSchRef:SchWeekRef[1]:SchDayMonRef ) < 1 )
         then  PostError( "Invalid HtgSetptSchRef for OtherZone '%s'.", Name )
         else  Format("select( $DOWH==1, hourval(%s), $DOWH==8, hourval(%s), $DOWH==7, hourval(%s), default hourval(%s) )",
                         SchDayHoursString( HtgSetptSchRef:SchWeekRef[1]:SchDaySunRef ), SchDayHoursString( HtgSetptSchRef:SchWeekRef[1]:SchDayHolRef ),
                         SchDayHoursString( HtgSetptSchRef:SchWeekRef[1]:SchDaySatRef ), SchDayHoursString( HtgSetptSchRef:SchWeekRef[1]:SchDayMonRef ) )
         endif endif endif  }
	"Default ResOtherZn:CSE_ZONE:znTC_x (cooling tstat sched)"   	ResOtherZn:CSE_ZONE:znTC_x   =
      {	if (UseTstatIncFile > 0.5 .OR.
             LocalCompAssigned( ActiveHVACSystem ) == ComponentType( "AirSys" )) then  UNDEFINED
         else if ( ZnModel != 3 .OR. LocalStatus( ClgSetptSchRef ) < 1) then  UNDEFINED
         else if (IfValidAnd( ClgSetptSchRef:NumWeeks = 1 )==0 .OR. LocalCompAssigned( ClgSetptSchRef:SchWeekRef[1]:SchDaySunRef ) < 1 .OR. 
                           LocalCompAssigned( ClgSetptSchRef:SchWeekRef[1]:SchDaySatRef ) < 1 .OR. 
                           LocalCompAssigned( ClgSetptSchRef:SchWeekRef[1]:SchDayHolRef ) < 1 .OR. 
                           LocalCompAssigned( ClgSetptSchRef:SchWeekRef[1]:SchDayMonRef ) < 1 )
         then  PostError( "Invalid ClgSetptSchRef for OtherZone '%s'.", Name )
         else  Format("select( $DOWH==1, hourval(%s), $DOWH==8, hourval(%s), $DOWH==7, hourval(%s), default hourval(%s) )",
                         SchDayHoursString( ClgSetptSchRef:SchWeekRef[1]:SchDaySunRef ), SchDayHoursString( ClgSetptSchRef:SchWeekRef[1]:SchDayHolRef ),
                         SchDayHoursString( ClgSetptSchRef:SchWeekRef[1]:SchDaySatRef ), SchDayHoursString( ClgSetptSchRef:SchWeekRef[1]:SchDayMonRef ) )
         endif endif endif  }

	"Default ResOtherZn:CSE_ZONE:znQMxH"       ResOtherZn:CSE_ZONE:znQMxH      	= {	if (LocalStatus( ZnQMxH      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxH      )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znQMxHRated"  ResOtherZn:CSE_ZONE:znQMxHRated 	= {	if (LocalStatus( ZnQMxHRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxHRated )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znQMxC"       ResOtherZn:CSE_ZONE:znQMxC      	= {	if (LocalStatus( ZnQMxC      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxC      )  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:znQMxCRated"  ResOtherZn:CSE_ZONE:znQMxCRated 	= {	if (LocalStatus( ZnQMxCRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxCRated )  else  UNDEFINED  endif  }

			; Infiltration
	"Default ResOtherZn:CSE_ZONE:infAC"       	ResOtherZn:CSE_ZONE:infAC      	= {	if (LocalStatus( InfAC      ) > 0) then  Local( InfAC    		)  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:infELA"      	ResOtherZn:CSE_ZONE:infELA     	= {	if (LocalStatus( InfELA     ) > 0) then  Local( InfELA   		)  else  UNDEFINED  endif  }
	"Default ResOtherZn:CSE_ZONE:infShld"     	ResOtherZn:CSE_ZONE:infShld    	= {	if (LocalStatus( InfShld    ) > 0) then  Local( InfShld  		)  else  UNDEFINED  endif  }
	"Set ResOtherZn:CSE_ZONE:znAFMtr"     	   ResOtherZn:CSE_ZONE:znAFMtr    	=        ; SAC 09/17/20 (tic #1247)    - SAC 10/01/20 (tic #1247)
      {  switch (AirFlowMeter)
            case  1 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[1] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[1]  endif
            case  2 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[2] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[2]  endif
            case  3 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[3] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[3]  endif
            case  4 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[4] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[4]  endif
            case  5 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[5] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[5]  endif
            case  6 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[6] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[6]  endif
            case  7 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[7] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[7]  endif
            case  8 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[8] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[8]  endif
            case  9 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[9] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[9]  endif
            case 10 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[10] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[10]  endif
            default :  UNDEFINED    endswitch  }

			; Internal Gains
	"Set ResOtherZn:Gain[1]:Parent"			ResOtherZn:Gain[1]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[2]:Parent"			ResOtherZn:Gain[2]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[3]:Parent"			ResOtherZn:Gain[3]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[4]:Parent"			ResOtherZn:Gain[4]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[5]:Parent"			ResOtherZn:Gain[5]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[6]:Parent"			ResOtherZn:Gain[6]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[7]:Parent"			ResOtherZn:Gain[7]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[8]:Parent"			ResOtherZn:Gain[8]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[9]:Parent"			ResOtherZn:Gain[9]:Parent		= {	Local( CSE_ZONE )  }
	"Set ResOtherZn:Gain[10]:Parent"			ResOtherZn:Gain[10]:Parent		= {	Local( CSE_ZONE )  }


	"Set ResProj:IntGain_MoMult_CSE"		ResProj:IntGain_MoMult_CSE	= {
				if (Local( IntGain_MoMult[1] ) == 1 .AND. Local( IntGain_MoMult[2]  ) == 1 .AND. Local( IntGain_MoMult[3]  ) == 1 .AND. Local( IntGain_MoMult[4]  ) == 1 .AND.
					 Local( IntGain_MoMult[5] ) == 1 .AND. Local( IntGain_MoMult[6]  ) == 1 .AND. Local( IntGain_MoMult[7]  ) == 1 .AND. Local( IntGain_MoMult[8]  ) == 1 .AND.
					 Local( IntGain_MoMult[9] ) == 1 .AND. Local( IntGain_MoMult[10] ) == 1 .AND. Local( IntGain_MoMult[11] ) == 1 .AND. Local( IntGain_MoMult[12] ) == 1 )
				then	" "
				else  Format( "* \n        choose1($month, %g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g)",
											Local( IntGain_MoMult[1] ), Local( IntGain_MoMult[2]  ), Local( IntGain_MoMult[3]  ), Local( IntGain_MoMult[4]  ),
											Local( IntGain_MoMult[5] ), Local( IntGain_MoMult[6]  ), Local( IntGain_MoMult[7]  ), Local( IntGain_MoMult[8]  ),
											Local( IntGain_MoMult[9] ), Local( IntGain_MoMult[10] ), Local( IntGain_MoMult[11] ), Local( IntGain_MoMult[12] ) )
				endif  } 


; SAC 4/14/16 - MOVED UP HERE above DHWSYS creation (to ensure proper DHWSYS temperature/object references wihtin DHW objects)
 ; CSE ZONE (Garage) creation & defaulting
	"Create new ResGarage:CSE_ZONE" 				ResGarage:CSE_ZONE					= {	if (Global( ResProj:HasGarage ) < 0.1 .OR. Local( Area ) < 0.1 .OR. Local( Volume ) < 0.1) then  UNCHANGED
																										else  CreateComp( cseZONE, substr( Name, 0, 49 ) + "-grg" )  endif  }
;																										else  CreateComp( cseZONE, Local( Name ) + "-grg" )  endif  }

	"Default ResGarage:CSE_ZONE:SourceGarage"	ResGarage:CSE_ZONE:SourceGarage	= {	Local( Name 				)  }
	"Default ResGarage:CSE_ZONE:znModel"      ResGarage:CSE_ZONE:znModel     	= {	"UZX"  }
	"Set ResGarage:CSE_ZONE:znHIRatio"		   ResGarage:CSE_ZONE:znHIRatio		= {  10  }     ; SAC 02/11/22
	"Default ResGarage:CSE_ZONE:znArea"       ResGarage:CSE_ZONE:znArea      	= {	if (LocalStatus( Area      ) > 0) then  Local( Area 		)  else  UNDEFINED  endif  }
	"Default ResGarage:CSE_ZONE:znVol"        ResGarage:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume    ) > 0) then  Local( Volume 	)  else  UNDEFINED  endif  }
  ; SAC 2/4/13 - added more rules to set additional properties needed to accurately model a garage
	"Default ResGarage:CSE_ZONE:znEaveZ"     	ResGarage:CSE_ZONE:znEaveZ    	= {	if (MaxAll( ResZn:GrndFlrClgHeight ) > 3) then  Bottom + MaxAll( ResZn:GrndFlrClgHeight )
																										else  Bottom + 9  endif  }
	"Prevent invalid ResGarage:...:znEaveZ"	ResGarage:CSE_ZONE:znEaveZ    	= {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }
	"Default ResGarage:CSE_ZONE:znFloorZ"     ResGarage:CSE_ZONE:znFloorZ      = {	if (LocalStatus( Bottom ) > 0) then  Local( Bottom )  else  UNDEFINED  endif  }  ; SAC 3/28/13

	"Default ResGarage:CSE_ZONE:znCAir"       ResGarage:CSE_ZONE:znCAir      	= {	0.01  }
			; Infiltration - ensure only AirNet modeling...
	"Default ResGarage:CSE_ZONE:infAC"       	ResGarage:CSE_ZONE:infAC      	= {	0  }
	"Default ResGarage:CSE_ZONE:infELA"      	ResGarage:CSE_ZONE:infELA     	= {	0  }
   "Set ResGarage:CSE_ZONE:znAFMtr"          ResGarage:CSE_ZONE:znAFMtr =                 ; SAC 10/01/20 (tic #1247)
      {  switch (AirFlowMeter)
            case  1 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[1] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[1]  endif
            case  2 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[2] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[2]  endif
            case  3 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[3] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[3]  endif
            case  4 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[4] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[4]  endif
            case  5 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[5] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[5]  endif
            case  6 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[6] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[6]  endif
            case  7 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[7] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[7]  endif
            case  8 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[8] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[8]  endif
            case  9 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[9] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[9]  endif
            case 10 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[10] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[10]  endif
            default :  UNDEFINED    endswitch  }


; SAC 4/14/16 - MOVED UP from below in order to have all CSE Zones present for DHWSYS interconnections
 ; CSE ZONE (Attic) creation & defaulting
	"Create new ResAttic:CSE_ZONE"  				ResAttic:CSE_ZONE						= {	if (FloorArea < 0.5) then  UNDEFINED		; SAC 9/13/13 - added logic to prevent simulation of attic zones w/ no area
																										else  CreateComp( cseZONE, substr( Name, 0, 49 ) + "-atc" )  endif  }
;																										else  CreateComp( cseZONE, Local( Name ) + "-atc" )  endif  }
	"Default ResAttic:CSE_ZONE:SourceAttic"  	ResAttic:CSE_ZONE:SourceAttic		= {	Local( Name 				)  }
	"Default ResAttic:CSE_ZONE:znModel"      	ResAttic:CSE_ZONE:znModel     	= {	"UZX"  }
	"Set ResAttic:CSE_ZONE:znHIRatio"		   ResAttic:CSE_ZONE:znHIRatio	   = {  10  }     ; SAC 02/11/22
	"Default ResAttic:CSE_ZONE:znArea"       	ResAttic:CSE_ZONE:znArea      	= {	if (LocalStatus( CeilArea      ) > 0) then  Local( CeilArea 		)  else  UNDEFINED  endif  }
	"Default ResAttic:CSE_ZONE:znVol"        	ResAttic:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume        ) > 0) then  Local( Volume 			)  else  UNDEFINED  endif  }
   "Set ResAttic:CSE_ZONE:znAFMtr"           ResAttic:CSE_ZONE:znAFMtr =                  ; SAC 10/01/20 (tic #1247)
      {  switch (AirFlowMeter)
            case  1 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[1] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[1]  endif
            case  2 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[2] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[2]  endif
            case  3 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[3] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[3]  endif
            case  4 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[4] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[4]  endif
            case  5 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[5] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[5]  endif
            case  6 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[6] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[6]  endif
            case  7 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[7] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[7]  endif
            case  8 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[8] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[8]  endif
            case  9 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[9] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[9]  endif
            case 10 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[10] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[10]  endif
            default :  UNDEFINED    endswitch  }


; SAC 4/14/16 - MOVED UP here from below in order for all CSE ZONEs to be present for DHWSYS interconnections
 ; CSE ZONE (CrawlSpace) creation & defaulting
	"Create new ResCrawlSpc:CSE_ZONE"  					ResCrawlSpc:CSE_ZONE							= {	if (LocalStatus( Area ) == 0 .OR. Local( Area ) < 0.5) then  UNCHANGED
																																else  CreateComp( cseZONE, substr( Name, 0, 48 ) + "-crwl" )  endif  }
;																																else  CreateComp( cseZONE, Local( Name ) + "-crwl" )  endif  }
	"Set ResCrawlSpc:CSEZoneName"  						ResCrawlSpc:CSEZoneName						= {	if (LocalCompAssigned( CSE_ZONE ) == 0) then  UNDEFINED
																																else  LocalRef( CSE_ZONE:Name )  endif  }
	"Default ResCrawlSpc:CSE_ZONE:SourceCrawlSpace"  ResCrawlSpc:CSE_ZONE:SourceCrawlSpace	= {	Local( Name )  }
	"Default ResCrawlSpc:CSE_ZONE:znModel"      		ResCrawlSpc:CSE_ZONE:znModel     			= {	"UZX"  }
	"Set ResCrawlSpc:CSE_ZONE:znHIRatio"		      ResCrawlSpc:CSE_ZONE:znHIRatio		      = {  10  }     ; SAC 02/11/22
	"Default ResCrawlSpc:CSE_ZONE:znArea"       		ResCrawlSpc:CSE_ZONE:znArea      			= {	Area                  }
	"Default ResCrawlSpc:CSE_ZONE:znVol"        		ResCrawlSpc:CSE_ZONE:znVol       			= {	Area * AvgWallHeight  }
	"Default ResCrawlSpc:CSE_ZONE:znEaveZ"       		ResCrawlSpc:CSE_ZONE:znEaveZ     			= {	AvgWallHeight + 0.75  }
   "Set ResCrawlSpc:CSE_ZONE:znAFMtr"               ResCrawlSpc:CSE_ZONE:znAFMtr =                   ; SAC 10/01/20 (tic #1247)
      {  switch (AirFlowMeter)
            case  1 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[1] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[1]  endif
            case  2 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[2] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[2]  endif
            case  3 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[3] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[3]  endif
            case  4 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[4] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[4]  endif
            case  5 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[5] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[5]  endif
            case  6 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[6] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[6]  endif
            case  7 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[7] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[7]  endif
            case  8 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[8] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[8]  endif
            case  9 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[9] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[9]  endif
            case 10 :  if (GlobalCompAssigned( ResProj:CSE_AirFlowMETERs[10] ) < 1) then  UNDEFINED  else  ResProj:CSE_AirFlowMETERs[10]  endif
            default :  UNDEFINED    endswitch  }

END
;*************************************************************************


;*************************************************************************
RULELIST "CSE_Set2016InternalGains" 1 0 0 1
	"Set Proj:CSE_DefineName[34]"		Proj:CSE_DefineName[34]	= { "Cook_WD" }
	"Set Proj:CSE_DefineName[35]"		Proj:CSE_DefineName[35]	= { "Cook_WEH" }
	"Set Proj:CSE_DefineName[36]"		Proj:CSE_DefineName[36]	= { "TV_WD" }
	"Set Proj:CSE_DefineName[37]"		Proj:CSE_DefineName[37]	= { "TV_WEH" }
	"Set Proj:CSE_DefineName[38]"		Proj:CSE_DefineName[38]	= { "STB_WD" }
	"Set Proj:CSE_DefineName[39]"		Proj:CSE_DefineName[39]	= { "STB_WEH" }
	"Set Proj:CSE_DefineName[40]"		Proj:CSE_DefineName[40]	= { "Comp_WD" }
	"Set Proj:CSE_DefineName[41]"		Proj:CSE_DefineName[41]	= { "Comp_WEH" }
	"Set Proj:CSE_DefineName[42]"		Proj:CSE_DefineName[42]	= { "RMEL_WD" }
	"Set Proj:CSE_DefineName[43]"		Proj:CSE_DefineName[43]	= { "RMEL_WEH" }
	"Set Proj:CSE_DefineName[44]"		Proj:CSE_DefineName[44]	= { "IntLight_WD" }
	"Set Proj:CSE_DefineName[45]"		Proj:CSE_DefineName[45]	= { "IntLight_WEH" }
	"Set Proj:CSE_DefineName[46]"		Proj:CSE_DefineName[46]	= { "ExtLight_WD" }
	"Set Proj:CSE_DefineName[47]"		Proj:CSE_DefineName[47]	= { "ExtLight_WEH" }
	"Set Proj:CSE_DefineName[48]"		Proj:CSE_DefineName[48]	= { "Cook_SM" }
	"Set Proj:CSE_DefineName[49]"		Proj:CSE_DefineName[49]	= { "TV_SM" }
	"Set Proj:CSE_DefineName[50]"		Proj:CSE_DefineName[50]	= { "STB_SM" }
	"Set Proj:CSE_DefineName[51]"		Proj:CSE_DefineName[51]	= { "Comp_SM" }
	"Set Proj:CSE_DefineName[52]"		Proj:CSE_DefineName[52]	= { "Other_SM" }
	"Set Proj:CSE_DefineName[53]"		Proj:CSE_DefineName[53]	= { "RefrConst_WD" }
	"Set Proj:CSE_DefineName[54]"		Proj:CSE_DefineName[54]	= { "RefrConst_WEH" }
	"Set Proj:CSE_DefineName[55]"		Proj:CSE_DefineName[55]	= { "RefrTemp_WD" }
	"Set Proj:CSE_DefineName[56]"		Proj:CSE_DefineName[56]	= { "RefrTemp_WEH" }
	"Set Proj:CSE_DefineName[57]"		Proj:CSE_DefineName[57]	= { UNDEFINED  }				; add next here 
	"Set Proj:CSE_DefineName[58]"		Proj:CSE_DefineName[58]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[59]"		Proj:CSE_DefineName[59]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[60]"		Proj:CSE_DefineName[60]	= { UNDEFINED  }

	"Set Proj:CSE_DefineType[34]"		Proj:CSE_DefineType[34]	= { 3 }	; 3 => string, no quotes
	"Set Proj:CSE_DefineType[35]"		Proj:CSE_DefineType[35]	= { 3 }
	"Set Proj:CSE_DefineType[36]"		Proj:CSE_DefineType[36]	= { 3 }
	"Set Proj:CSE_DefineType[37]"		Proj:CSE_DefineType[37]	= { 3 }
	"Set Proj:CSE_DefineType[38]"		Proj:CSE_DefineType[38]	= { 3 }
	"Set Proj:CSE_DefineType[39]"		Proj:CSE_DefineType[39]	= { 3 }
	"Set Proj:CSE_DefineType[40]"		Proj:CSE_DefineType[40]	= { 3 }
	"Set Proj:CSE_DefineType[41]"		Proj:CSE_DefineType[41]	= { 3 }
	"Set Proj:CSE_DefineType[42]"		Proj:CSE_DefineType[42]	= { 3 }
	"Set Proj:CSE_DefineType[43]"		Proj:CSE_DefineType[43]	= { 3 }
	"Set Proj:CSE_DefineType[44]"		Proj:CSE_DefineType[44]	= { 3 }
	"Set Proj:CSE_DefineType[45]"		Proj:CSE_DefineType[45]	= { 3 }
	"Set Proj:CSE_DefineType[46]"		Proj:CSE_DefineType[46]	= { 3 }
	"Set Proj:CSE_DefineType[47]"		Proj:CSE_DefineType[47]	= { 3 }
	"Set Proj:CSE_DefineType[48]"		Proj:CSE_DefineType[48]	= { 3 }
	"Set Proj:CSE_DefineType[49]"		Proj:CSE_DefineType[49]	= { 3 }
	"Set Proj:CSE_DefineType[50]"		Proj:CSE_DefineType[50]	= { 3 }
	"Set Proj:CSE_DefineType[51]"		Proj:CSE_DefineType[51]	= { 3 }
	"Set Proj:CSE_DefineType[52]"		Proj:CSE_DefineType[52]	= { 3 }
	"Set Proj:CSE_DefineType[53]"		Proj:CSE_DefineType[53]	= { 3 }
	"Set Proj:CSE_DefineType[54]"		Proj:CSE_DefineType[54]	= { 3 }
	"Set Proj:CSE_DefineType[55]"		Proj:CSE_DefineType[55]	= { 3 }
	"Set Proj:CSE_DefineType[56]"		Proj:CSE_DefineType[56]	= { 3 }
	"Set Proj:CSE_DefineType[57]"		Proj:CSE_DefineType[57]	= { UNDEFINED  }				; add next here
	"Set Proj:CSE_DefineType[58]"		Proj:CSE_DefineType[58]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[59]"		Proj:CSE_DefineType[59]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[60]"		Proj:CSE_DefineType[60]	= { UNDEFINED  }

	"Set Proj:CSE_DefineString[34]"	Proj:CSE_DefineString[34]	= {   "     hourval( .005,.004,.004,.004,.004,.014,.019,.025,.026,.022,.021,.029,.035,.032,.034,.052,.115,.193,.180,.098,.042,.020,.012,.010)" }
	"Set Proj:CSE_DefineString[35]"	Proj:CSE_DefineString[35]	= {    "    hourval( .005,.004,.003,.003,.003,.005,.010,.027,.048,.048,.046,.055,.063,.059,.062,.068,.091,.139,.129,.072,.032,.014,.009,.005)" }
	"Set Proj:CSE_DefineString[36]"	Proj:CSE_DefineString[36]	= { "       hourval( .035,.026,.023,.022,.021,.021,.025,.032,.038,.040,.038,.038,.041,.042,.042,.041,.044,.049,.056,.064,.070,.074,.067,.051)" }
	"Set Proj:CSE_DefineString[37]"	Proj:CSE_DefineString[37]	= {  "      hourval( .035,.027,.022,.021,.020,.020,.022,.029,.037,.043,.042,.039,.040,.042,.045,.048,.051,.052,.056,.061,.065,.069,.064,.050)" }
	"Set Proj:CSE_DefineString[38]"	Proj:CSE_DefineString[38]	= {  "      hourval( .040,.040,.040,.040,.040,.040,.040,.041,.040,.040,.040,.040,.040,.040,.041,.041,.042,.043,.044,.045,.046,.047,.045,.045)" }
	"Set Proj:CSE_DefineString[39]"	Proj:CSE_DefineString[39]	= {   "     hourval( .041,.041,.040,.041,.040,.040,.040,.040,.041,.042,.042,.041,.041,.041,.041,.042,.042,.043,.044,.044,.045,.045,.044,.039)" }
	"Set Proj:CSE_DefineString[40]"	Proj:CSE_DefineString[40]	= {   "     hourval( .036,.033,.032,.032,.031,.032,.034,.036,.039,.043,.045,.045,.046,.046,.046,.047,.048,.049,.049,.049,.049,.048,.044,.041)" }
	"Set Proj:CSE_DefineString[41]"	Proj:CSE_DefineString[41]	= {    "    hourval( .036,.034,.033,.033,.032,.033,.033,.035,.038,.042,.044,.045,.046,.047,.047,.048,.049,.049,.048,.048,.048,.047,.044,.041)" }
	"Set Proj:CSE_DefineString[42]"	Proj:CSE_DefineString[42]	= {   "     hourval( .037,.035,.034,.034,.032,.036,.042,.044,.037,.032,.033,.033,.032,.033,.035,.037,.044,.053,.058,.060,.062,.060,.052,.045)" }
	"Set Proj:CSE_DefineString[43]"	Proj:CSE_DefineString[43]	= {    "    hourval( .037,.035,.034,.034,.032,.036,.042,.044,.037,.032,.033,.033,.032,.033,.035,.037,.044,.053,.058,.060,.062,.060,.052,.045)" }
	"Set Proj:CSE_DefineString[44]"	Proj:CSE_DefineString[44]	= {       " hourval( .023,.019,.015,.017,.021,.031,.042,.041,.034,.029,.027,.025,.021,.021,.021,.026,.031,.044,.084,.117,.113,.096,.063,.039)" }
	"Set Proj:CSE_DefineString[45]"	Proj:CSE_DefineString[45]	= {        "hourval( .023,.019,.015,.017,.021,.031,.042,.041,.034,.029,.027,.025,.021,.021,.021,.026,.031,.044,.084,.117,.113,.096,.063,.039)" }
	"Set Proj:CSE_DefineString[46]"	Proj:CSE_DefineString[46]	= {       " hourval( .046,.046,.046,.046,.046,.037,.035,.034,.033,.028,.022,.015,.012,.011,.011,.012,.019,.037,.049,.065,.091,.105,.091,.063)" }
	"Set Proj:CSE_DefineString[47]"	Proj:CSE_DefineString[47]	= {        "hourval( .046,.046,.045,.045,.046,.045,.044,.041,.036,.030,.024,.016,.012,.011,.011,.012,.019,.038,.048,.060,.083,.098,.085,.059)" }
; SAC 4/21/16 - installed monthly multiplier fixes from BAW
;	"Set Proj:CSE_DefineString[48]"	Proj:CSE_DefineString[48]	= {   "  choose1( $month, 1.094,1.065,1.074,.889,.891,.935,.993,.919,.923,.92,1.128,1.055)" }
	"Set Proj:CSE_DefineString[48]"	Proj:CSE_DefineString[48]	= {   "  choose1( $month, 1.094,1.065,1.074,0.889,0.891,0.935,0.993,0.92,0.923,0.92,1.128,1.168)" }
	"Set Proj:CSE_DefineString[49]"	Proj:CSE_DefineString[49]	= { "    choose1( $month, 1.032,.991,.986,.99,.971,.971,1.002,1.013,1.008,1.008,1.02,1.008)" }
	"Set Proj:CSE_DefineString[50]"	Proj:CSE_DefineString[50]	= {  "   choose1( $month, 1.02,.84,.92,.98,.91,.94,1.05,1.06,1.06,1.14,1.03,1.050)" }
;	"Set Proj:CSE_DefineString[51]"	Proj:CSE_DefineString[51]	= {   "  choose1( $month, .98,.86,.89,1.11,1.14,.99,1.05,1.01,.96,.97,.99,1.040)" }
	"Set Proj:CSE_DefineString[51]"	Proj:CSE_DefineString[51]	= {   "  choose1( $month, 0.98,0.87,0.89,1.11,1.14,0.99,1.05,1.01,0.96,0.97,0.99,1.04)" }
;	"Set Proj:CSE_DefineString[52]"	Proj:CSE_DefineString[52]	= {    " choose1( $month, 1.19,1.11,1.02,.93,.84,.8,.82,.88,.98,1.07,1.16,1.21)" }
	"Set Proj:CSE_DefineString[52]"	Proj:CSE_DefineString[52]	= {    " choose1( $month,  1.19,1.11,1.02,.93,.84,.8,.82,.88,.98,1.07,1.16,1.2)" }
	"Set Proj:CSE_DefineString[53]"	Proj:CSE_DefineString[53]	= {  " hourval( -0.5436,-0.3646,-0.4044,-0.3871,-0.5341,-0.7521,-0.3747,0.0041,-0.1293,-0.4644,-0.4800,-0.4351,-0.2195,-0.3301,-0.0919,-0.1686,-0.4819,-0.4731,-0.2223,0.0604,-0.1466,-0.3214,-0.4113,-0.7701)" }
	"Set Proj:CSE_DefineString[54]"	Proj:CSE_DefineString[54]	= {   "hourval( -0.3467,-0.2779,-0.2844,-0.2954,-0.4680,-0.5127,-0.7110,-0.5662,0.0463,-0.2995,-0.2388,-0.2646,-0.2905,-0.2730,-0.3306,-0.0031,-0.4356,-0.2580,0.2384,0.1176,-0.0458,-0.0596,-0.5300,0.0197 )" }
	"Set Proj:CSE_DefineString[55]"	Proj:CSE_DefineString[55]	= { "  hourval( 0.0195,0.0167,0.0169,0.0165,0.0183,0.0218,0.0178,0.0136,0.0151,0.0189,0.0188,0.0183,0.0156,0.0169,0.0137,0.0149,0.0197,0.0208,0.0184,0.0144,0.0166,0.0184,0.0188,0.0229)" }
	"Set Proj:CSE_DefineString[56]"	Proj:CSE_DefineString[56]	= {  " hourval( 0.0171,0.0156,0.0155,0.0154,0.0175,0.0181,0.0212,0.0201,0.0130,0.0176,0.0165,0.0171,0.0177,0.0176,0.0182,0.0139,0.0197,0.0180,0.0121,0.0135,0.0154,0.0150,0.0205,0.0129)" }
	"Set Proj:CSE_DefineString[57]"	Proj:CSE_DefineString[57]	= { UNDEFINED  }				; add next here
	"Set Proj:CSE_DefineString[58]"	Proj:CSE_DefineString[58]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[59]"	Proj:CSE_DefineString[59]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[60]"	Proj:CSE_DefineString[60]	= { UNDEFINED  }
END

RULELIST "CSE_BlastInternalGains" 1 0 0 1
	"Set Proj:CSE_DefineName[34]"		Proj:CSE_DefineName[34]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[35]"		Proj:CSE_DefineName[35]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[36]"		Proj:CSE_DefineName[36]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[37]"		Proj:CSE_DefineName[37]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[38]"		Proj:CSE_DefineName[38]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[39]"		Proj:CSE_DefineName[39]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[40]"		Proj:CSE_DefineName[40]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[41]"		Proj:CSE_DefineName[41]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[42]"		Proj:CSE_DefineName[42]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[43]"		Proj:CSE_DefineName[43]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[44]"		Proj:CSE_DefineName[44]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[45]"		Proj:CSE_DefineName[45]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[46]"		Proj:CSE_DefineName[46]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[47]"		Proj:CSE_DefineName[47]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[48]"		Proj:CSE_DefineName[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[49]"		Proj:CSE_DefineName[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[50]"		Proj:CSE_DefineName[50]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[51]"		Proj:CSE_DefineName[51]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[52]"		Proj:CSE_DefineName[52]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[53]"		Proj:CSE_DefineName[53]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[54]"		Proj:CSE_DefineName[54]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[55]"		Proj:CSE_DefineName[55]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[56]"		Proj:CSE_DefineName[56]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[57]"		Proj:CSE_DefineName[57]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[58]"		Proj:CSE_DefineName[58]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[59]"		Proj:CSE_DefineName[59]	= { UNDEFINED  }
	"Set Proj:CSE_DefineName[60]"		Proj:CSE_DefineName[60]	= { UNDEFINED  }

	"Set Proj:CSE_DefineType[34]"		Proj:CSE_DefineType[34]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[35]"		Proj:CSE_DefineType[35]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[36]"		Proj:CSE_DefineType[36]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[37]"		Proj:CSE_DefineType[37]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[38]"		Proj:CSE_DefineType[38]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[39]"		Proj:CSE_DefineType[39]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[40]"		Proj:CSE_DefineType[40]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[41]"		Proj:CSE_DefineType[41]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[42]"		Proj:CSE_DefineType[42]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[43]"		Proj:CSE_DefineType[43]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[44]"		Proj:CSE_DefineType[44]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[45]"		Proj:CSE_DefineType[45]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[46]"		Proj:CSE_DefineType[46]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[47]"		Proj:CSE_DefineType[47]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[48]"		Proj:CSE_DefineType[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[49]"		Proj:CSE_DefineType[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[50]"		Proj:CSE_DefineType[50]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[51]"		Proj:CSE_DefineType[51]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[52]"		Proj:CSE_DefineType[52]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[53]"		Proj:CSE_DefineType[53]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[54]"		Proj:CSE_DefineType[54]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[55]"		Proj:CSE_DefineType[55]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[56]"		Proj:CSE_DefineType[56]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[57]"		Proj:CSE_DefineType[57]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[58]"		Proj:CSE_DefineType[58]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[59]"		Proj:CSE_DefineType[59]	= { UNDEFINED  }
	"Set Proj:CSE_DefineType[60]"		Proj:CSE_DefineType[60]	= { UNDEFINED  }

	"Set Proj:CSE_DefineString[34]"	Proj:CSE_DefineString[34]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[35]"	Proj:CSE_DefineString[35]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[36]"	Proj:CSE_DefineString[36]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[37]"	Proj:CSE_DefineString[37]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[38]"	Proj:CSE_DefineString[38]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[39]"	Proj:CSE_DefineString[39]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[40]"	Proj:CSE_DefineString[40]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[41]"	Proj:CSE_DefineString[41]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[42]"	Proj:CSE_DefineString[42]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[43]"	Proj:CSE_DefineString[43]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[44]"	Proj:CSE_DefineString[44]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[45]"	Proj:CSE_DefineString[45]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[46]"	Proj:CSE_DefineString[46]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[47]"	Proj:CSE_DefineString[47]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[48]"	Proj:CSE_DefineString[48]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[49]"	Proj:CSE_DefineString[49]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[50]"	Proj:CSE_DefineString[50]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[51]"	Proj:CSE_DefineString[51]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[52]"	Proj:CSE_DefineString[52]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[53]"	Proj:CSE_DefineString[53]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[54]"	Proj:CSE_DefineString[54]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[55]"	Proj:CSE_DefineString[55]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[56]"	Proj:CSE_DefineString[56]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[57]"	Proj:CSE_DefineString[57]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[58]"	Proj:CSE_DefineString[58]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[59]"	Proj:CSE_DefineString[59]	= { UNDEFINED  }
	"Set Proj:CSE_DefineString[60]"	Proj:CSE_DefineString[60]	= { UNDEFINED  }
END
;*************************************************************************


;*************************************************************************
RULELIST "CSE_SimulationPrep_Zones_IntGains_part2" 1 0 0 1
;*************************************************************************

	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Setup lighting profile CSE export string (Zone:LtgDaySched_CSE)"
				ResZn:LtgDaySched_CSE	= {	if (LocalCompAssigned( LtgDaySched ))
												;	then  Format( "* \n		hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
													then  Format( "* \n		select( $dsDay==1, 0., default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( LtgDaySched:Hr[1]  ), LocalRef( LtgDaySched:Hr[2]  ), LocalRef( LtgDaySched:Hr[3]  ), LocalRef( LtgDaySched:Hr[4]  ),
																LocalRef( LtgDaySched:Hr[5]  ), LocalRef( LtgDaySched:Hr[6]  ), LocalRef( LtgDaySched:Hr[7]  ), LocalRef( LtgDaySched:Hr[8]  ),
																LocalRef( LtgDaySched:Hr[9]  ), LocalRef( LtgDaySched:Hr[10] ), LocalRef( LtgDaySched:Hr[11] ), LocalRef( LtgDaySched:Hr[12] ),
																LocalRef( LtgDaySched:Hr[13] ), LocalRef( LtgDaySched:Hr[14] ), LocalRef( LtgDaySched:Hr[15] ), LocalRef( LtgDaySched:Hr[16] ),
																LocalRef( LtgDaySched:Hr[17] ), LocalRef( LtgDaySched:Hr[18] ), LocalRef( LtgDaySched:Hr[19] ), LocalRef( LtgDaySched:Hr[20] ),
																LocalRef( LtgDaySched:Hr[21] ), LocalRef( LtgDaySched:Hr[22] ), LocalRef( LtgDaySched:Hr[23] ), LocalRef( LtgDaySched:Hr[24] ) )
													else  " "  endif  }

	; SAC 4/13/16 - revised ltg gains for T24-2016
	"Create new ResZn:GainLights"				ResZn:GainLights = {	if (( ResProj:IntGainsMethod >  2013 .AND. IfValidAnd( ResProj:AvgLtgGainPerCFA > 0 )==0) .OR.
																						 ( ResProj:IntGainsMethod <= 2013 .AND. IfValidAnd( Ltg_Gain > 0 )==0)) then UNCHANGED
																					else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znLtg" )  endif  }
	"Set ResZn:GainLights parent cseZONE"	ResZn:GainLights:Parent = {  Local( CSE_ZONE )  }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainLights gnPower_x"		ResZn:GainLights:gnPower_x = {
				if ( ResProj:IntGainsMethod <= 2013)
				then	Format("%g * %g %s %s)", (Local( Ltg_Gain ) * 3413), Local( CondFloorArea ), Local( LtgDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
				else	Format("%g * %g * select( $dsDay==1, 0., $ISWEHOL, IntLight_WEH, Default IntLight_WD) * Other_SM",  ResProj:AvgLtgGainPerCFA, ValidOr( CondFloorArea, 0 ) )
				endif  }
	"Set ResZn:GainLights:gnFrRad"			ResZn:GainLights:gnFrRad		= {	if ( ResProj:IntGainsMethod <= 2013) then  0.4  else  0.2  endif   }
	"Set ResZn:GainLights:gnEndUse"		ResZn:GainLights:gnEndUse	= {	"Lit" }
	"Set ResZn:GainLights:gnMeter"			ResZn:GainLights:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																								else  UNDEFINED  endif  }
   ; OtherZone Lighting
         ; updates to several ResOtherZn:Gain gnPower settings to include 0 for htg & 1 for clg design days - SAC 05/15/22
	"Create new ResOtherZn:GainLights"            ResOtherZn:GainLights  =
      {  if (IfValidAnd( IntLPDRegSim > 0 )==0 .OR. LocalCompAssigned( IntLtgRegSchRef ) < 1) then  UNCHANGED
         else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znLtg" )  endif  }
	"Set ResOtherZn:GainLights parent cseZONE"    ResOtherZn:GainLights:Parent  = {  Local( CSE_ZONE )  }
	"Set ResOtherZn:GainLights gnPower_x"         ResOtherZn:GainLights:gnPower_x  =
      {  if (IfValidAnd( IntLtgRegSchRef:NumWeeks = 1 )==0 .OR. LocalCompAssigned( IntLtgRegSchRef:SchWeekRef[1]:SchDaySunRef ) < 1 .OR. 
                           LocalCompAssigned( IntLtgRegSchRef:SchWeekRef[1]:SchDaySatRef ) < 1 .OR. 
                           LocalCompAssigned( IntLtgRegSchRef:SchWeekRef[1]:SchDayHolRef ) < 1 .OR. 
                           LocalCompAssigned( IntLtgRegSchRef:SchWeekRef[1]:SchDayMonRef ) < 1 )
         then  PostError( "Invalid IntLtgRegSchRef for OtherZone '%s'.", Name )
         else  Format("%g * %g * 3.412 * select( $dsDay==1, 0, $dsDay==2, 1, $DOWH==1, hourval(%s), $DOWH==8, hourval(%s), $DOWH==7, hourval(%s), default hourval(%s) )",
                              IntLPDRegSim, ValidOr( Area, 0 ), SchDayHoursString( IntLtgRegSchRef:SchWeekRef[1]:SchDaySunRef ), SchDayHoursString( IntLtgRegSchRef:SchWeekRef[1]:SchDayHolRef ),
                                                             SchDayHoursString( IntLtgRegSchRef:SchWeekRef[1]:SchDaySatRef ), SchDayHoursString( IntLtgRegSchRef:SchWeekRef[1]:SchDayMonRef ) )
         endif  }
      ; $dayOfWeek	Day of week, 1 - 7; 1 corresponds to Sunday, 2 to Monday, etc. Variation: daily.
      ; $DOWH	Day of week 1-7 except 8 on every observed holiday. Variation: daily.
	"Set ResOtherZn:GainLights:gnFrRad"		ResOtherZn:GainLights:gnFrRad	  = {	0.2  }
	"Set ResOtherZn:GainLights:gnEndUse"	ResOtherZn:GainLights:gnEndUse  = {	"Lit" }
	"Set ResOtherZn:GainLights:gnMeter"		ResOtherZn:GainLights:gnMeter	  =               ; switched from Proj:CSE_ElecMETER to CSE_Elec2METER in order to track as REGULATED Ltg - SAC 04/13/22 (Com tic #3366)
      {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_Elec2METER )
			else  UNDEFINED  endif  }

				;	People
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Setup people profile CSE export string (Zone:PplDaySched_CSE)"
				ResZn:PplDaySched_CSE	= {	if (LocalCompAssigned( PplDaySched ))
												;	then  Format( "* \n		hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
													then  Format( "* \n		select( $dsDay==1, 0., default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( PplDaySched:Hr[1]  ), LocalRef( PplDaySched:Hr[2]  ), LocalRef( PplDaySched:Hr[3]  ), LocalRef( PplDaySched:Hr[4]  ),
																LocalRef( PplDaySched:Hr[5]  ), LocalRef( PplDaySched:Hr[6]  ), LocalRef( PplDaySched:Hr[7]  ), LocalRef( PplDaySched:Hr[8]  ),
																LocalRef( PplDaySched:Hr[9]  ), LocalRef( PplDaySched:Hr[10] ), LocalRef( PplDaySched:Hr[11] ), LocalRef( PplDaySched:Hr[12] ),
																LocalRef( PplDaySched:Hr[13] ), LocalRef( PplDaySched:Hr[14] ), LocalRef( PplDaySched:Hr[15] ), LocalRef( PplDaySched:Hr[16] ),
																LocalRef( PplDaySched:Hr[17] ), LocalRef( PplDaySched:Hr[18] ), LocalRef( PplDaySched:Hr[19] ), LocalRef( PplDaySched:Hr[20] ),
																LocalRef( PplDaySched:Hr[21] ), LocalRef( PplDaySched:Hr[22] ), LocalRef( PplDaySched:Hr[23] ), LocalRef( PplDaySched:Hr[24] ) )
													else  " "  endif  }

	"Create new ResZn:GainPeople"  ResZn:GainPeople = {
        if (Local( Ppl_GainPerCFA ) <= 0) then UNCHANGED
        else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znPpl" )  endif  }
	"Set ResZn:GainPeople parent cseZONE"	ResZn:GainPeople:Parent = {  Local( CSE_ZONE )  }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainPeople gnPower_x"			ResZn:GainPeople:gnPower_x = {
		Format("%g * %g %s %s)", Local( Ppl_GainPerCFA ), Local( CondFloorArea ), Local( PplDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) ) }
	"Set ResZn:GainPeople:gnFrRad"			ResZn:GainPeople:gnFrRad	= { 0.3 }
	"Set ResZn:GainPeople:gnFrLat"			ResZn:GainPeople:gnFrLat = { 0.427 }

   ; OtherZone People
   "Create new ResOtherZn:GainPeople"            ResOtherZn:GainPeople  =
      {  if ( (IfValidAnd( OccSensHtRt > 0 )==0 .AND. IfValidAnd( OccLatHtRt > 0 )==0) .OR.
              IfValidAnd( MinOccNumSim > 0 )==0 .OR. LocalCompAssigned( OccSchRef ) < 1) then  UNCHANGED
         else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znPpl" )  endif  }
   "Set ResOtherZn:GainPeople parent cseZONE"    ResOtherZn:GainPeople:Parent  = {  Local( CSE_ZONE )  }
   "Set ResOtherZn:GainPeople gnPower_x"         ResOtherZn:GainPeople:gnPower_x =
      {  if (IfValidAnd( OccSchRef:NumWeeks = 1 )==0 .OR. LocalCompAssigned( OccSchRef:SchWeekRef[1]:SchDaySunRef ) < 1 .OR. 
                           LocalCompAssigned( OccSchRef:SchWeekRef[1]:SchDaySatRef ) < 1 .OR. 
                           LocalCompAssigned( OccSchRef:SchWeekRef[1]:SchDayHolRef ) < 1 .OR. 
                           LocalCompAssigned( OccSchRef:SchWeekRef[1]:SchDayMonRef ) < 1 )
         then  PostError( "Invalid OccSchRef for OtherZone '%s'.", Name )
         else  Format("%g * %g * select( $dsDay==1, 0, $dsDay==2, 1, $DOWH==1, hourval(%s), $DOWH==8, hourval(%s), $DOWH==7, hourval(%s), default hourval(%s) )",
                              MinOccNumSim, (ValidOr( OccSensHtRt, 0 ) + ValidOr( OccLatHtRt, 0 )),
                              SchDayHoursString( OccSchRef:SchWeekRef[1]:SchDaySunRef ), SchDayHoursString( OccSchRef:SchWeekRef[1]:SchDayHolRef ),
                              SchDayHoursString( OccSchRef:SchWeekRef[1]:SchDaySatRef ), SchDayHoursString( OccSchRef:SchWeekRef[1]:SchDayMonRef ) )   ; MinOccNumSim (#Ppl) * OccSensHtRt (Btu/person)
         endif  }
   "Set ResOtherZn:GainPeople:gnFrLat"        ResOtherZn:GainPeople:gnFrLat =
      {  OccLatHtRt / (OccSensHtRt + OccLatHtRt)  }      ; frac of Latent / (Sens + Lat)
   "Set ResOtherZn:GainPeople:gnFrRad"        ResOtherZn:GainPeople:gnFrRad =
      {  (1 - GainPeople:gnFrLat) * .524  }   ; same radiant vs. Convective split as w/ Res models

	; Television gain - starting w/ T24-2016 - SAC 4/13/16
	"Create new ResZn:GainTelevision"				ResZn:GainTelevision = {	if ( ResProj:IntGainsMethod <= 2013 .OR. 
																								 ( ResProj:IsMultiFamily < 0.5 .AND. IfValidAnd( ResProj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znTV" )  endif  }
	"Set ResZn:GainTelevision parent cseZONE"	ResZn:GainTelevision:Parent = {  Local( CSE_ZONE )  }
	; SAC 4/22/16 - fix bug in TV, STB, Comp & MEL by replacing SumAll() with SumChildren() when setting gains for each individual Zone (tic #649)
	"Set ResZn:GainTelevision gnPower_x"			ResZn:GainTelevision:gnPower_x = {
				if ( ResProj:IsMultiFamily < 0.5)
				then	Format("((265 + (31.8 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, TV_WEH, Default TV_WD) * TV_SM", ResProj:SimNumBedrooms, (CondFloorArea / ResProj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, TV_WEH, Default TV_WD) * TV_SM", SumChildren( DwellUnit:TotalTVGain ) )  endif  }
	"Set ResZn:GainTelevision:gnFrRad"			ResZn:GainTelevision:gnFrRad	= {	0.4   }
	"Set ResZn:GainTelevision:gnEndUse"			ResZn:GainTelevision:gnEndUse	= {	"Rcp" }
	"Set ResZn:GainTelevision:gnMeter"			ResZn:GainTelevision:gnMeter	= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

	; Set top box gain - starting w/ T24-2016 - SAC 4/13/16
	"Create new ResZn:GainSetTopBox"				ResZn:GainSetTopBox = {	if ( ResProj:IntGainsMethod <= 2013 .OR. 
																								 ( ResProj:IsMultiFamily < 0.5 .AND. IfValidAnd( ResProj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znSTB" )  endif  }
	"Set ResZn:GainSetTopBox parent cseZONE"	ResZn:GainSetTopBox:Parent 		= {  Local( CSE_ZONE )  }
	"Set ResZn:GainSetTopBox gnPower_x"			ResZn:GainSetTopBox:gnPower_x	= {
				if ( ResProj:IsMultiFamily < 0.5)
				then	Format("((76 + (59.4 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, STB_WEH, Default STB_WD) * STB_SM", ResProj:SimNumBedrooms, (CondFloorArea / ResProj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, STB_WEH, Default STB_WD) * STB_SM", SumChildren( DwellUnit:TotalSTBGain ) )  endif }
	"Set ResZn:GainSetTopBox:gnFrRad"				ResZn:GainSetTopBox:gnFrRad		= {	0.2   }
	"Set ResZn:GainSetTopBox:gnEndUse"			ResZn:GainSetTopBox:gnEndUse	= {	"Rcp" }
	"Set ResZn:GainSetTopBox:gnMeter"				ResZn:GainSetTopBox:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

	; Computer gain - starting w/ T24-2016 - SAC 4/13/16
	"Create new ResZn:GainComputer"				ResZn:GainComputer = {	if ( ResProj:IntGainsMethod <= 2013 .OR. 
																								 ( ResProj:IsMultiFamily < 0.5 .AND. IfValidAnd( ResProj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znComp" )  endif  }
	"Set ResZn:GainComputer parent cseZONE"		ResZn:GainComputer:Parent 		= {  Local( CSE_ZONE )  }
	"Set ResZn:GainComputer gnPower_x"			ResZn:GainComputer:gnPower_x	= {
				if ( ResProj:IsMultiFamily < 0.5)
				then	Format("((79 + (55.4 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, Comp_WEH, Default Comp_WD) * Comp_SM", ResProj:SimNumBedrooms, (CondFloorArea / ResProj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, Comp_WEH, Default Comp_WD) * Comp_SM", SumChildren( DwellUnit:TotalCompGain ) )  endif }
	"Set ResZn:GainComputer:gnFrRad"				ResZn:GainComputer:gnFrRad		= {	0.2   }
	"Set ResZn:GainComputer:gnEndUse"				ResZn:GainComputer:gnEndUse		= {	"Rcp" }
	"Set ResZn:GainComputer:gnMeter"				ResZn:GainComputer:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

			;	Misc. internal gains
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Setup equipment profile CSE export string (Zone:EqpDaySched_CSE)"
				ResZn:EqpDaySched_CSE	= {	if (LocalCompAssigned( EqpDaySched ))
													then  Format( "* \n		select( $dsDay==1, 0., default hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( EqpDaySched:Hr[1]  ), LocalRef( EqpDaySched:Hr[2]  ), LocalRef(EqpDaySched:Hr[3]  ), LocalRef( EqpDaySched:Hr[4]  ),
																LocalRef( EqpDaySched:Hr[5]  ), LocalRef( EqpDaySched:Hr[6]  ), LocalRef(EqpDaySched:Hr[7]  ), LocalRef( EqpDaySched:Hr[8]  ),
																LocalRef( EqpDaySched:Hr[9]  ), LocalRef( EqpDaySched:Hr[10] ), LocalRef(EqpDaySched:Hr[11] ), LocalRef( EqpDaySched:Hr[12] ),
																LocalRef( EqpDaySched:Hr[13] ), LocalRef( EqpDaySched:Hr[14] ), LocalRef(EqpDaySched:Hr[15] ), LocalRef( EqpDaySched:Hr[16] ),
																LocalRef( EqpDaySched:Hr[17] ), LocalRef( EqpDaySched:Hr[18] ), LocalRef(EqpDaySched:Hr[19] ), LocalRef( EqpDaySched:Hr[20] ),
																LocalRef( EqpDaySched:Hr[21] ), LocalRef( EqpDaySched:Hr[22] ), LocalRef(EqpDaySched:Hr[23] ), LocalRef( EqpDaySched:Hr[24] ) )
													else  " "  endif  }

	"Create new ResZn:GainMisc"					ResZn:GainMisc			= {	if (( ResProj:IntGainsMethod <= 2013 .AND. Local( Msc_GainPerCFA ) <= 0) .OR.
																								 ( ResProj:IntGainsMethod >  2013 .AND. ResProj:IsMultiFamily < 0.5 .AND. IfValidAnd( ResProj:CondFloorArea > 0 )==0)) then UNCHANGED
																							else if ( ResProj:IntGainsMethod <= 2013)
																							then	CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znMsc" )
																							else	CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znMEL" )  endif endif }
	"Set ResZn:GainMisc parent cseZONE"		ResZn:GainMisc:Parent = {  Local( CSE_ZONE )  }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainMisc gnPower_x"				ResZn:GainMisc:gnPower_x = {
				if ( ResProj:IntGainsMethod <= 2013)
				then	Format("%g * %g %s %s)", (Local( Msc_GainPerCFA ) * 3413), Local( CondFloorArea ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
				else if ( ResProj:IsMultiFamily < 0.5)
				then	Format("((570 + (198.9 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, RMEL_WEH, Default RMEL_WD) * Other_SM", ResProj:SimNumBedrooms, (CondFloorArea / ResProj:CondFloorArea) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, RMEL_WEH, Default RMEL_WD) * Other_SM", SumChildren( DwellUnit:TotalMscElecGain ) )  endif endif  }
	"Set ResZn:GainMisc:gnFrRad"				ResZn:GainMisc:gnFrRad	= {	0.3   }
	"Set ResZn:GainMisc:gnFrLat"				ResZn:GainMisc:gnFrLat	= {	0.03  }
	"Set ResZn:GainMisc:gnEndUse"				ResZn:GainMisc:gnEndUse	= {	"Rcp" }
	"Set ResZn:GainMisc:gnMeter"				ResZn:GainMisc:gnMeter	= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																								else  UNDEFINED  endif  }

   ; OtherZone Misc (MELs)
   "Create new ResOtherZn:GainMisc"              ResOtherZn:GainMisc  =
      {  if (IfValidAnd( RecptPwrDens > 0 )==0 .OR. LocalCompAssigned( RecptSchRef ) < 1) then  UNCHANGED
         else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znMEL" )  endif  }
   "Set ResOtherZn:GainMisc parent cseZONE"      ResOtherZn:GainMisc:Parent  = {  Local( CSE_ZONE )  }
   "Set ResOtherZn:GainMisc gnPower_x"           ResOtherZn:GainMisc:gnPower_x  =
      {  if (IfValidAnd( RecptSchRef:NumWeeks = 1 )==0 .OR. LocalCompAssigned( RecptSchRef:SchWeekRef[1]:SchDaySunRef ) < 1 .OR. 
                           LocalCompAssigned( RecptSchRef:SchWeekRef[1]:SchDaySatRef ) < 1 .OR. 
                           LocalCompAssigned( RecptSchRef:SchWeekRef[1]:SchDayHolRef ) < 1 .OR. 
                           LocalCompAssigned( RecptSchRef:SchWeekRef[1]:SchDayMonRef ) < 1 )
         then  PostError( "Invalid RecptSchRef for OtherZone '%s'.", Name )
         else  Format("%g * %g * 3.412 * select( $dsDay==1, 0, $dsDay==2, 1, $DOWH==1, hourval(%s), $DOWH==8, hourval(%s), $DOWH==7, hourval(%s), default hourval(%s) )",
                           RecptPwrDens, ValidOr( Area, 0 ), SchDayHoursString( RecptSchRef:SchWeekRef[1]:SchDaySunRef ), SchDayHoursString( RecptSchRef:SchWeekRef[1]:SchDayHolRef ),
                                                             SchDayHoursString( RecptSchRef:SchWeekRef[1]:SchDaySatRef ), SchDayHoursString( RecptSchRef:SchWeekRef[1]:SchDayMonRef ) )
         endif  }
      ; $dayOfWeek   Day of week, 1 - 7; 1 corresponds to Sunday, 2 to Monday, etc. Variation: daily.
      ; $DOWH   Day of week 1-7 except 8 on every observed holiday. Variation: daily.
   "Set ResOtherZn:GainMisc:gnFrRad"    ResOtherZn:GainMisc:gnFrRad  = {  ValidOr( RecptRadFrac, 0 )   }
   "Set ResOtherZn:GainMisc:gnFrLat"    ResOtherZn:GainMisc:gnFrLat  = {  ValidOr( RecptLatFrac, 0 )  }
   "Set ResOtherZn:GainMisc:gnEndUse"   ResOtherZn:GainMisc:gnEndUse = {  "Rcp" }
   "Set ResOtherZn:GainMisc:gnMeter"    ResOtherZn:GainMisc:gnMeter  = {  if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
                                                                        else  UNDEFINED  endif  }

; add new Gain to adjust internal gains to match RESNET  mjb   11/18/15
	"Create new ResZn:GainRESNET"  ResZn:GainRESNET = {
        if (Local( Ltg_Gain ) <= 0 .OR. ResProj:DRtgRefRunID != 2014) then UNDEFINED
        else  CreateComp( cseGAIN, substr( Name, 0, 44 ) + "-znRESNET" )  endif  }
	"Set ResZn:GainRESNET parent cseZONE"	ResZn:GainRESNET:Parent = {  Local( CSE_ZONE )  }		
	"Set ResZn:GainRESNET gnPower_x"			ResZn:GainRESNET:gnPower_x = {
					Format("%g * %g %s %s)", -4.833, Local( CondFloorArea ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) ) }
	"Set ResZn:GainRESNET:gnFrLat"				ResZn:GainRESNET:gnFrLat	= { 0.1 }
;	"Set ResZn:GainRESNET:gnEndUse"			ResZn:GainRESNET:gnEndUse = { "RESNET" }

; SAC 5/11/16 - now handled via DwellUnitDHW object
;	"Set DwellUnit:GainCtrlDHWSYS"		DwellUnit:GainCtrlDHWSYS		= {			; SAC 4/15/16 - T24-2016 gains
;				if ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily < 0.5) then  UNDEFINED		; won't be needed to setup DHW-linked Gains
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 1 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[1] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[1]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 2 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[2] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[2]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 3 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[3] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[3]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 4 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[4] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[4]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 5 .AND. LocalCompAssigned( DwellUnitTypeRef:cseDHWSYSRefs[5] ) > 0) then   DwellUnitTypeRef:cseDHWSYSRefs[5]
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 1 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[1] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[1]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[1]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 2 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[2] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[2]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[2]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 3 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[3] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[3]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[3]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 4 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[4] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[4]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[4]:cseDHWSYSRef
;				else if (DwellUnitTypeRef:NumDHWSysTypes >= 5 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[5] ) > 0 .AND. LocalCompAssigned( DwellUnitTypeRef:DHWSysRef[5]:cseDHWSYSRef ) > 0) then   DwellUnitTypeRef:DHWSysRef[5]:cseDHWSYSRef
;				else	UNDEFINED		; ERROR
;				endif endif endif endif endif endif endif endif endif endif endif  }

   ; SAC 4/15/16 - T24-2016 gains
   ; added logic to handl ADU-only addition alone models - SAC 06/01/21 (tic #1218)
   "Set ResZn:GainCtrlDHWSYS[1]"      ResZn:GainCtrlDHWSYS[1]      =         ; added logic to check for and assign Alt & Exist DHW systems for ADU-only models - SAC 10/25/21 (user support related to tic #1218)
         {  if (ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily > 0.5) then  UNDEFINED      ; won't be needed to setup DHW-linked Gains
            else if (DHWSys1Status == 3 .AND. LocalCompAssigned(    DHWSys1 ) > 0 .AND. LocalCompAssigned(    DHWSys1:cseDHWSYSRef[1] ) > 0) then     DHWSys1:cseDHWSYSRef[1]
            else if (DHWSys1Status == 3 .AND. LocalCompAssigned(    DHWSys1 ) > 0 .AND. LocalCompAssigned(    DHWSys1:cseDHWSYSRef[2] ) > 0) then     DHWSys1:cseDHWSYSRef[2]
            else if (DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0 .AND. LocalCompAssigned( AltDHWSys1:cseDHWSYSRef[1] ) > 0) then  AltDHWSys1:cseDHWSYSRef[1]
            else if (DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0 .AND. LocalCompAssigned( AltDHWSys1:cseDHWSYSRef[2] ) > 0) then  AltDHWSys1:cseDHWSYSRef[2]
            else if (DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0 .AND. LocalCompAssigned(  exDHWSys1:cseDHWSYSRef[1] ) > 0) then   exDHWSys1:cseDHWSYSRef[1]
            else if (DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0 .AND. LocalCompAssigned(  exDHWSys1:cseDHWSYSRef[2] ) > 0) then   exDHWSys1:cseDHWSYSRef[2]
            else if (DHWSys2Status == 3 .AND. LocalCompAssigned(    DHWSys2 ) > 0 .AND. LocalCompAssigned(    DHWSys2:cseDHWSYSRef[1] ) > 0) then     DHWSys2:cseDHWSYSRef[1]
            else if (DHWSys2Status == 3 .AND. LocalCompAssigned(    DHWSys2 ) > 0 .AND. LocalCompAssigned(    DHWSys2:cseDHWSYSRef[2] ) > 0) then     DHWSys2:cseDHWSYSRef[2]
            else if (DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2 ) > 0 .AND. LocalCompAssigned( AltDHWSys2:cseDHWSYSRef[1] ) > 0) then  AltDHWSys2:cseDHWSYSRef[1]
            else if (DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2 ) > 0 .AND. LocalCompAssigned( AltDHWSys2:cseDHWSYSRef[2] ) > 0) then  AltDHWSys2:cseDHWSYSRef[2]
            else if (DHWSys2Status == 1 .AND. LocalCompAssigned(  exDHWSys2 ) > 0 .AND. LocalCompAssigned(  exDHWSys2:cseDHWSYSRef[1] ) > 0) then   exDHWSys2:cseDHWSYSRef[1]
            else if (DHWSys2Status == 1 .AND. LocalCompAssigned(  exDHWSys2 ) > 0 .AND. LocalCompAssigned(  exDHWSys2:cseDHWSYSRef[2] ) > 0) then   exDHWSys2:cseDHWSYSRef[2]
            else   UNDEFINED      ; ERROR
            endif endif endif endif endif endif endif endif endif endif endif endif endif  }
   "Set ResZn:GainCtrlDHWSYS[2]"      ResZn:GainCtrlDHWSYS[2]      =         ; SAC 4/15/16 - T24-2016 gains
         {  if ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily > 0.5 .OR. LocalCompAssigned( GainCtrlDHWSYS[1] )==0) then  UNDEFINED      ; won't be needed to setup DHW-linked Gains
            else if ( (DHWSys1Status == 3 .AND. LocalCompAssigned(    DHWSys1 ) > 0 .AND. LocalCompAssigned(    DHWSys1:cseDHWSYSRef[1] ) > 0) .OR.
                      (DHWSys1Status == 3 .AND. LocalCompAssigned(    DHWSys1 ) > 0 .AND. LocalCompAssigned(    DHWSys1:cseDHWSYSRef[2] ) > 0) .OR.
                      (DHWSys1Status == 2 .AND. LocalCompAssigned( AltDHWSys1 ) > 0 .AND. LocalCompAssigned( AltDHWSys1:cseDHWSYSRef[1] ) > 0) .OR.
                      (DHWSys1Status == 1 .AND. LocalCompAssigned(  exDHWSys1 ) > 0 .AND. LocalCompAssigned(  exDHWSys1:cseDHWSYSRef[1] ) > 0) )
            then  ; we have gain #1 set based on DHWSys #1 - set second gain based on DHWSys #2
                       if (DHWSys2Status == 3 .AND. LocalCompAssigned(    DHWSys2 ) > 0 .AND. LocalCompAssigned(    DHWSys2:cseDHWSYSRef[1] ) > 0) then     DHWSys2:cseDHWSYSRef[1]
                  else if (DHWSys2Status == 3 .AND. LocalCompAssigned(    DHWSys2 ) > 0 .AND. LocalCompAssigned(    DHWSys2:cseDHWSYSRef[2] ) > 0) then     DHWSys2:cseDHWSYSRef[2]
                  else if (DHWSys2Status == 2 .AND. LocalCompAssigned( AltDHWSys2 ) > 0 .AND. LocalCompAssigned( AltDHWSys2:cseDHWSYSRef[1] ) > 0) then  AltDHWSys2:cseDHWSYSRef[1]
                  else if (DHWSys2Status == 1 .AND. LocalCompAssigned(  exDHWSys2 ) > 0 .AND. LocalCompAssigned(  exDHWSys2:cseDHWSYSRef[1] ) > 0) then   exDHWSys2:cseDHWSYSRef[1]
                  else   UNDEFINED  endif endif endif endif
            else   UNDEFINED
            endif endif  }

			;	Appliances
;	"Create ResZn:GainRefrig if requested"	ResZn:Action		= { if ( Global( ResProj:Appl_HaveRefrig[1]) == 1) then
	"Create ResZn:GainRefrig if requested"	ResZn:Action		= {	if (Appl_RefrigGain > 0) then  EvalRulelist( "CreateGainRefrig", 1 )
																					else UNCHANGED endif }

   ; SAC 4/14/16 - revised for T24-2016 gains - Dishwasher done by DwellUnit for 2016 multifamily
   "Create ResZn:GainDish if requested"       ResZn:Action          = {   if (Appl_DishGain > 0 .AND. ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily < 0.5)) then
                                                                           EvalRulelist( "CreateGainDish_Zone", 1 )
                                                                        else UNCHANGED endif }
   ; SAC 7/26/16 - added to ensure multiple dishwasher gains, one for each DHWSys for single family models (tic #711)
   "Create ResZn:GainDish-2 if requested"     ResZn:Action          = {   if (Appl_DishGain > 0 .AND. ResProj:IntGainsMethod > 2013 .AND. ResProj:IsMultiFamily < 0.5 .AND.
                                                                            LocalCompAssigned( GainCtrlDHWSYS[2] )) then
                                                                           EvalRulelist( "CreateGainDish_Zone_2", 1 )
                                                                        else UNCHANGED endif }
	"Create DwellUnitDHW:GainDish if needed"	DwellUnitDHW:Action	= {	if (IfValidAnd( DwellUnitTypeRef:HaveDish > 0 ) .AND. ResProj:IntGainsMethod > 2013) then
																									EvalRulelist( "CreateGainDish_DwellUnitDHW", 1 )
																								else UNCHANGED endif }

	"Create ResZn:GainCooking if requested"		ResZn:Action		= {	if (Appl_CookGain[1] > 0 .OR. Appl_CookGain[2] > 0 .OR. Appl_CookGain[3] > 0) then
																							EvalRulelist( "CreateGainCooking", 1 )
																						else UNCHANGED endif }

	; SAC 4/14/16 - revised for T24-2016 gains - ClothesWasher done by DwellUnit for 2016 multifamily
   "Create ResZn:GainWasher if requested"         ResZn:Action            = {   if (Appl_WasherGain > 0 .AND. ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily < 0.5)) then
                                                                                 EvalRulelist( "CreateGainWasher_Zone", 1 )
                                                                              else UNCHANGED endif }
   ; SAC 7/26/16 - added to ensure multiple washer gains, one for each DHWSys for single family models (tic #711)
   "Create ResZn:GainWasher-2 if requested"       ResZn:Action            = {   if (Appl_WasherGain > 0 .AND. ResProj:IntGainsMethod > 2013 .AND. ResProj:IsMultiFamily < 0.5 .AND.
                                                                                  LocalCompAssigned( GainCtrlDHWSYS[2] )) then
                                                                                 EvalRulelist( "CreateGainWasher_Zone_2", 1 )
                                                                              else UNCHANGED endif }
	; SAC 4/22/16 - added logic to ensure WasherZoneRef valid before creating washer gain for each DwellUnit
	"Create DwellUnitDHW:GainWasher if requested"	DwellUnitDHW:Action	= {	if (IfValidAnd( DwellUnitTypeRef:HaveWasher > 0 ) .AND. ResProj:IntGainsMethod > 2013 .AND.
																											 ParentCompAssigned( WasherZoneRef )) then
																											EvalRulelist( "CreateGainWasher_DwellUnitDHW", 1 )
																										else UNCHANGED endif }

   ; SAC 4/14/16 - revised for T24-2016 gains - ClothesDryer done by DwellUnit for 2016 multifamily
   "Create ResZn:GainDryer if requested"         ResZn:Action          = {   if ( (Appl_DryerGain[1] > 0 .OR. Appl_DryerGain[2] > 0 .OR. Appl_DryerGain[3] > 0) .AND.
                                                                                ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily < 0.5)) then
                                                                              EvalRulelist( "CreateGainDryer_Zone", 1 )
                                                                           else UNCHANGED endif }
   ; SAC 7/26/16 - added to ensure multiple set of dryer gains, one for each DHWSys for single family models (tic #711)
   "Create ResZn:GainDryer-2 if requested"       ResZn:Action          = {   if ( (Appl_DryerGain[1] > 0 .OR. Appl_DryerGain[2] > 0 .OR. Appl_DryerGain[3] > 0) .AND.
                                                                                ResProj:IntGainsMethod > 2013 .AND. ResProj:IsMultiFamily < 0.5 .AND.
                                                                                LocalCompAssigned( GainCtrlDHWSYS[2] )) then
                                                                               EvalRulelist( "CreateGainDryer_Zone_2", 1 )
                                                                           else UNCHANGED endif }
   ; SAC 4/22/16 - added logic to ensure DryerZoneRef valid before creating dryer gain for each DwellUnit
   "Create DwellUnitDHW:GainDryer if requested"   DwellUnitDHW:Action   = {   if (IfValidAnd( DwellUnitTypeRef:HaveDryer > 0 ) .AND. ResProj:IntGainsMethod > 2013 .AND.
                                                                               ParentCompAssigned( DryerZoneRef )) then
                                                                              EvalRulelist( "CreateGainDryer_DwellUnitDHW", 1 )
                                                                           else UNCHANGED endif }
		;	Exterior lights
	"Setup exterior lighting profile CSE export string (Zone:ExtLtgDaySched_CSE)"
				ResZn:ExtLtgDaySched_CSE	= {	if (LocalCompAssigned( ExtLtgDaySched ))
													then  Format( "* \n		hourval(%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g,%g) ",
																LocalRef( ExtLtgDaySched:Hr[1]  ), LocalRef( ExtLtgDaySched:Hr[2]  ), LocalRef( ExtLtgDaySched:Hr[3]  ), LocalRef( ExtLtgDaySched:Hr[4]  ),
																LocalRef( ExtLtgDaySched:Hr[5]  ), LocalRef( ExtLtgDaySched:Hr[6]  ), LocalRef( ExtLtgDaySched:Hr[7]  ), LocalRef( ExtLtgDaySched:Hr[8]  ),
																LocalRef( ExtLtgDaySched:Hr[9]  ), LocalRef( ExtLtgDaySched:Hr[10] ), LocalRef( ExtLtgDaySched:Hr[11] ), LocalRef( ExtLtgDaySched:Hr[12] ),
																LocalRef( ExtLtgDaySched:Hr[13] ), LocalRef( ExtLtgDaySched:Hr[14] ), LocalRef( ExtLtgDaySched:Hr[15] ), LocalRef( ExtLtgDaySched:Hr[16] ),
																LocalRef( ExtLtgDaySched:Hr[17] ), LocalRef( ExtLtgDaySched:Hr[18] ), LocalRef( ExtLtgDaySched:Hr[19] ), LocalRef( ExtLtgDaySched:Hr[20] ),
																LocalRef( ExtLtgDaySched:Hr[21] ), LocalRef( ExtLtgDaySched:Hr[22] ), LocalRef( ExtLtgDaySched:Hr[23] ), LocalRef( ExtLtgDaySched:Hr[24] ) )
													else  " "  endif  }
	; SAC 4/13/16 - revised Extltg gains for T24-2016
	"Create new ResZn:GainExtLights"  			ResZn:GainExtLights = {	if (( ResProj:IntGainsMethod >  2013 .AND. IfValidAnd( ResProj:LtgCondFloorArea > 0 )) .OR.
																								 ( ResProj:IntGainsMethod <= 2013 .AND. ExtLtg_Gain > 0)) then	CreateComp( cseGAIN, substr( Name, 0, 44 ) + "-znExtLtg" )
																							else UNCHANGED endif  }
	"Set ResZn:GainExtLights parent cseZONE"	ResZn:GainExtLights:Parent 		= {  Local( CSE_ZONE )  }
	; SAC 4/22/16 - added NumDwellingUnits multiplier on constant '8' so that it scales for MFam models (tic #650)
	"Set ResZn:GainExtLights gnPower_x"			ResZn:GainExtLights:gnPower_x	= {
						if ( ResProj:IntGainsMethod <= 2013)
						then	Format("%g %s", (Local( ExtLtg_Gain ) * 3413), Local( ExtLtgDaySched_CSE ) )
						else	Format("(((8 * %g) + (.0532 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, ExtLight_WEH, Default ExtLight_WD) * Other_SM",
											ValidOr( ResProj:NumDwellingUnits, 0 ), ValidOr( ResProj:LtgCondFloorArea, 0 ), (ValidOr( CondFloorArea, 0 ) / max( 1, ValidOr( ResProj:CondFloorArea, 1 ) )) )
						endif  }
	"Set ResZn:GainExtLights:gnFrZn"				ResZn:GainExtLights:gnFrZn		= {	0. }
	"Set ResZn:GainExtLights:gnEndUse"			ResZn:GainExtLights:gnEndUse	= {	"Ext" }
	"Set ResZn:GainExtLights:gnMeter"				ResZn:GainExtLights:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																											else  UNDEFINED  endif  }

			; setup for AirNet (& misc other stuff)
	"Set ResZn:ExtWallArea"				ResZn:ExtWallArea			= {	SumChildren( ResExtWall:Area )  }
	"Set ResZn:ClgBlwAtticArea"			ResZn:ClgBlwAtticArea		= {	SumChildren( ResCeilingBelowAttic:Area )  }
	"Set ResZn:CathCeilingArea"			ResZn:CathCeilingArea		= {	SumChildren( ResCathedralCeiling:Area )  }
	"Set ResZn:CondClgBlwAtticArea"	ResZn:CondClgBlwAtticArea ={	if (Type < 10) then  ClgBlwAtticArea  else  0  endif  }
	"Set ResZn:SlabFloorArea"			ResZn:SlabFloorArea		= {	SumChildren( ResSlabFlr:Area ) + SumChildren( ResUndgrFlr:Area )  }		; SAC 11/17/14 - added ResUndgrFlr:Area
	"Set ResZn:ExtFloorArea"				ResZn:ExtFloorArea			= {	SumChildren( ResExtFlr:Area ) + SumChildren( ResFlrOverCrawlSpc:Area )  }
	"Set ResZn:FlrOverUncondZnArea"	ResZn:FlrOverUncondZnArea ={	SumChildren( ResIntFlr:ParCndZnAdjUZnArea ) +
                                                                  SumRevRef(   ResIntFlr:Outside, ResIntWall:ParUZnAdjCndZnArea )  }  ; SAC 11/30/20
	"Set ResZn:AdjUncondZnWallArea"	ResZn:AdjUncondZnWallArea	= {	SumChildren( ResIntWall:ParCndZnAdjUZnArea ) + SumRevRef( ResIntWall:Outside, ResIntWall:ParUZnAdjCndZnArea )	}
	"Set ResZn:AdjUncondZnArea"		   ResZn:AdjUncondZnArea		   = {	AdjUncondZnWallArea + SumChildren( ResIntFlr:ParCndZnAdjUZnArea ) +
                                                                     SumRevRef( ResIntCeiling:Outside, ResIntCeiling:ParUZnAdjCndZnArea ) +
                                                                     SumRevRef( ResIntFlr:Outside,   ResIntFlr:ParUZnAdjCndZnArea )	}

	"Set ResOtherZn:ExtWallArea"			ResOtherZn:ExtWallArea			= {	SumChildren( ResExtWall:Area )  }      ; SAC 7/13/20
	"Set ResOtherZn:ClgBlwAtticArea"		ResOtherZn:ClgBlwAtticArea		= {	SumChildren( ResCeilingBelowAttic:Area )  }
	"Set ResOtherZn:CathCeilingArea"		ResOtherZn:CathCeilingArea		= {	SumChildren( ResCathedralCeiling:Area )  }
	"Set ResOtherZn:CondClgBlwAtticArea"	ResOtherZn:CondClgBlwAtticArea = {	if (Type < 10) then  ClgBlwAtticArea  else  0  endif  }
	"Set ResOtherZn:SlabFloorArea"			ResOtherZn:SlabFloorArea			= {	SumChildren( ResSlabFlr:Area ) + SumChildren( ResUndgrFlr:Area )  }		; SAC 11/17/14 - added ResUndgrFlr:Area
	"Set ResOtherZn:ExtFloorArea"			ResOtherZn:ExtFloorArea			= {	SumChildren( ResExtFlr:Area ) + SumChildren( ResFlrOverCrawlSpc:Area )  }
	"Set ResOtherZn:FlrOverUncondZnArea"	ResOtherZn:FlrOverUncondZnArea	= {	SumChildren( ResIntFlr:ParCndOZnAdjUZnArea ) +
                                                                           SumRevRef(   ResIntFlr:Outside, ResIntWall:ParUZnAdjCndOZnArea )  }  ; SAC 11/30/20
	"Set ResOtherZn:AdjUncondZnWallArea"	ResOtherZn:AdjUncondZnWallArea	= {	SumChildren( ResIntWall:ParCndOZnAdjUZnArea) + SumRevRef( ResIntWall:Outside, ResIntWall:ParUZnAdjCndOZnArea )	}
	"Set ResOtherZn:AdjUncondZnArea"	   ResOtherZn:AdjUncondZnArea	   = {	AdjUncondZnWallArea + SumChildren( ResIntFlr:ParCndOZnAdjUZnArea ) +
                                                                           SumRevRef( ResIntCeiling:Outside, ResIntCeiling:ParUZnAdjCndOZnArea ) +
                                                                           SumRevRef( ResIntFlr:Outside,   ResIntFlr:ParUZnAdjCndOZnArea )	}

	"Set ResProj:BldgExtWallArea"				ResProj:BldgExtWallArea			= {	SumAll( ResZn:ExtWallArea     )  }
	"Set ResProj:BldgClgBlwAtticArea"		ResProj:BldgClgBlwAtticArea	= {	SumAll( ResZn:ClgBlwAtticArea )  }
	"Set ResProj:BldgCathCeilingArea"		ResProj:BldgCathCeilingArea	= {	SumAll( ResZn:CathCeilingArea )  }
	"Set ResProj:BldgSlabFloorArea"			ResProj:BldgSlabFloorArea		= {	SumAll( ResZn:SlabFloorArea   )  }
	"Set ResProj:BldgCondZnSlabFlrArea"		ResProj:BldgCondZnSlabFlrArea	= {   SumAcrossif( ResZn:SlabFloorArea, ResZn:Type < 10 )  }		; SAC 9/10/13
	"Set ResProj:BldgExtFloorArea"			ResProj:BldgExtFloorArea		= {	SumAll( ResZn:ExtFloorArea    )  }
	"Set ResProj:BldgZnAdjUZnArea"	   	ResProj:BldgZnAdjUZnArea	   = {   SumAll( ResZn:AdjUncondZnArea )  }     ; SAC 11/30/20

	"Set ResProj:BldgOZExtWallArea"			ResProj:BldgOZExtWallArea			= {	SumAll( ResOtherZn:ExtWallArea     )  }    ; SAC 7/10/20
	"Set ResProj:BldgOZClgBlwAtticArea" 	ResProj:BldgOZClgBlwAtticArea 	= {	SumAll( ResOtherZn:ClgBlwAtticArea )  }
	"Set ResProj:BldgOZCathCeilingArea" 	ResProj:BldgOZCathCeilingArea 	= {	SumAll( ResOtherZn:CathCeilingArea )  }
	"Set ResProj:BldgOZExtFloorArea" 		ResProj:BldgOZExtFloorArea 		= {	SumAll( ResOtherZn:ExtFloorArea    )  }
	"Set ResProj:BldgOZSlabFloorArea"		ResProj:BldgOZSlabFloorArea		= {	SumAll( ResOtherZn:SlabFloorArea   )  }
	"Set ResProj:BldgOZCondZnSlabFlrArea"	ResProj:BldgOZCondZnSlabFlrArea	= {   SumAcrossif( ResOtherZn:SlabFloorArea, ResOtherZn:Type < 10 )  }
	"Set ResProj:BldgOZAdjUZnArea"		   ResProj:BldgOZAdjUZnArea	      = {   SumAll( ResOtherZn:AdjUncondZnArea )  }      ; SAC 11/30/20

	"Set ResExtWall:WinVentArea"			ResExtWall:WinVentArea			= {	SumChildren( ResWin:VentArea )  }
	"Set ResZn:WinVentArea"				ResZn:WinVentArea				= {	SumChildren( ResExtWall:WinVentArea )  }

; SAC 4/14/16 - MOVED UP above DHWSYS creation
; ; CSE ZONE (Garage) creation & defaulting
;	"Create new ResGarage:CSE_ZONE" 				ResGarage:CSE_ZONE					= {	if (Global( ResProj:HasGarage ) < 0.1 .OR. Local( Area ) < 0.1 .OR. Local( Volume ) < 0.1) then  UNCHANGED
;																										else  CreateComp( cseZONE, Local( Name ) + "-grg" )  endif  }
;	"Default ResGarage:CSE_ZONE:SourceGarage"	ResGarage:CSE_ZONE:SourceGarage	= {	Local( Name 				)  }
;	"Default ResGarage:CSE_ZONE:znModel"      ResGarage:CSE_ZONE:znModel     	= {	"UZX"  }
;	"Default ResGarage:CSE_ZONE:znArea"       ResGarage:CSE_ZONE:znArea      	= {	if (LocalStatus( Area      ) > 0) then  Local( Area 		)  else  UNDEFINED  endif  }
;	"Default ResGarage:CSE_ZONE:znVol"        ResGarage:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume    ) > 0) then  Local( Volume 	)  else  UNDEFINED  endif  }
;  ; SAC 2/4/13 - added more rules to set additional properties needed to accurately model a garage
;	"Default ResGarage:CSE_ZONE:znEaveZ"     	ResGarage:CSE_ZONE:znEaveZ    	= {	if (MaxAll( ResZn:GrndFlrClgHeight ) > 3) then  Bottom + MaxAll( ResZn:GrndFlrClgHeight )
;																										else  Bottom + 9  endif  }
;	"Prevent invalid ResGarage:...:znEaveZ"	ResGarage:CSE_ZONE:znEaveZ    	= {	if (CSE_ZONE:znEaveZ < 0.01) then  UNDEFINED  else  UNCHANGED  endif  }
;	"Default ResGarage:CSE_ZONE:znFloorZ"     ResGarage:CSE_ZONE:znFloorZ      = {	if (LocalStatus( Bottom ) > 0) then  Local( Bottom )  else  UNDEFINED  endif  }  ; SAC 3/28/13
;
;	"Default ResGarage:CSE_ZONE:znCAir"       ResGarage:CSE_ZONE:znCAir      	= {	0.01  }
;			; Infiltration - ensure only AirNet modeling...
;	"Default ResGarage:CSE_ZONE:infAC"       	ResGarage:CSE_ZONE:infAC      	= {	0  }
;	"Default ResGarage:CSE_ZONE:infELA"      	ResGarage:CSE_ZONE:infELA     	= {	0  }

	; SAC 4/13/16 - added ltg gains for T24-2016
	"Create new ResGarage:GainLights"			ResGarage:GainLights					= {	if ( ResProj:HasGarage < 0.1 .OR. Area < 0.1 .OR. Volume < 0.1) then  UNCHANGED
																										else if ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:LtgCondFloorArea < 1) then  UNCHANGED
																										else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-gLtg" )  endif endif  }
	"Set ResGarage:GainLights parent cseZONE"	ResGarage:GainLights:Parent		= {	Local( CSE_ZONE )  }
	"Set ResGarage:GainLights gnPower_x"		ResGarage:GainLights:gnPower_x	= {
				Format("((20 + (.0063 * %g)) * 3412/365) * %g * select( $dsDay==1, 0., $ISWEHOL, IntLight_WEH, Default IntLight_WD) * Other_SM",
																ResProj:LtgCondFloorArea, (Area / SumAll( ResGarage:Area )) )  }
	"Set ResGarage:GainLights:gnFrRad"			ResGarage:GainLights:gnFrRad		= {	0.2   }
	"Set ResGarage:GainLights:gnEndUse"			ResGarage:GainLights:gnEndUse		= {	"Lit" }
	"Set ResGarage:GainLights:gnMeter"			ResGarage:GainLights:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																										else  UNDEFINED  endif  }
	; SAC 4/14/16 - added secondary refrigerator for SFam models w/ a primary refrigerator
	"Create new ResGarage:GainRefrig"			ResGarage:GainRefrig					= {	if ( ResProj:HasGarage < 0.1 .OR. Area < 0.1 .OR. Volume < 0.1) then  UNCHANGED
																										else if ( ResProj:IntGainsMethod <= 2013 .OR. ResProj:IsMultiFamily > 0.5 .OR. ResProj:Appl_HaveRefrig[1] < 0.5) then  UNCHANGED
																										else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-gRfrg" )  endif endif  }
	"Set ResGarage:GainRefrig parent cseZONE"	ResGarage:GainRefrig:Parent		= {	Local( CSE_ZONE )  }
	"Set ResGarage:GainRefrig gnPower_x"		ResGarage:GainRefrig:gnPower_x	= {
				Format("((%g * 71) * 3412/8760) * %g * ( select( $isWeHol, RefrConst_WEH, default RefrConst_WD ) + select( $isWeHol, RefrTemp_WEH, default RefrTemp_WD ) * @znRes[%c%s%c].prior.H.tAir)",
																										ResProj:SimNumBedrooms, (Area / SumAll( ResGarage:Area )), 34, CSE_ZONE:Name, 34 )  }
	"Set ResGarage:GainRefrig:gnFrRad"			ResGarage:GainRefrig:gnFrRad		= {	0     }
	"Set ResGarage:GainRefrig:gnEndUse"			ResGarage:GainRefrig:gnEndUse		= {	"Refr" }
	"Set ResGarage:GainRefrig:gnMeter"			ResGarage:GainRefrig:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																										else  UNDEFINED  endif  }

; SAC 10/16/14 - added to accommodate multiple attics
	"Set ResCeilingBelowAttic:CSEZnEaveZ"		ResCeilingBelowAttic:CSEZnEaveZ	= {	if (IfValidAnd( Area > 0.1)==0 .OR. LocalCompAssigned( AtticZone ) < 1) then  UNDEFINED
																										else if (ParentComponentType() == "ResZn"  ) then	ResZn:CSE_ZONE:znEaveZ
																										else if (ParentComponentType() == "ResGarage") then	ResGarage:CSE_ZONE:znEaveZ
																										else  UNDEFINED  endif endif endif  }

; SAC 4/14/16 - MOVED UP above DHWSYS creation in order to have all Zones present for DHWSYS interconnections
; ; CSE ZONE (Attic) creation & defaulting
;	"Create new ResAttic:CSE_ZONE"  				ResAttic:CSE_ZONE						= {	if (FloorArea < 0.5) then  UNDEFINED		; SAC 9/13/13 - added logic to prevent simulation of attic zones w/ no area
;																										else  CreateComp( cseZONE, Local( Name ) + "-atc" )  endif  }
;
;	"Default ResAttic:CSE_ZONE:SourceAttic"  	ResAttic:CSE_ZONE:SourceAttic		= {	Local( Name 				)  }
;	"Default ResAttic:CSE_ZONE:znModel"      	ResAttic:CSE_ZONE:znModel     	= {	"UZX"  }
;	"Default ResAttic:CSE_ZONE:znArea"       	ResAttic:CSE_ZONE:znArea      	= {	if (LocalStatus( CeilArea      ) > 0) then  Local( CeilArea 		)  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znVol"        	ResAttic:CSE_ZONE:znVol       	= {	if (LocalStatus( Volume        ) > 0) then  Local( Volume 			)  else  UNDEFINED  endif  }

 ; CSE ZONE (Attic) creation & defaulting
;	"Default ResAttic:CSE_ZONE:znEaveZ"     	ResAttic:CSE_ZONE:znEaveZ    	= {	MaxAll( cseZONE:znEaveZ )  }
	"Default ResAttic:CSE_ZONE:znEaveZ"     	ResAttic:CSE_ZONE:znEaveZ    	= {	MaxRevRef( ResCeilingBelowAttic:AtticZone, ResCeilingBelowAttic:CSEZnEaveZ )  }	; SAC 10/16/14 - revised to accommodate multiple attics
	"Prevent invalid ResAttic:CSE_ZONE:znEaveZ"  ResAttic:CSE_ZONE:znEaveZ    = {	if (IfValidAnd( CSE_ZONE:znEaveZ < 0.01 )) then  UNDEFINED  else  UNCHANGED  endif  }

	"Default ResAttic:CSE_ZONE:znCAir"       	ResAttic:CSE_ZONE:znCAir      	= {	0.01  }
;	"Default ResAttic:CSE_ZONE:znAzm"        	ResAttic:CSE_ZONE:znAzm       	= {	0     }
;	"Default ResAttic:CSE_ZONE:znSC"         	ResAttic:CSE_ZONE:znSC        	= {	0     }
			; znModel = CZM -
;	"Default ResAttic:CSE_ZONE:znTH"         	ResAttic:CSE_ZONE:znTH        	= {	if (LocalStatus( ZnTH        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTH        )  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znTC"         	ResAttic:CSE_ZONE:znTC        	= {	if (LocalStatus( ZnTC        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTC        )  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znTD"         	ResAttic:CSE_ZONE:znTD        	= {	if (LocalStatus( ZnTD        ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnTD        )  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znQMxH"       	ResAttic:CSE_ZONE:znQMxH      	= {	if (LocalStatus( ZnQMxH      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxH      )  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znQMxHRated"  	ResAttic:CSE_ZONE:znQMxHRated 	= {	if (LocalStatus( ZnQMxHRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxHRated )  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znQMxC"       	ResAttic:CSE_ZONE:znQMxC      	= {	if (LocalStatus( ZnQMxC      ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxC      )  else  UNDEFINED  endif  }
;	"Default ResAttic:CSE_ZONE:znQMxCRated"  	ResAttic:CSE_ZONE:znQMxCRated 	= {	if (LocalStatus( ZnQMxCRated ) > 0 .AND. Local( ZnModel ) == 3) then  Local( ZnQMxCRated )  else  UNDEFINED  endif  }
			; Infiltration
	"Default ResAttic:CSE_ZONE:infAC"       	ResAttic:CSE_ZONE:infAC      		= {	0  }
	"Default ResAttic:CSE_ZONE:infELA"      	ResAttic:CSE_ZONE:infELA     		= {	0  }
	"Default ResAttic:CSE_ZONE:infShld"     	ResAttic:CSE_ZONE:infShld    		= {	4  }  ; SAC 5/22/12 - 5->4 per CBECCbug001 infShld from BW 5/18/12
; SAC 9/12/12 - removed per call & e-mail from Bruce today
;	"Default ResAttic:CSE_ZONE:infStories"  	ResAttic:CSE_ZONE:infStories 		= {	1  }

; SAC 9/7/12 - removed old attic diode via GAIN w/ simpler version using IZXFER
;  ; Attic Bypass Diode setup
;	"Create ResProj:BypassAtticMETER"			ResProj:BypassAtticMETER			= {	CreateComp( cseMETER, "BypassAtticMtr" )  }
;	"Setup attic bypass diodes"				ResZn:Action							= {	if (Local( ClgBlwAtticArea ) < 0.5) then  UNCHANGED
;																										else  EvalRulelist( "SimPrep_SetupZoneAtticBypassDiode", 1 )  endif  }
; SAC 9/7/12 - new (simpler) attic bypass diode stuff via IZXFER
	; ICQEnclCavInsMult factors based on CavityIns2.xlsx from BW 7/16/12
	; SAC 1/13/13 - switched Improved multiplier from 0.008 to 0.0
	"Set ResProj:ICQAtticBypassUAMult"		ResProj:ICQAtticBypassUAMult	= {	switch (Local( InsulConsQuality ))		; ICQ-dependent multiplier for bypass UA (attic bypass diode)
																									case 2 :  0.000		; Yes/Improved
																									default:  0.015		; No/Standard (or other)
																								endswitch  }
	"Set ResProj:StdICQAtticBypassUAMult"  ResProj:StdICQAtticBypassUAMult  = {  0.015  }  ; SAC 5/9/18 - (tic #775)

   ; SAC 5/9/18 - switched from Global to Local ICQAtticBypassUAMult to apply QII based on  (tic #775)
	"Set ResCeilingBelowAttic:ICQAtticBypassUAMult"    ResCeilingBelowAttic:ICQAtticBypassUAMult  = {
	      if (ICQAtticBypassApplies)
	      then  ResProj:ICQAtticBypassUAMult
	      else  ResProj:StdICQAtticBypassUAMult  endif  }

;	"Setup attic bypass diode IZXFER"	ResZn:Action						= {	if (Local( ClgBlwAtticArea ) < 0.5) then  UNCHANGED
;																								else  EvalRulelist( "SimPrep_SetupZoneAtticBypassDiode", 1 )  endif  }
; SAC 10/17/14 - modified to operate on CeilingBelowAttic objects rather than Zones (to accommodate multiple attics)
	"Setup attic bypass diode IZXFER"	ResCeilingBelowAttic:Action	= {	if (LocalCompAssigned( AtticZone ) < 0.5 .OR. ParentComponentType() != "ResZn" .OR. Area < 1) then  UNCHANGED
																								else  EvalRulelist( "SimPrep_SetupClgBelowAtticBypassDiode", 1 )  endif  }

; SAC 4/14/16 - MOVED UP above CSE DHWSYS creation in order for all CSE ZONEs to be present for interconnections
; ; CSE ZONE (CrawlSpace) creation & defaulting
;	"Create new ResCrawlSpc:CSE_ZONE"  					ResCrawlSpc:CSE_ZONE							= {	if (LocalStatus( Area ) == 0 .OR. Local( Area ) < 0.5) then  UNCHANGED
;																																else  CreateComp( cseZONE, Local( Name ) + "-crwl" )  endif  }
;	"Set ResCrawlSpc:CSEZoneName"  						ResCrawlSpc:CSEZoneName						= {	if (LocalCompAssigned( CSE_ZONE ) == 0) then  UNDEFINED
;																																else  LocalRef( CSE_ZONE:Name )  endif  }
;	"Default ResCrawlSpc:CSE_ZONE:SourceCrawlSpace"  ResCrawlSpc:CSE_ZONE:SourceCrawlSpace	= {	Local( Name )  }
;	"Default ResCrawlSpc:CSE_ZONE:znModel"      		ResCrawlSpc:CSE_ZONE:znModel     			= {	"UZX"  }
;	"Default ResCrawlSpc:CSE_ZONE:znArea"       		ResCrawlSpc:CSE_ZONE:znArea      			= {	Area                  }
;	"Default ResCrawlSpc:CSE_ZONE:znVol"        		ResCrawlSpc:CSE_ZONE:znVol       			= {	Area * AvgWallHeight  }
;	"Default ResCrawlSpc:CSE_ZONE:znEaveZ"       		ResCrawlSpc:CSE_ZONE:znEaveZ     			= {	AvgWallHeight + 0.75  }

 ; CSE ZONE (CrawlSpace) defaulting
	"Default ResCrawlSpc:CSE_ZONE:znCAir"       		ResCrawlSpc:CSE_ZONE:znCAir      			= {	0.0001  }
	"Default ResCrawlSpc:CSE_ZONE:znAzm"        		ResCrawlSpc:CSE_ZONE:znAzm       			= {	0       }
;	"Default ResCrawlSpc:CSE_ZONE:znSC"         		ResCrawlSpc:CSE_ZONE:znSC        			= {	0       }
			; Infiltration
	"Default ResCrawlSpc:CSE_ZONE:infAC"       		ResCrawlSpc:CSE_ZONE:infAC      			= {	0  }	; still air films
;	"Default ResCrawlSpc:CSE_ZONE:infELA"      		ResCrawlSpc:CSE_ZONE:infELA     			= {	0  }
	"Default ResCrawlSpc:CSE_ZONE:infShld"     		ResCrawlSpc:CSE_ZONE:infShld    			= {	1  }
;	"Default ResCrawlSpc:CSE_ZONE:infStories"  		ResCrawlSpc:CSE_ZONE:infStories 			= {	1  }

END


;*************************************************************************
RULELIST "CreateGainRefrig" 1 0 0 0
;*************************************************************************
;	"Create ResZn:GainRefrig"				ResZn:GainRefrig			= {	if (Local(HasApplRefrig) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znRefrig" )
;																		else UNCHANGED endif }
	"Create ResZn:GainRefrig"					ResZn:GainRefrig				= {	CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znRfrg" )  }
	"Set ResZn:GainRefrig parent cseZone"	ResZn:GainRefrig:Parent		= {	Local(CSE_ZONE) }
	"Set ResZn:GainRefrig:gnPower"				ResZn:GainRefrig:gnPower		= {	if ( ResProj:IntGainsMethod > 2013) then  UNDEFINED
																									else  Local(Appl_RefrigGain) * 3413 / 24.  endif  }   ; SAC 9/4/12 - added conversion to Btu (*3413)
	"Set ResZn:GainRefrig:gnPower_x"			ResZn:GainRefrig:gnPower_x	= {
																if ( ResProj:IntGainsMethod <= 2013) then  UNDEFINED
																else	Format( "(%g * 3412 / 24) * ( select( $isWeHol, RefrConst_WEH, default RefrConst_WD ) + select( $isWeHol, RefrTemp_WEH, default RefrTemp_WD ) * @znRes[%c%s%c].prior.H.tAir)",
																									Appl_RefrigGain, 34, CSE_ZONE:Name, 34 )  endif  }
	"Set ResZn:GainRefrig:gnFrRad"				ResZn:GainRefrig:gnFrRad		= {	0. }
	"Set ResZn:GainRefrig:gnEndUse"			ResZn:GainRefrig:gnEndUse	= {	"Refr" }
	"Set ResZn:GainRefrig:gnMeter"				ResZn:GainRefrig:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																									else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainDish_Zone" 1 0 0 0
;*************************************************************************
;	"Create ResZn:GainDishwasher"			ResZn:GainDishwasher				= {	if (Local(HasApplRefrig) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znDishwasher" )
;																		else UNCHANGED endif }
	"Create ResZn:GainDishwasher"					ResZn:GainDishwasher				= {	CreateComp( cseGAIN, substr( Name, 0, 46 ) + "-znDshwshr" )  }
	"Set ResZn:GainDishwasher parent cseZone"	ResZn:GainDishwasher:Parent		= { Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainDishwasher:gnPower_x"			ResZn:GainDishwasher:gnPower_x = { 
																	if ( ResProj:IntGainsMethod <= 2013)
																	then	Format("%g %s %s)", (Local( Appl_DishGain ) * 3413), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
																	else	UNDEFINED  endif  }
	"Set ResZn:GainDishwasher:gnPower"			ResZn:GainDishwasher:gnPower	=
      {  if ( ResProj:IntGainsMethod > 2013)
         then  Appl_DishGain * 3412
			else	UNDEFINED  endif  }
      ; removed gain power shuffle reduction - SAC 05/20/21
      ;   then  if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
      ;         then  Appl_DishGain * 3412 / ResProj:ShuffleSFamDHWNum
      ;         else  Appl_DishGain * 3412
      ;         endif
		;	else	UNDEFINED  endif  }
	"Set ResZn:GainDishwasher:gnFrRad"			ResZn:GainDishwasher:gnFrRad	= { 0. }
	"Set ResZn:GainDishwasher:gnFrLat"			ResZn:GainDishwasher:gnFrLat	= { 0.25 }
	"Set ResZn:GainDishwasher:gnEndUse"			ResZn:GainDishwasher:gnEndUse	= { "Dish" }
	"Set ResZn:GainDishwasher:gnMeter"			ResZn:GainDishwasher:gnMeter	= { if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																										 else  UNDEFINED  endif  }

	"Set ResZn:GainDishwasher:gnCtrlDHWEndUse"	ResZn:GainDishwasher:gnCtrlDHWEndUse	= {	if ( ResProj:IntGainsMethod <= 2013) then  UNDEFINED
																													else	"DWashr"  endif  }
   "Set ResZn:GainDishwasher:gnCtrlDHWMETER"  ResZn:GainDishwasher:gnCtrlDHWMETER  =              ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if (LocalCompAssigned( GainCtrlDHWSYS ) > 0 .AND. ResProj:IntGainsMethod > 2013 .AND. IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
         then  Proj:CSE_FXHwDHWMETER  else  UNDEFINED  endif  }
	"Set ResZn:GainDishwasher:gnCtrlDHWSYS"		ResZn:GainDishwasher:gnCtrlDHWSYS		=
      {	if (LocalCompAssigned( GainCtrlDHWSYS ) > 0 .AND. ResProj:IntGainsMethod > 2013 .AND. LocalCompAssigned( GainDishwasher:gnCtrlDHWMETER )==0)
			then  GainCtrlDHWSYS  else  UNDEFINED  endif  }
END

; SAC 7/26/16 - added to ensure multiple dishwasher gains, one for each DHWSys for single family models (tic #711)
;*************************************************************************
RULELIST "CreateGainDish_Zone_2" 1 0 0 0
;*************************************************************************
   "Create ResZn:GainDishwasher[2]"               ResZn:GainDishwasher[2]           = {  CreateComp( cseGAIN, substr( Name, 0, 46 ) + "-znDshwsh2" )  }
   "Set ResZn:GainDishwasher[2] parent cseZone"   ResZn:GainDishwasher[2]:Parent    = {  Local(CSE_ZONE) }
   "Set ResZn:GainDishwasher[2]:gnPower"          ResZn:GainDishwasher[2]:gnPower   =                   ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  Appl_DishGain * 3412  }
      ; removed gain power shuffle reduction - SAC 05/20/21
      ;{  if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
      ;   then  Appl_DishGain * 3412 / ResProj:ShuffleSFamDHWNum
      ;   else  Appl_DishGain * 3412    endif  }
   "Set ResZn:GainDishwasher[2]:gnFrRad"          ResZn:GainDishwasher[2]:gnFrRad   = {  0. }
   "Set ResZn:GainDishwasher[2]:gnFrLat"          ResZn:GainDishwasher[2]:gnFrLat   = {  0.25 }
   "Set ResZn:GainDishwasher[2]:gnEndUse"         ResZn:GainDishwasher[2]:gnEndUse  = {  "Dish" }
   "Set ResZn:GainDishwasher[2]:gnMeter"          ResZn:GainDishwasher[2]:gnMeter   = {  if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
                                                                                       else  UNDEFINED  endif  }

   "Set ResZn:GainDishwasher[2]:gnCtrlDHWEndUse"  ResZn:GainDishwasher[2]:gnCtrlDHWEndUse   = {  "DWashr"  }
   "Set ResZn:GainDishwasher[2]:gnCtrlDHWMETER"   ResZn:GainDishwasher[2]:gnCtrlDHWMETER    =           ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if (LocalCompAssigned( GainCtrlDHWSYS[2] ) > 0 .AND. IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
         then  Proj:CSE_FXHwDHWMETER  else  UNDEFINED  endif  }
   "Set ResZn:GainDishwasher[2]:gnCtrlDHWSYS"     ResZn:GainDishwasher[2]:gnCtrlDHWSYS      =
      {  if (LocalCompAssigned( GainCtrlDHWSYS[2] ) > 0 .AND. LocalCompAssigned( GainDishwasher[2]:gnCtrlDHWMETER )==0)
         then  GainCtrlDHWSYS[2]  else  UNDEFINED  endif  }
END


; SAC 4/14/16 - DwellUnit-based GainDishwasher applicable only to T24-2016 multifamily models
;*************************************************************************
RULELIST "CreateGainDish_DwellUnitDHW" 1 0 0 0
;*************************************************************************
	"Create DwellUnitDHW:GainDishwasher"					DwellUnitDHW:GainDishwasher				= {	CreateComp( cseGAIN, substr( Name, 0, 46 ) + "-znDshwshr" )  }
	"Set DwellUnitDHW:GainDishwasher parent cseZone"	DwellUnitDHW:GainDishwasher:Parent		= {	Parent2( CSE_ZONE )   }
	; SAC 4/22/16 - updated to set gnPower_x (expression) rather than static value - and added accounting for DwellUnit multiplier (tic #651)
	;"Set DwellUnitDHW:GainDishwasher:gnPower_x"			DwellUnitDHW:GainDishwasher:gnPower_x	= {	Format( "%g * %g * 3412", ValidOr( DwellUnitTypeRef:DishElecUsage, 0 ), ValidOr( Count, 0 ) )  }
	"Set DwellUnitDHW:GainDishwasher:gnPower_x"			DwellUnitDHW:GainDishwasher:gnPower_x	= {	Format( "%g * 3412", ValidOr( DwellUnitTypeRef:DishElecUsage, 0 ) )  }
	"Set DwellUnitDHW:GainDishwasher:gnFrRad"				DwellUnitDHW:GainDishwasher:gnFrRad		= {	0.			}
	"Set DwellUnitDHW:GainDishwasher:gnFrLat"				DwellUnitDHW:GainDishwasher:gnFrLat		= {	0.25		}
	"Set DwellUnitDHW:GainDishwasher:gnEndUse"			DwellUnitDHW:GainDishwasher:gnEndUse	= {	"Dish"	}
	"Set DwellUnitDHW:GainDishwasher:gnMeter"				DwellUnitDHW:GainDishwasher:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																															 		else  UNDEFINED  endif  }
	"Set DwellUnitDHW:GainDishwasher:gnCtrlDHWEndUse"	DwellUnitDHW:GainDishwasher:gnCtrlDHWEndUse	= {	"DWashr"  }
	"Set DwellUnitDHW:GainDishwasher:gnCtrlDHWSYS"		DwellUnitDHW:GainDishwasher:gnCtrlDHWSYS		= {	if (LocalCompAssigned( cseDHWSYSRef ) > 0) then  cseDHWSYSRef  else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainCooking" 1 0 0 0
;*************************************************************************
;	"Create ResZn:GainCooking"					ResZn:GainCooking		= {	if (Local(HasApplRefrig) == 1) then
;																								CreateComp(cseGAIN, Local( Name ) + "-znCook" )
;																							else UNCHANGED endif }
	"Create ResZn:GainCooking[1] - Elec"			ResZn:GainCooking[1]		= {	if (Appl_CookGain[1] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 50 ) + "-znCkE" ) endif  }
	"Set ResZn:GainCooking[1] parent cseZone"	ResZn:GainCooking[1]:Parent	= { Local(CSE_ZONE) }
	; SAC 4/14/16 - revised for T24-2016
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainCooking[1]:gnPower_x"			ResZn:GainCooking[1]:gnPower_x	= { 
				if ( ResProj:IntGainsMethod <= 2013)
				then	Format("%g %s %s)", Local( Appl_CookGain[1] ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, Cook_WEH, Default Cook_WD) * Cook_SM", Appl_CookGain[1] )  endif  }
	"Set ResZn:GainCooking[1]:gnFrRad"			ResZn:GainCooking[1]:gnFrRad	= { 0. }
	"Set ResZn:GainCooking[1]:gnFrLat"			ResZn:GainCooking[1]:gnFrLat	= { 0.67 }
	"Set ResZn:GainCooking[1]:gnFrZn"				ResZn:GainCooking[1]:gnFrZn		= { 0.9 }
	"Set ResZn:GainCooking[1]:gnEndUse"			ResZn:GainCooking[1]:gnEndUse	= { "Cook" }
	"Set ResZn:GainCooking[1]:gnMeter"			ResZn:GainCooking[1]:gnMeter	= { Global( Proj:CSE_ElecMETER ) }

	"Create ResZn:GainCooking[2] - NGas"			ResZn:GainCooking[2]		= {	if (Appl_CookGain[2] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 50 ) + "-znCkG" ) endif  }
	"Set ResZn:GainCooking[2] parent cseZone"	ResZn:GainCooking[2]:Parent	= { Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainCooking[2]:gnPower_x"			ResZn:GainCooking[2]:gnPower_x	= { 
				if ( ResProj:IntGainsMethod <= 2013)
				then	Format("%g %s %s)", Local( Appl_CookGain[2] ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
				else	Format("%g * select( $dsDay==1, 0., $ISWEHOL, Cook_WEH, Default Cook_WD) * Cook_SM", Appl_CookGain[2] )  endif  }
	"Set ResZn:GainCooking[2]:gnFrRad"			ResZn:GainCooking[2]:gnFrRad	= { 0. }
	"Set ResZn:GainCooking[2]:gnFrLat"			ResZn:GainCooking[2]:gnFrLat	= { 0.67 }
	"Set ResZn:GainCooking[2]:gnFrZn"				ResZn:GainCooking[2]:gnFrZn		= { 0.9 }
	"Set ResZn:GainCooking[2]:gnEndUse"			ResZn:GainCooking[2]:gnEndUse	= { "Cook" }
	"Set ResZn:GainCooking[2]:gnMeter"			ResZn:GainCooking[2]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																											then	if ( ResProj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																											else	if (GlobalCompAssigned( Proj:CSE_NatGasMETER )) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif endif  }

	"Create ResZn:GainCooking[3] - Othr"			ResZn:GainCooking[3]		= {	if (Appl_CookGain[3] <= 0 .OR. ResProj:IntGainsMethod > 2013) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 50 ) + "-znCkO" ) endif  }
	"Set ResZn:GainCooking[3] parent cseZone"	ResZn:GainCooking[3]:Parent	= { Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainCooking[3]:gnPower_x"			ResZn:GainCooking[3]:gnPower_x	= { 
				Format("%g %s %s)", Local( Appl_CookGain[3] ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) ) }
	"Set ResZn:GainCooking[3]:gnFrRad"			ResZn:GainCooking[3]:gnFrRad	= { 0. }
	"Set ResZn:GainCooking[3]:gnFrLat"			ResZn:GainCooking[3]:gnFrLat	= { 0.67 }
	"Set ResZn:GainCooking[3]:gnFrZn"				ResZn:GainCooking[3]:gnFrZn		= { 0.9 }
	"Set ResZn:GainCooking[3]:gnEndUse"			ResZn:GainCooking[3]:gnEndUse	= { "Cook" }
	"Set ResZn:GainCooking[3]:gnMeter"			ResZn:GainCooking[3]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																											then	if ( ResProj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																											else	Proj:CSE_OtherFuelMETER  endif }

;	"Set ResZn:GainCooking[1]:gnMeter"			ResZn:GainCooking[1]:gnMeter	= {	switch (Global( ResProj:ApplCookFuel))
;																				case 1:	if (Global( ResProj:Fuel_HaveElec   ) > 0.5) then  Global( Proj:CSE_ElecMETER )
;																						else  UNDEFINED  endif
;																				case 2:	if (Global( ResProj:Fuel_HaveNatGas   ) > 0.5) then  Global( Proj:CSE_NatGasMETER )
;																						else  UNDEFINED  endif
;																				case 3:	if (Global( ResProj:Fuel_HaveOther   ) > 0.5) then  Global( Proj:CSE_OtherFuelMETER )
;																						else  UNDEFINED  endif
;																				default: UNDEFINED
;																			endswitch  }
END


;*************************************************************************
RULELIST "CreateGainWasher_Zone" 1 0 0 0
;*************************************************************************
;	"Create ResZn:GainWasher"					ResZn:GainWasher			= {	if (Local(HasApplWasher) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znWasher" )
;																		else UNCHANGED endif }
	"Create ResZn:GainWasher"					ResZn:GainWasher				= {	CreateComp( cseGAIN, substr( Name, 0, 48 ) + "-znCWshr" )  }
	"Set ResZn:GainWasher parent cseZone"	ResZn:GainWasher:Parent		= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainWasher:gnPower_x"			ResZn:GainWasher:gnPower_x	= { 
																if ( ResProj:IntGainsMethod <= 2013)
																then	Format("%g %s %s)", (Local( Appl_WasherGain ) * 3413), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
																else	UNDEFINED  endif  }
	"Set ResZn:GainWasher:gnPower"				ResZn:GainWasher:gnPower		=
      {  if ( ResProj:IntGainsMethod > 2013) 
         then  Appl_WasherGain * 3412
			else	UNDEFINED  endif  }
      ; removed gain power shuffle reduction - SAC 05/20/21
      ;   then  if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
      ;         then  Appl_WasherGain * 3412 / ResProj:ShuffleSFamDHWNum
      ;         else  Appl_WasherGain * 3412
      ;         endif
		;	else	UNDEFINED  endif  }
	"Set ResZn:GainWasher:gnFrRad"				ResZn:GainWasher:gnFrRad		= {	0. }
	"Set ResZn:GainWasher:gnEndUse"			ResZn:GainWasher:gnEndUse	= {	"Wash" }
	"Set ResZn:GainWasher:gnMeter"				ResZn:GainWasher:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																									else  UNDEFINED  endif  }

	"Set ResZn:GainWasher:gnCtrlDHWEndUse"	ResZn:GainWasher:gnCtrlDHWEndUse	= {	if ( ResProj:IntGainsMethod <= 2013) then  UNDEFINED
																											else	"CWashr"  endif  }
   "Set ResZn:GainWasher:gnCtrlDHWMETER"   ResZn:GainWasher:gnCtrlDHWMETER   =           ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if (LocalCompAssigned( GainCtrlDHWSYS[1] ) > 0 .AND. ResProj:IntGainsMethod > 2013 .AND. IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
         then  Proj:CSE_FXHwDHWMETER  else  UNDEFINED  endif  }
	"Set ResZn:GainWasher:gnCtrlDHWSYS"		ResZn:GainWasher:gnCtrlDHWSYS		=
      {	if (LocalCompAssigned( GainCtrlDHWSYS[1] ) > 0 .AND. ResProj:IntGainsMethod > 2013 .AND. LocalCompAssigned( GainWasher:gnCtrlDHWMETER )==0)
			then  GainCtrlDHWSYS[1]  else  UNDEFINED  endif  }
END

; SAC 7/26/16 - added to ensure multiple washer gains, one for each DHWSys for single family models (tic #711)
;*************************************************************************
RULELIST "CreateGainWasher_Zone_2" 1 0 0 0
;*************************************************************************
   "Create ResZn:GainWasher[2]"               ResZn:GainWasher[2]            = {  CreateComp( cseGAIN, substr( Name, 0, 48 ) + "-znCWsh2" )  }
   "Set ResZn:GainWasher[2] parent cseZone"   ResZn:GainWasher[2]:Parent     = {  Local(CSE_ZONE) }
   ; SAC 1/3/13 - augmented schedule output to include design sizing data
   "Set ResZn:GainWasher[2]:gnPower_x"        ResZn:GainWasher[2]:gnPower_x  = { 
                                                if ( ResProj:IntGainsMethod <= 2013)
                                                then   Format("%g %s %s)", (Local( Appl_WasherGain ) * 3413), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
                                                else   UNDEFINED  endif  }
   "Set ResZn:GainWasher[2]:gnPower"          ResZn:GainWasher[2]:gnPower      =         ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if ( ResProj:IntGainsMethod > 2013)
         then  Appl_WasherGain * 3412
         else  UNDEFINED  endif  }
      ; removed gain power shuffle reduction - SAC 05/20/21
      ;   then  if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
      ;         then  Appl_WasherGain * 3412 / ResProj:ShuffleSFamDHWNum
      ;         else  Appl_WasherGain * 3412
      ;         endif
      ;   else  UNDEFINED  endif  }
   "Set ResZn:GainWasher[2]:gnFrRad"          ResZn:GainWasher[2]:gnFrRad      = {  0. }
   "Set ResZn:GainWasher[2]:gnEndUse"         ResZn:GainWasher[2]:gnEndUse     = {  "Wash" }
   "Set ResZn:GainWasher[2]:gnMeter"          ResZn:GainWasher[2]:gnMeter      = {  if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
                                                                                  else  UNDEFINED  endif  }

   "Set ResZn:GainWasher[2]:gnCtrlDHWEndUse"  ResZn:GainWasher[2]:gnCtrlDHWEndUse   = {  "CWashr"  }
   "Set ResZn:GainWasher[2]:gnCtrlDHWMETER"   ResZn:GainWasher[2]:gnCtrlDHWMETER    =       ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if (LocalCompAssigned( GainCtrlDHWSYS[2] ) > 0 .AND. IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
         then  Proj:CSE_FXHwDHWMETER  else  UNDEFINED  endif  }
   "Set ResZn:GainWasher[2]:gnCtrlDHWSYS"     ResZn:GainWasher[2]:gnCtrlDHWSYS      =
      {  if (LocalCompAssigned( GainCtrlDHWSYS[2] ) > 0 .AND. LocalCompAssigned( GainWasher[2]:gnCtrlDHWMETER )==0)
         then  GainCtrlDHWSYS[2]  else  UNDEFINED  endif  }
END


;*************************************************************************
RULELIST "CreateGainWasher_DwellUnitDHW" 1 0 0 0
;*************************************************************************
	"Create DwellUnitDHW:GainWasher"						DwellUnitDHW:GainWasher					= {	CreateComp( cseGAIN, substr( Name, 0, 48 ) + "-znCWshr" )  }
	"Set DwellUnitDHW:GainWasher parent cseZone"		DwellUnitDHW:GainWasher:Parent		= {	WasherZoneRef:CSE_ZONE  }		; SAC 4/22/16 - make sure gain added to correct Zone
	; SAC 4/22/16 - updated to set gnPower_x (expression) rather than static value - and added accounting for DwellUnit multiplier (tic #651)
	;"Set DwellUnitDHW:GainWasher:gnPower_x"			DwellUnitDHW:GainWasher:gnPower_x	= {	Format( "%g * %g * 3412", ValidOr( UnitClthWashGain, 0 ), ValidOr( Count, 0 ) )  }
	"Set DwellUnitDHW:GainWasher:gnPower_x"			DwellUnitDHW:GainWasher:gnPower_x	= {	Format( "%g * 3412", ValidOr( DwellUnit:UnitClthWashGain, 0 ) )  }
	"Set DwellUnitDHW:GainWasher:gnFrRad"				DwellUnitDHW:GainWasher:gnFrRad		= {	0.			}
	"Set DwellUnitDHW:GainWasher:gnEndUse"				DwellUnitDHW:GainWasher:gnEndUse		= {	"Wash"	}
	"Set DwellUnitDHW:GainWasher:gnMeter"				DwellUnitDHW:GainWasher:gnMeter		= {	if (Global( ResProj:Fuel_HaveElec ) > 0.5) then  Global( Proj:CSE_ElecMETER )
																															else  UNDEFINED  endif  }
	"Set DwellUnitDHW:GainWasher:gnCtrlDHWEndUse"	DwellUnitDHW:GainWasher:gnCtrlDHWEndUse	= {	"CWashr"  }
	; SAC 12/16/19 - revised MFam central DHWSys assignment logic to FIRST assign to local DwellUnit's DHWSys (rsther than DHWSys assigned to Laundry zone - in order for gain to be based on local DwellUnit demand)
	"Set DwellUnitDHW:GainWasher:gnCtrlDHWSYS"		DwellUnitDHW:GainWasher:gnCtrlDHWSYS	=     ; SAC 10/2/19 - MFamProto - was:  if (LocalCompAssigned( cseDHWSYSRef ) > 0) then  cseDHWSYSRef  else  UNDEFINED  endif  }
      {  if (ParentCompAssigned( WasherZoneRef ) == ComponentType( "ResOtherZn" ))
         then  if (LocalCompAssigned( cseDHWSYSRef ) > 0)
               then  cseDHWSYSRef
               else if (ParentCompAssigned( WasherZoneRef:cseDHWSYSRef ) > 0)
               then  WasherZoneRef:cseDHWSYSRef
               else  UNDEFINED  endif endif
         else  if (LocalCompAssigned( cseDHWSYSRef ) > 0)
               then  cseDHWSYSRef  else  UNDEFINED  endif
         endif  }
END


;*************************************************************************
RULELIST "CreateGainDryer_Zone" 1 0 0 0
;*************************************************************************
;	"Create ResZn:GainDryer"					ResZn:GainDryer			= {	if (Local(HasApplWasher) == 1) then
;																			CreateComp(cseGAIN, Local( Name ) + "-znDryer" )
;																		else UNCHANGED endif }
	"Create ResZn:GainDryer[1]-Elec"			ResZn:GainDryer[1]				= {	if (Appl_DryerGain[1] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryE" )  endif  }
	"Set ResZn:GainDryer[1] parent cseZone"	ResZn:GainDryer[1]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainDryer[1]:gnPower_x"		ResZn:GainDryer[1]:gnPower_x =                ; enable SFam DHW draw sched shuffling - SAC 05/14/21
															{	if ( ResProj:IntGainsMethod <= 2013)
																then	Format("%g %s %s)", Local( Appl_DryerGain[1] ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
                                                else if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
                                                then  Format("%g * 3412 * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[1], 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
																else	Format("%g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[1], 34, GainCtrlDHWSYS[1]:Name, 34 )  endif endif  }
;                                                then  Format("%g * 3412 * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[1] / ResProj:ShuffleSFamDHWNum, 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
	"Set ResZn:GainDryer[1]:gnFrRad"			ResZn:GainDryer[1]:gnFrRad	= {	0.  }
	"Set ResZn:GainDryer[1]:gnFrLat"			ResZn:GainDryer[1]:gnFrLat	= {	0.5 }
	"Set ResZn:GainDryer[1]:gnFrZn"			ResZn:GainDryer[1]:gnFrZn	= {	0.3 }
	"Set ResZn:GainDryer[1]:gnEndUse"			ResZn:GainDryer[1]:gnEndUse = {	"Dry" }
	"Set ResZn:GainDryer[1]:gnMeter"			ResZn:GainDryer[1]:gnMeter	= {	Global( Proj:CSE_ElecMETER ) }

	"Create ResZn:GainDryer[2]-NGas"			ResZn:GainDryer[2]				= {	if (Appl_DryerGain[2] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryG" )  endif  }
	"Set ResZn:GainDryer[2] parent cseZone"	ResZn:GainDryer[2]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainDryer[2]:gnPower_x"		ResZn:GainDryer[2]:gnPower_x =                ; enable SFam DHW draw sched shuffling - SAC 05/14/21
															{	if ( ResProj:IntGainsMethod <= 2013)
																then	Format("%g %s %s)", Local( Appl_DryerGain[2] ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) )
                                                else if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
                                                then  Format("%g * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[2], 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
																else	Format("%g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[2], 34, GainCtrlDHWSYS[1]:Name, 34 )  endif endif  }
;                                                then  Format("%g * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[2] / ResProj:ShuffleSFamDHWNum, 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
	"Set ResZn:GainDryer[2]:gnFrRad"			ResZn:GainDryer[2]:gnFrRad	= {	0.  }
	"Set ResZn:GainDryer[2]:gnFrLat"			ResZn:GainDryer[2]:gnFrLat	= {	0.5 }
	"Set ResZn:GainDryer[2]:gnFrZn"			ResZn:GainDryer[2]:gnFrZn	= {	0.3 }
	"Set ResZn:GainDryer[2]:gnEndUse"			ResZn:GainDryer[2]:gnEndUse = {	"Dry" }
	; SAC 6/14/17 - revised rule to ensure CSE_NatGasMETER exists before assigning it (tic #844)
	"Set ResZn:GainDryer[2]:gnMeter"			ResZn:GainDryer[2]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																									then	if ( ResProj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																									else	if (GlobalCompAssigned( Proj:CSE_NatGasMETER )) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif endif  }

	"Create ResZn:GainDryer[3]-Othr"			ResZn:GainDryer[3]				= {	if (Appl_DryerGain[3] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryO" )  endif  }
	"Set ResZn:GainDryer[3] parent cseZone"	ResZn:GainDryer[3]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainDryer[3]:gnPower_x"		ResZn:GainDryer[3]:gnPower_x = { 
																Format("%g %s %s)", Local( Appl_DryerGain[3] ), Local( EqpDaySched_CSE ), Global( ResProj:IntGain_MoMult_CSE ) ) }
	"Set ResZn:GainDryer[3]:gnFrRad"			ResZn:GainDryer[3]:gnFrRad	= {	0.  }
	"Set ResZn:GainDryer[3]:gnFrLat"			ResZn:GainDryer[3]:gnFrLat	= {	0.5 }
	"Set ResZn:GainDryer[3]:gnFrZn"			ResZn:GainDryer[3]:gnFrZn	= {	0.3 }
	"Set ResZn:GainDryer[3]:gnEndUse"			ResZn:GainDryer[3]:gnEndUse = {	"Dry" }
	"Set ResZn:GainDryer[3]:gnMeter"			ResZn:GainDryer[3]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																									then	if ( ResProj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																									else	Proj:CSE_OtherFuelMETER  endif  }
END

; SAC 7/26/16 - added to ensure multiple set of dryer gains, one for each DHWSys for single family models (tic #711)
;*************************************************************************
RULELIST "CreateGainDryer_Zone_2" 1 0 0 0
;*************************************************************************
	"Create ResZn:GainDryer[4]-Elec"			ResZn:GainDryer[4]				= {	if (Appl_DryerGain[1] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryE2" )  endif  }
	"Set ResZn:GainDryer[4] parent cseZone"	ResZn:GainDryer[4]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainDryer[4]:gnPower_x"		ResZn:GainDryer[4]:gnPower_x =          ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
         then  Format("%g * 3412 * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[1], 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
         else  Format("%g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[1], 34, GainCtrlDHWSYS[2]:Name, 34 )  endif  }
;         then  Format("%g * 3412 * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[1] / ResProj:ShuffleSFamDHWNum, 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
	"Set ResZn:GainDryer[4]:gnFrRad"			ResZn:GainDryer[4]:gnFrRad	= {	0.  }
	"Set ResZn:GainDryer[4]:gnFrLat"			ResZn:GainDryer[4]:gnFrLat	= {	0.5 }
	"Set ResZn:GainDryer[4]:gnFrZn"			ResZn:GainDryer[4]:gnFrZn	= {	0.3 }
	"Set ResZn:GainDryer[4]:gnEndUse"			ResZn:GainDryer[4]:gnEndUse = {	"Dry" }
	"Set ResZn:GainDryer[4]:gnMeter"			ResZn:GainDryer[4]:gnMeter	= {	Global( Proj:CSE_ElecMETER ) }

	"Create ResZn:GainDryer[5]-NGas"			ResZn:GainDryer[5]				= {	if (Appl_DryerGain[2] <= 0) then  UNCHANGED
																									else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryG2" )  endif  }
	"Set ResZn:GainDryer[5] parent cseZone"	ResZn:GainDryer[5]:Parent	= {	Local(CSE_ZONE) }
	; SAC 1/3/13 - augmented schedule output to include design sizing data
	"Set ResZn:GainDryer[5]:gnPower_x"		ResZn:GainDryer[5]:gnPower_x =          ; enable SFam DHW draw sched shuffling - SAC 05/14/21
      {  if (IfValidAnd( ResProj:ShuffleSFamDHWNum > 1 ) .AND. GlobalCompAssigned( Proj:CSE_FXHwDHWMETER ))
         then  Format("%g * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[2], 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
         else  Format("%g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", Appl_DryerGain[2], 34, GainCtrlDHWSYS[2]:Name, 34 )  endif  }
;         then  Format("%g * @DHWMETER[%c%s%c].prior.h.CWashr",  Appl_DryerGain[2] / ResProj:ShuffleSFamDHWNum, 34, Proj:CSE_FXHwDHWMETER:Name, 34 )
	"Set ResZn:GainDryer[5]:gnFrRad"			ResZn:GainDryer[5]:gnFrRad	= {	0.  }
	"Set ResZn:GainDryer[5]:gnFrLat"			ResZn:GainDryer[5]:gnFrLat	= {	0.5 }
	"Set ResZn:GainDryer[5]:gnFrZn"			ResZn:GainDryer[5]:gnFrZn	= {	0.3 }
	"Set ResZn:GainDryer[5]:gnEndUse"			ResZn:GainDryer[5]:gnEndUse = {	"Dry" }
	"Set ResZn:GainDryer[5]:gnMeter"			ResZn:GainDryer[5]:gnMeter	= { 	if (StandardsVersion > 2016)		; SAC 11/9/15
																									then	if ( ResProj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																									else	if (GlobalCompAssigned( Proj:CSE_NatGasMETER )) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif endif  }
END

;*************************************************************************
RULELIST "CreateGainDryer_DwellUnitDHW" 1 0 0 0
;*************************************************************************
	"Create DwellUnitDHW:GainDryer[1]-Elec"			DwellUnitDHW:GainDryer[1]				= {	if (UnitClthDryElecGain <= 0) then  UNCHANGED
																															else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryE" )  endif  }
	"Set DwellUnitDHW:GainDryer[1] parent cseZONE"	DwellUnitDHW:GainDryer[1]:Parent		= {	DryerZoneRef:CSE_ZONE  }	; SAC 4/22/16 - make sure gain added to correct Zone
	; SAC 4/22/16 - added accounting for DwellUnit:Count (tic #651)
	"Set DwellUnitDHW:GainDryer[1]:gnPower_x"			DwellUnitDHW:GainDryer[1]:gnPower_x = { 
																		;		Format("%g * %g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", UnitClthDryElecGain, ValidOr( Count, 0 ), 34, GainCtrlDHWSYS:Name, 34 )  }
																				Format("%g * 3412 * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", DwellUnit:UnitClthDryElecGain, 34, cseDHWSYSRef:Name, 34 )  }
	"Set DwellUnitDHW:GainDryer[1]:gnFrRad"			DwellUnitDHW:GainDryer[1]:gnFrRad	= {	0.  }
	"Set DwellUnitDHW:GainDryer[1]:gnFrLat"			DwellUnitDHW:GainDryer[1]:gnFrLat	= {	0.5 }
   ; prevent tracking Zone loads for Central (MFam) laundries - SAC 08/03/20 (MFamProto)
	"Set DwellUnitDHW:GainDryer[1]:gnFrZn"				DwellUnitDHW:GainDryer[1]:gnFrZn		= {	if (IfValidAnd( DwellUnitTypeRef:DryerOption = 2 )) then  0
                                                                                             else  0.3  endif  }
	"Set DwellUnitDHW:GainDryer[1]:gnEndUse"			DwellUnitDHW:GainDryer[1]:gnEndUse	= {	"Dry" }
	"Set DwellUnitDHW:GainDryer[1]:gnMeter"			DwellUnitDHW:GainDryer[1]:gnMeter	= {	Global( Proj:CSE_ElecMETER ) }

	"Create DwellUnitDHW:GainDryer[2]-NGas"			DwellUnitDHW:GainDryer[2]				= {	if (DwellUnit:UnitClthDryGasGain <= 0) then  UNCHANGED
																															else  CreateComp( cseGAIN, substr( Name, 0, 47 ) + "-znCDryG" )  endif  }
	"Set DwellUnitDHW:GainDryer[2] parent cseZONE"	DwellUnitDHW:GainDryer[2]:Parent		= {	DryerZoneRef:CSE_ZONE  }	; SAC 4/22/16 - make sure gain added to correct Zone
	; SAC 4/22/16 - added accounting for DwellUnit:Count (tic #651)
	"Set DwellUnitDHW:GainDryer[2]:gnPower_x"			DwellUnitDHW:GainDryer[2]:gnPower_x = { 
																		;		Format("%g * %g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", UnitClthDryGasGain, ValidOr( Count, 0 ), 34, cseDHWSYSRef:Name, 34 )  }
																				Format("%g * @DHWSYS[%c%s%c].FxUseMixLH.CWashr", DwellUnit:UnitClthDryGasGain, 34, cseDHWSYSRef:Name, 34 )  }
	"Set DwellUnitDHW:GainDryer[2]:gnFrRad"			DwellUnitDHW:GainDryer[2]:gnFrRad	= {	0.  }
	"Set DwellUnitDHW:GainDryer[2]:gnFrLat"			DwellUnitDHW:GainDryer[2]:gnFrLat	= {	0.5 }
   ; prevent tracking ZOne loads for Central (MFam) laundries - SAC 08/03/20 (MFamProto)
	"Set DwellUnitDHW:GainDryer[2]:gnFrZn"				DwellUnitDHW:GainDryer[2]:gnFrZn		= {	if (IfValidAnd( DwellUnitTypeRef:DryerOption = 2 )) then  0
                                                                                             else  0.3  endif  }
	"Set DwellUnitDHW:GainDryer[2]:gnEndUse"			DwellUnitDHW:GainDryer[2]:gnEndUse	= {	"Dry" }
	"Set DwellUnitDHW:GainDryer[2]:gnMeter"			DwellUnitDHW:GainDryer[2]:gnMeter	= { 	if (ResProj:StdsVersionYr > 2016)		; SAC 11/9/15   ; SAC 10/09/22
																															then	if ( ResProj:Fuel_HaveNatGas) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif
																															else	if (GlobalCompAssigned( Proj:CSE_NatGasMETER )) then  Proj:CSE_NatGasMETER  else  Proj:CSE_OtherFuelMETER  endif endif  }
END
;*************************************************************************


; SAC 9/7/12 - new (simpler) attic bypass diode stuff via IZXFER
; SAC 10/17/14 - modified to operate on CeilingBelowAttic rather than Zone (to accommodate multiple attics)
;*************************************************************************
RULELIST "SimPrep_SetupClgBelowAtticBypassDiode" 1 0 0 0
;*************************************************************************
	"Create ResCeilingBelowAttic:AtticBypassIZXFER"				ResCeilingBelowAttic:AtticBypassIZXFER	= {	if (LocalCompAssigned( AtticZone:CSE_ZONE ) < 1 .OR. ParentCompAssigned( CSE_ZONE ) < 1) then  UNDEFINED
																																	else  CreateComp( cseIZXFER, substr( Name, 0, 44 ) + "-BypassxA" )  endif  }
	"Set ResCeilingBelowAttic:AtticBypassIZXFER:izZn1"			ResCeilingBelowAttic:AtticBypassIZXFER:izZn1			= {	ResZn:CSE_ZONE		  }
	"Set ResCeilingBelowAttic:AtticBypassIZXFER:izZN2"			ResCeilingBelowAttic:AtticBypassIZXFER:izZN2   		= {	AtticZone:CSE_ZONE  }
	"Set ResCeilingBelowAttic:AtticBypassIZXFER:izNVType"		ResCeilingBelowAttic:AtticBypassIZXFER:izNVType		= {	1  }		; "NONE" - No interzone ventilation
	"Set ResCeilingBelowAttic:AtticBypassIZXFER:izHConst_x"	ResCeilingBelowAttic:AtticBypassIZXFER:izHConst_x	= {	
													Format( "%g * %g * select(@znRes[%c%s%c].prior.H.tAir - @znRes[%c%s%c].prior.H.tAir > 0., 1., default 0.)",
													ICQAtticBypassUAMult, Area, 34, ParentRef( CSE_ZONE:Name ), 34, 34, LocalRef( AtticZone:CSE_ZONE:Name ), 34 )  }     ; SAC 5/9/18 - switched from Global to Local ICQAtticBypassUAMult (tic #775)
END
;*************************************************************************


;*************************************************************************
;*************************************************************************

ENDFILE
